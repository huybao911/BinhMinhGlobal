[{"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\index.tsx":"1","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\store.ts":"2","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\App.tsx":"3","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\AppLoader.tsx":"4","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\index.ts":"5","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\sManager.ts":"6","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\admin.ts":"7","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\Manager.ts":"8","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\user.ts":"9","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\alert.ts":"10","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\utils\\headers.ts":"11","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\user.ts":"12","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\sManager.ts":"13","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\Manager.ts":"14","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\admin.ts":"15","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\sidebar.tsx":"16","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\alert\\Alert.tsx":"17","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\Routes.tsx":"18","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\homepage\\HeaderHome.tsx":"19","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\alert.ts":"20","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\types.ts":"21","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\alert\\AlertItem.tsx":"22","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\navSelection.tsx":"23","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\SManagerRoute.tsx":"24","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\ManagerRoute.tsx":"25","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\AdminRoute.tsx":"26","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\PrivateRoute.tsx":"27","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\GuestRoute.tsx":"28","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\style.tsx":"29","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\constant\\routesProps.ts":"30","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\dataConfig.tsx":"31","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\not-found\\NotFound.tsx":"32","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\Profile.tsx":"33","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\StorageEvent.tsx":"34","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\DetailContent2.tsx":"35","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\ApplyJob.tsx":"36","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedDetailStorage.tsx":"37","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\ManageJob.tsx":"38","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\DetailContent1.tsx":"39","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\NewJobEvent.tsx":"40","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListCTVCalendar.tsx":"41","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListCTVEvent.tsx":"42","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListCTVExcel.tsx":"43","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListUserApplyEvent.tsx":"44","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\NewComment.tsx":"45","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\Events.tsx":"46","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\ApproveEvents.tsx":"47","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\SManager.tsx":"48","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\JobEvents.tsx":"49","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\AddDepartment.tsx":"50","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\Events.tsx":"51","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\Users.tsx":"52","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\NewEvent.tsx":"53","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\Department.tsx":"54","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\JobFromEvent.tsx":"55","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\Login.tsx":"56","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\LoginUser.tsx":"57","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\Register.tsx":"58","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\RegisterUser.tsx":"59","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\DetailGuest1.tsx":"60","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\DetailGuest2.tsx":"61","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\Guest.tsx":"62","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\CreateEvent.tsx":"63","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\UserForm.tsx":"64","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\UpdateComment.tsx":"65","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\FeedContent.tsx":"66","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\FeedDetailContent.tsx":"67","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedManageJob.tsx":"68","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\UpdateJobEvent.tsx":"69","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\UpdateDepartment.tsx":"70","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\FeedGuest.tsx":"71","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\FeedDetailGuest.tsx":"72","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormDepartment_Admin.tsx":"73","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\UpdateEvent.tsx":"74","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\UpdateCoefficient.tsx":"75","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormFieldRole.tsx":"76","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormField.tsx":"77","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormEvent-Manager.tsx":"78","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\FormFieldDepartment.tsx":"79","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\CreateJobEvent.tsx":"80","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedApplyJob.tsx":"81","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedStorageEvent.tsx":"82","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\UpdateProfile.tsx":"83","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\Content.tsx":"84","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\EventAccept.tsx":"85","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormDepartment_User.tsx":"86","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\index.tsx":"87","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\store.ts":"88","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\App.tsx":"89","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\AppLoader.tsx":"90","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\actions\\admin.ts":"91","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\utils\\headers.ts":"92","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\sidebar.tsx":"93","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\Routes.tsx":"94","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\reducers\\index.ts":"95","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\actions\\types.ts":"96","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\navSelection.tsx":"97","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\constant\\routesProps.ts":"98","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\GuestRoute.tsx":"99","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\AdminRoute.tsx":"100","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\reducers\\admin.ts":"101","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\dataConfig.tsx":"102","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\style.tsx":"103","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\Login.tsx":"104","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\Product.tsx":"105","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Guest.tsx":"106","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\TypeProduct.tsx":"107","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\NewProduct.tsx":"108","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\User.tsx":"109","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\NewTypeProduct.tsx":"110","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UserForm.tsx":"111","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\CreateTypeProduct.tsx":"112","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\CreateProduct.tsx":"113","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UpdateTypeProduct.tsx":"114","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormFieldRole.tsx":"115","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormTypeProduct.tsx":"116","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormField.tsx":"117","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UpdateProduct.tsx":"118","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\data.tsx":"119","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\LoaiSanPham1.tsx":"120","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\LoaiSanPham2.tsx":"121","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ImageData.tsx":"122","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ImageSlider.tsx":"123","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\DetailSanPham.tsx":"124","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\City.tsx":"125","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\AddCity.tsx":"126","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UpdateCity.tsx":"127","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Order.tsx":"128","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Cart.tsx":"129","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormCity.tsx":"130","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\reducers\\user.ts":"131","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\PrivateRoute.tsx":"132","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\actions\\user.ts":"133","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\OrderCart.tsx":"134","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\LoaiSanPham.tsx":"135","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachThanhToan.tsx":"136","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachGiaoHang.tsx":"137","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachBaoHanh.tsx":"138","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachBaoMat.tsx":"139","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New1.tsx":"140","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New2.tsx":"141","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New3.tsx":"142","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New.tsx":"143","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Pagination.js":"144","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormCityIpad.tsx":"145","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormCityMobile.tsx":"146"},{"size":455,"mtime":1684431098000,"results":"147","hashOfConfig":"148"},{"size":420,"mtime":1684431098000,"results":"149","hashOfConfig":"148"},{"size":2169,"mtime":1684431098000,"results":"150","hashOfConfig":"148"},{"size":618,"mtime":1684431098000,"results":"151","hashOfConfig":"148"},{"size":373,"mtime":1684431098000,"results":"152","hashOfConfig":"148"},{"size":3147,"mtime":1684598928846,"results":"153","hashOfConfig":"148"},{"size":3362,"mtime":1684431098000,"results":"154","hashOfConfig":"148"},{"size":4616,"mtime":1684431098000,"results":"155","hashOfConfig":"148"},{"size":3316,"mtime":1684431098000,"results":"156","hashOfConfig":"148"},{"size":511,"mtime":1684431098000,"results":"157","hashOfConfig":"148"},{"size":971,"mtime":1684431098000,"results":"158","hashOfConfig":"148"},{"size":10750,"mtime":1685634392295,"results":"159","hashOfConfig":"148"},{"size":9773,"mtime":1685634388819,"results":"160","hashOfConfig":"148"},{"size":18628,"mtime":1685634381712,"results":"161","hashOfConfig":"148"},{"size":11261,"mtime":1685634374760,"results":"162","hashOfConfig":"148"},{"size":7450,"mtime":1684431098000,"results":"163","hashOfConfig":"148"},{"size":880,"mtime":1684431098000,"results":"164","hashOfConfig":"148"},{"size":1359,"mtime":1684431098000,"results":"165","hashOfConfig":"148"},{"size":5579,"mtime":1684431098000,"results":"166","hashOfConfig":"148"},{"size":772,"mtime":1684431098000,"results":"167","hashOfConfig":"148"},{"size":2892,"mtime":1684431098000,"results":"168","hashOfConfig":"148"},{"size":571,"mtime":1684431098000,"results":"169","hashOfConfig":"148"},{"size":4826,"mtime":1684431098000,"results":"170","hashOfConfig":"148"},{"size":1457,"mtime":1684431098000,"results":"171","hashOfConfig":"148"},{"size":1455,"mtime":1684431098000,"results":"172","hashOfConfig":"148"},{"size":1276,"mtime":1684431098000,"results":"173","hashOfConfig":"148"},{"size":1445,"mtime":1684431098000,"results":"174","hashOfConfig":"148"},{"size":1623,"mtime":1684431098000,"results":"175","hashOfConfig":"148"},{"size":1904,"mtime":1684431098000,"results":"176","hashOfConfig":"148"},{"size":6643,"mtime":1684599966847,"results":"177","hashOfConfig":"148"},{"size":2003,"mtime":1684756812877,"results":"178","hashOfConfig":"148"},{"size":188,"mtime":1684431098000,"results":"179","hashOfConfig":"148"},{"size":1041,"mtime":1684431098000,"results":"180","hashOfConfig":"148"},{"size":3350,"mtime":1684431098000,"results":"181","hashOfConfig":"148"},{"size":16010,"mtime":1684431098000,"results":"182","hashOfConfig":"148"},{"size":1313,"mtime":1684431098000,"results":"183","hashOfConfig":"148"},{"size":15261,"mtime":1684431098000,"results":"184","hashOfConfig":"148"},{"size":1301,"mtime":1684431098000,"results":"185","hashOfConfig":"148"},{"size":15970,"mtime":1684431098000,"results":"186","hashOfConfig":"148"},{"size":1161,"mtime":1684431098000,"results":"187","hashOfConfig":"148"},{"size":11547,"mtime":1684431098000,"results":"188","hashOfConfig":"148"},{"size":18115,"mtime":1684431098000,"results":"189","hashOfConfig":"148"},{"size":19565,"mtime":1684431098000,"results":"190","hashOfConfig":"148"},{"size":20409,"mtime":1684556252472,"results":"191","hashOfConfig":"148"},{"size":1100,"mtime":1684431098000,"results":"192","hashOfConfig":"148"},{"size":22408,"mtime":1684599321187,"results":"193","hashOfConfig":"148"},{"size":15290,"mtime":1684505236649,"results":"194","hashOfConfig":"148"},{"size":10805,"mtime":1684431098000,"results":"195","hashOfConfig":"148"},{"size":11119,"mtime":1684431098000,"results":"196","hashOfConfig":"148"},{"size":6220,"mtime":1684431098000,"results":"197","hashOfConfig":"148"},{"size":12059,"mtime":1684431098000,"results":"198","hashOfConfig":"148"},{"size":14208,"mtime":1684757305431,"results":"199","hashOfConfig":"148"},{"size":1102,"mtime":1684431098000,"results":"200","hashOfConfig":"148"},{"size":13747,"mtime":1684431098000,"results":"201","hashOfConfig":"148"},{"size":19067,"mtime":1684504509248,"results":"202","hashOfConfig":"148"},{"size":8540,"mtime":1684431098000,"results":"203","hashOfConfig":"148"},{"size":15969,"mtime":1685198510466,"results":"204","hashOfConfig":"148"},{"size":11653,"mtime":1684431098000,"results":"205","hashOfConfig":"148"},{"size":12865,"mtime":1685635695980,"results":"206","hashOfConfig":"148"},{"size":14450,"mtime":1684431098000,"results":"207","hashOfConfig":"148"},{"size":14459,"mtime":1684431098000,"results":"208","hashOfConfig":"148"},{"size":11065,"mtime":1684431098000,"results":"209","hashOfConfig":"148"},{"size":12032,"mtime":1684431098000,"results":"210","hashOfConfig":"148"},{"size":3106,"mtime":1684431098000,"results":"211","hashOfConfig":"148"},{"size":3239,"mtime":1684431098000,"results":"212","hashOfConfig":"148"},{"size":8412,"mtime":1684431098000,"results":"213","hashOfConfig":"148"},{"size":16041,"mtime":1684505573677,"results":"214","hashOfConfig":"148"},{"size":7257,"mtime":1684656830845,"results":"215","hashOfConfig":"148"},{"size":11579,"mtime":1684503609413,"results":"216","hashOfConfig":"148"},{"size":2441,"mtime":1684431098000,"results":"217","hashOfConfig":"148"},{"size":7403,"mtime":1684431098000,"results":"218","hashOfConfig":"148"},{"size":8344,"mtime":1684505364128,"results":"219","hashOfConfig":"148"},{"size":3229,"mtime":1685635738895,"results":"220","hashOfConfig":"148"},{"size":11611,"mtime":1684431098000,"results":"221","hashOfConfig":"148"},{"size":3847,"mtime":1684431098000,"results":"222","hashOfConfig":"148"},{"size":2578,"mtime":1684431098000,"results":"223","hashOfConfig":"148"},{"size":2693,"mtime":1684431098000,"results":"224","hashOfConfig":"148"},{"size":3136,"mtime":1684431098000,"results":"225","hashOfConfig":"148"},{"size":1886,"mtime":1684431098000,"results":"226","hashOfConfig":"148"},{"size":13084,"mtime":1684503584173,"results":"227","hashOfConfig":"148"},{"size":9549,"mtime":1684512137476,"results":"228","hashOfConfig":"148"},{"size":10370,"mtime":1684431098000,"results":"229","hashOfConfig":"148"},{"size":23618,"mtime":1684431098000,"results":"230","hashOfConfig":"148"},{"size":15901,"mtime":1684431744153,"results":"231","hashOfConfig":"148"},{"size":10828,"mtime":1684600256968,"results":"232","hashOfConfig":"148"},{"size":3302,"mtime":1685638440233,"results":"233","hashOfConfig":"148"},{"size":479,"mtime":1687693771020,"results":"234","hashOfConfig":"235"},{"size":437,"mtime":1687354218424,"results":"236","hashOfConfig":"235"},{"size":1637,"mtime":1689083198555,"results":"237","hashOfConfig":"235"},{"size":647,"mtime":1687353240655,"results":"238","hashOfConfig":"235"},{"size":13274,"mtime":1689182041132,"results":"239","hashOfConfig":"235"},{"size":538,"mtime":1687691167157,"results":"240","hashOfConfig":"235"},{"size":4907,"mtime":1688654223794,"results":"241","hashOfConfig":"235"},{"size":1002,"mtime":1688648492118,"results":"242","hashOfConfig":"235"},{"size":255,"mtime":1688648107849,"results":"243","hashOfConfig":"235"},{"size":1356,"mtime":1688653364891,"results":"244","hashOfConfig":"235"},{"size":3030,"mtime":1688654173158,"results":"245","hashOfConfig":"235"},{"size":5171,"mtime":1688983397981,"results":"246","hashOfConfig":"235"},{"size":1078,"mtime":1688648539791,"results":"247","hashOfConfig":"235"},{"size":906,"mtime":1688649819781,"results":"248","hashOfConfig":"235"},{"size":5999,"mtime":1688653498845,"results":"249","hashOfConfig":"235"},{"size":985,"mtime":1688651168020,"results":"250","hashOfConfig":"235"},{"size":2012,"mtime":1687351940053,"results":"251","hashOfConfig":"235"},{"size":6469,"mtime":1688746110623,"results":"252","hashOfConfig":"235"},{"size":19018,"mtime":1687792630213,"results":"253","hashOfConfig":"235"},{"size":106611,"mtime":1689218596214,"results":"254","hashOfConfig":"235"},{"size":17706,"mtime":1687284110787,"results":"255","hashOfConfig":"235"},{"size":1174,"mtime":1687283638754,"results":"256","hashOfConfig":"235"},{"size":13106,"mtime":1688746150977,"results":"257","hashOfConfig":"235"},{"size":1217,"mtime":1687284473562,"results":"258","hashOfConfig":"235"},{"size":2902,"mtime":1687357822391,"results":"259","hashOfConfig":"235"},{"size":5112,"mtime":1687284419694,"results":"260","hashOfConfig":"235"},{"size":9940,"mtime":1687792225126,"results":"261","hashOfConfig":"235"},{"size":3449,"mtime":1687284232888,"results":"262","hashOfConfig":"235"},{"size":2685,"mtime":1687280740106,"results":"263","hashOfConfig":"235"},{"size":3303,"mtime":1687282267905,"results":"264","hashOfConfig":"235"},{"size":2121,"mtime":1687282234670,"results":"265","hashOfConfig":"235"},{"size":7993,"mtime":1687792554019,"results":"266","hashOfConfig":"235"},{"size":223,"mtime":1687434259338,"results":"267","hashOfConfig":"235"},{"size":46710,"mtime":1689219291964,"results":"268","hashOfConfig":"235"},{"size":46710,"mtime":1689219312834,"results":"269","hashOfConfig":"235"},{"size":172,"mtime":1687709515083,"results":"270","hashOfConfig":"235"},{"size":2045,"mtime":1687709502337,"results":"271","hashOfConfig":"235"},{"size":49110,"mtime":1689219997837,"results":"272","hashOfConfig":"235"},{"size":17357,"mtime":1688117152792,"results":"273","hashOfConfig":"235"},{"size":6464,"mtime":1688117153962,"results":"274","hashOfConfig":"235"},{"size":3302,"mtime":1688117155263,"results":"275","hashOfConfig":"235"},{"size":38507,"mtime":1689219148840,"results":"276","hashOfConfig":"235"},{"size":95083,"mtime":1689217370957,"results":"277","hashOfConfig":"235"},{"size":3229,"mtime":1688649243804,"results":"278","hashOfConfig":"235"},{"size":2303,"mtime":1688648071456,"results":"279","hashOfConfig":"235"},{"size":1086,"mtime":1688648494117,"results":"280","hashOfConfig":"235"},{"size":3370,"mtime":1689182046423,"results":"281","hashOfConfig":"235"},{"size":18921,"mtime":1688656658066,"results":"282","hashOfConfig":"235"},{"size":48370,"mtime":1689219275546,"results":"283","hashOfConfig":"235"},{"size":36516,"mtime":1689089473166,"results":"284","hashOfConfig":"235"},{"size":33394,"mtime":1689089279674,"results":"285","hashOfConfig":"235"},{"size":36082,"mtime":1689088586528,"results":"286","hashOfConfig":"235"},{"size":34802,"mtime":1689088891333,"results":"287","hashOfConfig":"235"},{"size":51336,"mtime":1689088248747,"results":"288","hashOfConfig":"235"},{"size":49526,"mtime":1689086806008,"results":"289","hashOfConfig":"235"},{"size":32158,"mtime":1689087131293,"results":"290","hashOfConfig":"235"},{"size":50235,"mtime":1689161805508,"results":"291","hashOfConfig":"235"},{"size":818,"mtime":1688987979611,"results":"292","hashOfConfig":"235"},{"size":3229,"mtime":1689172504648,"results":"293","hashOfConfig":"235"},{"size":3229,"mtime":1689173892177,"results":"294","hashOfConfig":"235"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},"5d0xln",{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"297"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"349","messages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"297"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"297"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"297"},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"297"},{"filePath":"379","messages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"297"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"297"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"297"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"297"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"297"},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"297"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"297"},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"297"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"297"},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"420","usedDeprecatedRules":"297"},{"filePath":"421","messages":"422","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"423","messages":"424","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"425","usedDeprecatedRules":"297"},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"428","usedDeprecatedRules":"297"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"297"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"297"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"439","usedDeprecatedRules":"297"},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"442","usedDeprecatedRules":"297"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"297"},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"297"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"297"},{"filePath":"454","messages":"455","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"297"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"297"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"297"},{"filePath":"465","messages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"297"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"297"},{"filePath":"473","messages":"474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"477","messages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"479","messages":"480","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"481","messages":"482","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"483","messages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"485","messages":"486","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"487","usedDeprecatedRules":"297"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"297"},{"filePath":"491","messages":"492","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"297"},{"filePath":"493","messages":"494","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"297"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"297"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},"3m3tfs",{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"503"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":46,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"503"},{"filePath":"518","messages":"519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"520","messages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"522","messages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"524","messages":"525","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"503"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":94,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"547","messages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"549","messages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"503"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"503"},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"503"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"503"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"503"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"576"},{"filePath":"577","messages":"578","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"585","usedDeprecatedRules":"503"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"503"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"595","messages":"596","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"597","messages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"503"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"503"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"610","usedDeprecatedRules":"503"},{"filePath":"611","messages":"612","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"613","messages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"503"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"503"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"503"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"503"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"503"},{"filePath":"628","messages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"503"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"633","usedDeprecatedRules":"503"},{"filePath":"634","messages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"636","usedDeprecatedRules":"503"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"639","usedDeprecatedRules":"640"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"503"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"503"},"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\index.tsx",[],["647","648"],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\store.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\App.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\AppLoader.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\index.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\sManager.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\admin.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\Manager.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\user.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\reducers\\alert.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\utils\\headers.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\user.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\sManager.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\Manager.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\admin.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\sidebar.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\alert\\Alert.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\Routes.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\homepage\\HeaderHome.tsx",["649","650","651","652","653","654","655","656","657"],"import React from \"react\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\nimport { logOutUser } from \"redux/actions/user\";\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\nimport { Person, Notifications } from '@mui/icons-material';\n\nimport { AppBar, Box, Toolbar, Typography, Stack, Popover, MenuItem, Avatar, IconButton, Divider } from \"@mui/material\"\nimport { NavLink } from \"react-router-dom\";\nconst StyledRoot = styled(AppBar)(() => ({\n  boxShadow: 'none',\n  width: '100%',\n  backgroundColor: 'white',\n  fontWeight: 'bold',\n}));\n\nconst Homepage: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const openUser = Boolean(anchorElUser);\n  const handleClickUser = (event: any) => {\n    setAnchorElUser(event.currentTarget);\n  };\n  const handleCloseUser = () => {\n    setAnchorElUser(null);\n  };\n\n  const user = useSelector((state: RootState) => state.user);\n\n  const userHeader = user.isAuthenticated && window.location.pathname.includes('/storageEvent') || user.isAuthenticated && window.location.pathname.includes('/applyJob') || user.isAuthenticated && window.location.pathname.includes('/profile') || user.isAuthenticated && window.location.pathname.includes('/manageJob') ? (\n    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n      <Toolbar>\n        <NavLink style={{ textDecoration: 'none' }} to={'/user'}>\n          <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n        </NavLink>\n        <Typography align='left' style={{ flexGrow: 1 }}></Typography>\n        <div className=\"verticalLine\">\n        </div>\n        <Box>\n          <IconButton href='' style={{ color: \"white\" }}>\n            <Notifications />\n          </IconButton>\n        </Box>\n        <Stack\n          direction=\"row\"\n          alignItems=\"center\"\n          spacing={{\n            xs: 0.5,\n            sm: 1,\n          }}\n          sx={{ margin: 3, color: 'black' }}\n        >\n          <Box style={{\n            display: 'flex', alignItems: 'center', textAlign: 'center'\n          }}>\n            <IconButton onClick={(event) => handleClickUser(event)}\n              sx={{\n                p: 0,\n\n              }}>\n              <Person style={{ color: \"black\" }} />\n            </IconButton>\n\n            <Popover\n              open={openUser}\n              anchorEl={anchorElUser}\n              onClose={handleCloseUser}\n              anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n              sx={{ marginLeft: 1 }}\n              PaperProps={{\n                style: {\n                  borderRadius: 20,\n                  boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                },\n                sx: {\n                  p: 1,\n                  width: 220,\n                  overflowX: 'unset',\n                  overflowY: 'unset',\n                  '& .MuiMenuItem-root': {\n                    px: 1,\n                    py: 1,\n                    typography: 'body2',\n                    borderRadius: 1,\n                    justifyContent: 'left'\n                  },\n                  '& .MuiAvatar-root': {\n                    width: 32,\n                    height: 32,\n                    ml: -0.5,\n                    mt: 1,\n                    mr: 1,\n                  },\n                },\n              }}\n            >\n\n              <BoxSpan />\n              <Stack sx={{ p: 0.5 }} >\n                <StyledMenuItem component={NavLink} to={'/profile'} >\n                  <Box display={\"flex\"}>\n                    <Box>\n                      <Avatar src={user.user.avatar}/>\n                    </Box>\n                    <Box flexDirection={'column'}>\n                      <Typography style={{ fontWeight: 500, fontSize: '14px' }}>{user.user.username}</Typography>\n                      <Typography style={{ color: \"#637381\", fontSize: '13.5px' }} >{user.user.email}</Typography>\n                    </Box>\n                  </Box>\n                </StyledMenuItem>\n\n                <Divider sx={{ borderStyle: 'dashed' }} />\n\n                <StyledMenuItem component={NavLink} to={'/storageEvent'}>\n                  <Typography style={{ fontSize: '14px' }}>Sự Kiện Đã Lưu</Typography>\n                </StyledMenuItem>\n\n                <StyledMenuItem component={NavLink} to={'/applyJob'}>\n                  <Typography style={{ fontSize: '14px', float: 'left' }}>Công việc Đã Ứng Tuyển</Typography>\n                </StyledMenuItem>\n\n                <StyledMenuItem component={NavLink} to={'/manageJob'}>\n                  <Typography style={{ fontSize: '14px', float: 'left' }}>Quản Lý Công việc</Typography>\n                </StyledMenuItem>\n\n                <Divider sx={{ borderStyle: 'dashed' }} />\n\n                <MenuItem className=\"navbar-logout\" onClick={(e) => dispatch(logOutUser())}>\n                  <Typography style={{ fontSize: '14px' }}> Đăng Xuất</Typography>\n                </MenuItem>\n              </Stack>\n\n            </Popover>\n          </Box>\n        </Stack>\n      </Toolbar>\n    </StyledRoot>\n  ) : null\n\n  React.useEffect(() => {\n    document.title = \"TRANG CHỦ \";\n  }, []);\n  return (\n    <>\n      {userHeader}\n    </>\n  );\n};\n\nexport default Homepage;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\alert.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\redux\\actions\\types.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\alert\\AlertItem.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\navSelection.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\SManagerRoute.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\ManagerRoute.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\AdminRoute.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\PrivateRoute.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\components\\routing\\GuestRoute.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\style.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\constant\\routesProps.ts",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\layouts\\navigation\\dataConfig.tsx",["658","659"],"import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LeaderboardIcon from '@mui/icons-material/Leaderboard'\nimport EventIcon from '@mui/icons-material/Event';\nimport SchoolIcon from '@mui/icons-material/School';\nimport WorkOutlineIcon from '@mui/icons-material/WorkOutline';\nimport EventAvailableIcon from '@mui/icons-material/EventAvailable';\nimport ListAltIcon from '@mui/icons-material/ListAlt';\nimport RecentActorsIcon from '@mui/icons-material/RecentActors';\n\nexport const dataAdmin = [\n    {\n        icon: <LeaderboardIcon style={{width: '18px'}} />,\n        name: 'Bảng Điều Khiển',\n        path: '/*'\n    },\n\n    {\n        icon: <AccountCircleIcon style={{width: '18px'}} />,\n        name: 'Người Dùng',\n        path: '/users'\n    },\n    {\n        icon: <EventIcon style={{width: '18px'}} />,\n        name: 'Sự Kiện',\n        path: '/eventAdmin'\n    },\n    {\n        icon: <WorkOutlineIcon style={{width: '18px'}}/>,\n        name: 'Công Việc Sự Kiện',\n        path: '/jobEventAdmin'\n    },\n    {\n        icon: <SchoolIcon style={{width: '18px'}}/>,\n        name: 'Khoa',\n        path: '/department'\n    },\n];\n\nexport const dataSManager = [\n    {\n        icon: <LeaderboardIcon style={{width: '18px'}} />,\n        name: 'Bảng Điều Khiển',\n        path: '/*'\n    },\n\n    {\n        icon: <AccountCircleIcon style={{width: '18px'}}/>,\n        name: 'User',\n        path: '/smanager'\n    },\n    {\n        icon: <EventAvailableIcon style={{width: '18px'}}/>,\n        name: 'Duyệt Sự Kiện',\n        path: '/approveEvent'\n    },\n    {\n        icon: <EventIcon style={{width: '18px'}}/>,\n        name: 'Sự Kiện Đã Duyệt',\n        path: '/eventAccept'\n    },\n];\n\nexport const dataManager = [\n    {\n        icon: <LeaderboardIcon style={{width: '18px'}}/>,\n        name: 'Bảng Điều Khiển',\n        path: '/*'\n    },\n    {\n        icon: <EventIcon style={{width: '18px'}}/>,\n        name: 'Sự Kiện',\n        path: '/event'\n    },\n];","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\not-found\\NotFound.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\Profile.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\StorageEvent.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\DetailContent2.tsx",["660","661","662","663","664","665","666","667","668","669"],"import * as React from \"react\";\nimport { styled, alpha, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { logOutUser } from \"redux/actions/user\";\nimport { Box, OutlinedInput, InputAdornment, TextField, Toolbar, AppBar, Typography, Avatar, ListItemIcon, Divider, MenuItem as MenuItemDepartment, IconButton, Stack, Popover, MenuItem } from '@mui/material';\n\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedContent from \"pages/contents/FeedContent\";\nimport FeedDetailContent from \"pages/contents/FeedDetailContent\";\n\nimport { purple } from '@mui/material/colors';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport {  Person, Notifications } from '@mui/icons-material';\n\nimport { Link, NavLink, useParams } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\ninterface RouteParams {\n    id: string\n}\nconst DetailContent: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [eventDetails, setEventDetails] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setEventDetails(() =>\n            user?.events?.filter((event: any) =>\n                event._id == params.id\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box sx={{ fontSize: '12px', position: \"start\" }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ | CTV\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/user'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={{\n                                xs: 0.5,\n                                sm: 1,\n                            }}\n                            sx={{ margin: 3, color: 'black' }}\n                        >\n                            <Box sx={{\n                                display: 'flex', alignItems: 'center', textAlign: 'center'\n                            }}>\n                                <IconButton onClick={(event) => handleClickUser(event)}\n                                    sx={{\n                                        p: 0,\n\n                                    }}>\n                                    <Person style={{ color: \"black\" }} />\n                                </IconButton>\n\n                                <Popover\n                                    open={openUser}\n                                    anchorEl={anchorElUser}\n                                    onClose={handleCloseUser}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                    sx={{ marginLeft: 1 }}\n                                    PaperProps={{\n                                        style: {\n                                            borderRadius: 20,\n                                            boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                        },\n                                        sx: {\n                                            p: 1,\n                                            width: 220,\n                                            overflowX: 'unset',\n                                            overflowY: 'unset',\n                                            '& .MuiMenuItem-root': {\n                                                px: 1,\n                                                py: 1,\n                                                typography: 'body2',\n                                                borderRadius: 1,\n                                                justifyContent: 'left'\n                                            },\n                                            '& .MuiAvatar-root': {\n                                                width: 32,\n                                                height: 32,\n                                                ml: -0.5,\n                                                mt: 1,\n                                                mr: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n\n                                    <BoxSpan />\n                                    <Stack sx={{ p: 0.5 }} >\n                                        <StyledMenuItem component={NavLink} to={'/profile'} >\n                                            <Box display={\"flex\"}>\n                                                <Box>\n                                                    <Avatar src={user.user.avatar}/>\n                                                </Box>\n                                                <Box flexDirection={'column'}>\n                                                    <Typography style={{ fontWeight: 500, fontSize: '14px' }}>{user.user.username}</Typography>\n                                                    <Typography style={{ color: \"#637381\", fontSize: '13.5px' }} >{user.user.email}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <StyledMenuItem component={NavLink} to={'/storageEvent'}>\n                                            <Typography style={{ fontSize: '14px' }}>Sự Kiện Đã Lưu</Typography>\n                                        </StyledMenuItem>\n\n                                        <StyledMenuItem component={NavLink} to={'/applyJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Công Việc Đã Ứng Tuyển</Typography>\n                                        </StyledMenuItem>\n                                        \n                                        <StyledMenuItem component={NavLink} to={'/manageJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Quản Lý Công việc</Typography>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <MenuItem className=\"navbar-logout\" onClick={(e) => dispatch(logOutUser())}>\n                                            <Typography style={{ fontSize: '14px' }}> Đăng Xuất</Typography>\n                                        </MenuItem>\n                                    </Stack>\n\n                                </Popover>\n                            </Box>\n                        </Stack>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <Link style={{ textDecoration: \"none\" }} to={`/event1/${event._id}`}>\n                                            <FeedContent event={event} key={event._id} />\n                                        </Link>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {eventDetails.map((event: any) =>\n                                    <Box style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailContent event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", height: \"410px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default DetailContent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\ApplyJob.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedDetailStorage.tsx",["670","671","672","673","674","675","676","677","678","679"],"import * as React from \"react\";\nimport { styled, alpha, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { logOutUser } from \"redux/actions/user\";\nimport { Box, OutlinedInput, InputAdornment, TextField, Toolbar, AppBar, Typography, Avatar, ListItemIcon, Divider, MenuItem as MenuItemDepartment, IconButton, Stack, Popover, MenuItem } from '@mui/material';\n\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedContent from \"pages/contents/FeedContent\";\nimport FeedDetailContent from \"pages/contents/FeedDetailContent\";\n\nimport { purple } from '@mui/material/colors';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Person, Notifications } from '@mui/icons-material';\n\nimport { Link, NavLink, useParams } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\ninterface RouteParams {\n    id: string\n}\nconst DetailContent: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n            event._id == params.id\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box sx={{ fontSize: '12px', position: \"start\" }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ | CTV\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/user'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={{\n                                xs: 0.5,\n                                sm: 1,\n                            }}\n                            sx={{ margin: 3, color: 'black' }}\n                        >\n                            <Box sx={{\n                                display: 'flex', alignItems: 'center', textAlign: 'center'\n                            }}>\n                                <IconButton onClick={(event) => handleClickUser(event)}\n                                    sx={{\n                                        p: 0,\n\n                                    }}>\n                                    <Person style={{ color: \"black\" }} />\n                                </IconButton>\n\n                                <Popover\n                                    open={openUser}\n                                    anchorEl={anchorElUser}\n                                    onClose={handleCloseUser}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                    sx={{ marginLeft: 1 }}\n                                    PaperProps={{\n                                        style: {\n                                            borderRadius: 20,\n                                            boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                        },\n                                        sx: {\n                                            p: 1,\n                                            width: 220,\n                                            overflowX: 'unset',\n                                            overflowY: 'unset',\n                                            '& .MuiMenuItem-root': {\n                                                px: 1,\n                                                py: 1,\n                                                typography: 'body2',\n                                                borderRadius: 1,\n                                                justifyContent: 'left'\n                                            },\n                                            '& .MuiAvatar-root': {\n                                                width: 32,\n                                                height: 32,\n                                                ml: -0.5,\n                                                mt: 1,\n                                                mr: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n\n                                    <BoxSpan />\n                                    <Stack sx={{ p: 0.5 }} >\n                                        <StyledMenuItem component={NavLink} to={'/profile'} >\n                                            <Box display={\"flex\"}>\n                                                <Box>\n                                                    <Avatar src={user.user.avatar} />\n                                                </Box>\n                                                <Box flexDirection={'column'}>\n                                                    <Typography style={{ fontWeight: 500, fontSize: '14px' }}>{user.user.username}</Typography>\n                                                    <Typography style={{ color: \"#637381\", fontSize: '13.5px' }} >{user.user.email}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <StyledMenuItem component={NavLink} to={'/storageEvent'}>\n                                            <Typography style={{ fontSize: '14px' }}>Sự Kiện Đã Lưu</Typography>\n                                        </StyledMenuItem>\n\n                                        <StyledMenuItem component={NavLink} to={'/applyJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Sự Kiện Đã Ứng Tuyển</Typography>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <MenuItem className=\"navbar-logout\" onClick={(e) => dispatch(logOutUser())}>\n                                            <Typography style={{ fontSize: '14px' }}> Đăng Xuất</Typography>\n                                        </MenuItem>\n                                    </Stack>\n\n                                </Popover>\n                            </Box>\n                        </Stack>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <FeedContent event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {events.map((event: any) =>\n                                    <Box style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailContent event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", height: \"410px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default DetailContent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\ManageJob.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\DetailContent1.tsx",["680","681","682","683","684","685","686","687","688","689"],"import * as React from \"react\";\nimport { styled, alpha, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { logOutUser } from \"redux/actions/user\";\nimport { Box, OutlinedInput, InputAdornment, TextField, Toolbar, AppBar, Typography, Avatar, ListItemIcon, Divider, MenuItem as MenuItemDepartment, IconButton, Stack, Popover, MenuItem } from '@mui/material';\n\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedContent from \"pages/contents/FeedContent\";\nimport FeedDetailContent from \"pages/contents/FeedDetailContent\";\n\nimport { purple } from '@mui/material/colors';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Person, Notifications } from '@mui/icons-material';\n\nimport { Link, NavLink, useParams } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\ninterface RouteParams {\n    id: string\n}\nconst DetailContent: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [eventDetails, setEventDetails] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setEventDetails(() =>\n            user?.events?.filter((event: any) =>\n                event._id == params.id\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box sx={{ fontSize: '12px', position: \"start\" }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ | CTV\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/user'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={{\n                                xs: 0.5,\n                                sm: 1,\n                            }}\n                            sx={{ margin: 3, color: 'black' }}\n                        >\n                            <Box sx={{\n                                display: 'flex', alignItems: 'center', textAlign: 'center'\n                            }}>\n                                <IconButton onClick={(event) => handleClickUser(event)}\n                                    sx={{\n                                        p: 0,\n\n                                    }}>\n                                    <Person style={{ color: \"black\" }} />\n                                </IconButton>\n\n                                <Popover\n                                    open={openUser}\n                                    anchorEl={anchorElUser}\n                                    onClose={handleCloseUser}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                    sx={{ marginLeft: 1 }}\n                                    PaperProps={{\n                                        style: {\n                                            borderRadius: 20,\n                                            boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                        },\n                                        sx: {\n                                            p: 1,\n                                            width: 220,\n                                            overflowX: 'unset',\n                                            overflowY: 'unset',\n                                            '& .MuiMenuItem-root': {\n                                                px: 1,\n                                                py: 1,\n                                                typography: 'body2',\n                                                borderRadius: 1,\n                                                justifyContent: 'left'\n                                            },\n                                            '& .MuiAvatar-root': {\n                                                width: 32,\n                                                height: 32,\n                                                ml: -0.5,\n                                                mt: 1,\n                                                mr: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n\n                                    <BoxSpan />\n                                    <Stack sx={{ p: 0.5 }} >\n                                        <StyledMenuItem component={NavLink} to={'/profile'} >\n                                            <Box display={\"flex\"}>\n                                                <Box>\n                                                    <Avatar src={user.user.avatar} />\n                                                </Box>\n                                                <Box flexDirection={'column'}>\n                                                    <Typography style={{ fontWeight: 500, fontSize: '14px' }}>{user.user.username}</Typography>\n                                                    <Typography style={{ color: \"#637381\", fontSize: '13.5px' }} >{user.user.email}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <StyledMenuItem component={NavLink} to={'/storageEvent'}>\n                                            <Typography style={{ fontSize: '14px' }}>Sự Kiện Đã Lưu</Typography>\n                                        </StyledMenuItem>\n\n                                        <StyledMenuItem component={NavLink} to={'/applyJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Công Việc Đã Ứng Tuyển</Typography>\n                                        </StyledMenuItem>\n\n                                        <StyledMenuItem component={NavLink} to={'/manageJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Quản Lý Công việc</Typography>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <MenuItem className=\"navbar-logout\" onClick={(e) => dispatch(logOutUser())}>\n                                            <Typography style={{ fontSize: '14px' }}> Đăng Xuất</Typography>\n                                        </MenuItem>\n                                    </Stack>\n\n                                </Popover>\n                            </Box>\n                        </Stack>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <Link style={{ textDecoration: \"none\" }} to={`/event2/${event._id}`}>\n                                            <FeedContent event={event} key={event._id} />\n                                        </Link>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {eventDetails.map((event: any) =>\n                                    <Box style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailContent event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", height: \"410px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default DetailContent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\NewJobEvent.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListCTVCalendar.tsx",["690","691","692","693","694","695","696","697","698","699","700","701"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListCTV, acceptCTV, unacceptCTV } from \"redux/actions/Manager\";\nimport { RootState } from \"redux/reducers\";\nimport { IEvent } from \"redux/types/event\";\nimport { Toolbar, OutlinedInput, InputAdornment, Card, Container, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, Popover, Button } from \"@mui/material\";\n// @mui\nimport SearchIcon from '@mui/icons-material/Search';\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\nimport { Box } from \"@mui/system\";\n\nimport { useParams } from 'react-router-dom';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n        width: 320,\n    },\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n    },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n    a: { [key in Key]: number | string },\n    b: { [key in Key]: number | string },\n) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface RouteParams {\n    id: string\n}\n\nconst ListCTVCalendar: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [anchorEl, setAnchorEl] = React.useState([null]);\n    const manager = useSelector((state: RootState) => state.manager);\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [filterName, setFilterName] = React.useState('');\n\n    const handleFilterByName = (event: any) => {\n        setPage(0);\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = manager?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => manager?.events?.filter((event: any) => event.nameEvent));\n            // If the text field is empty, show all users\n        }\n\n        setFilterName(keyword);\n    };\n\n    const checkUserApply = manager?.events?.filter((event: any) => event._id == params.id);\n\n    React.useEffect(() => {\n        dispatch(getListCTV());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() => checkUserApply);\n    }, [manager]);\n\n    React.useEffect(() => {\n        document.title = \"LIST CVT\";\n    }, []);\n\n    const tableRef = React.useRef(null);\n\n    const nameEvent = events.map((event: any) => event.nameEvent)\n\n    return (\n\n        <>\n            <Container>\n                <Card style={{ padding: \"20px\", marginTop: \"40px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n                    <StyledRoot\n                        style={{ display: \"flex\", flexDirection: \"row\" }}\n                        sx={{\n                            color: 'primary.main',\n                            bgcolor: 'primary.lighter',\n                        }}\n                    >\n                        <Box>\n                            <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n                                Danh Sách Cộng Tác Viên Theo Lịch Làm\n                            </Typography>\n                        </Box>\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                            <Box style={{ marginRight: \"14px\" }}>\n                                <StyledSearch\n                                    style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\n                                    value={filterName}\n                                    onChange={handleFilterByName}\n                                    placeholder=\"Tìm kiếm...\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </Box>\n                            <DownloadTableExcel\n                                filename={\"Danh sách lịch làm ctv sự kiện \" +nameEvent.toString()}\n                                sheet={\"Danh sách ctv sự kiện \" + nameEvent.toString()}\n                                currentTableRef={tableRef.current}\n\n                            >\n                                <Button>\n                                    <img src=\"/icons8-excel-48.png\" style={{ width: \"30px\" }}></img>\n                                </Button>\n                            </DownloadTableExcel>\n                        </Box>\n                    </StyledRoot>\n                    <TableContainer>\n                        {/* Table user */}\n                        <Table ref={tableRef}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Tên sự kiện\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Tên công việc\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Tên cộng tác viên\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Ca làm\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Ngày làm trong tuần\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            {events && events.length > 0 ? (\n                                <TableBody>\n                                    {events.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((event: any, index) =>\n                                        <TableRow id=\"row\" key={event._id}>\n                                            <TableCell key={event._id} align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                                                <Box >\n                                                    {event?.nameEvent ?? null}\n                                                </Box>\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                                                        {job.jobEvent.nameJob}\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                                                        {job.userApply.fullName}\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            ) : (\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                            <Typography variant=\"h6\" paragraph>\n                                                Không tồn tại user\n                                            </Typography>\n\n                                            <Typography variant=\"body2\">\n                                                Không tìm thấy kết quả &nbsp;\n                                                <strong>&quot;{filterName}&quot;</strong>.\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                </Card>\n            </Container >\n        </>\n    );\n};\n\nexport default ListCTVCalendar;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListCTVEvent.tsx",["702","703"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListCTV, acceptCTV, unacceptCTV } from \"redux/actions/Manager\";\nimport { RootState } from \"redux/reducers\";\nimport { IEvent } from \"redux/types/event\";\nimport UpdateCoefficient from \"./UpdateCoefficient\"\nimport { IconButton, TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Card, Container, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, Popover, Button } from \"@mui/material\";\n// @mui\nimport SearchIcon from '@mui/icons-material/Search';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport { Box } from \"@mui/system\";\nimport { visuallyHidden } from '@mui/utils';\n\nimport { useParams } from 'react-router-dom';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': {\n    width: 320,\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n  },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface DataUser {\n  _id: keyof IEvent;\n  nameEvent: keyof IEvent;\n  nameJob: keyof IEvent;\n  userApply: keyof IEvent;\n  unitPrice: keyof IEvent;\n  coefficient: keyof IEvent;\n  total: keyof IEvent;\n  acceptStatus: keyof IEvent;\n  accept: keyof IEvent;\n  unaccept: keyof IEvent;\n}\n\ninterface HeadCell {\n  _id: keyof DataUser;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    _id: 'nameEvent',\n    numeric: false,\n    label: 'Tên sự kiện',\n  },\n  {\n    _id: 'nameJob',\n    numeric: false,\n    label: 'Tên công việc',\n  },\n  {\n    _id: 'userApply',\n    numeric: false,\n    label: 'Tên Cộng Tác Viên',\n  },\n  {\n    _id: 'unitPrice',\n    numeric: false,\n    label: 'Lương',\n  },\n  {\n    _id: 'coefficient',\n    numeric: false,\n    label: 'Hệ số',\n  },\n  {\n    _id: 'total',\n    numeric: false,\n    label: 'Thành tiền',\n  },\n  {\n    _id: 'acceptStatus',\n    numeric: false,\n    label: 'Trạng thái',\n  },\n  {\n    _id: 'accept',\n    numeric: false,\n    label: '',\n  },\n  {\n    _id: 'unaccept',\n    numeric: false,\n    label: '',\n  },\n];\n\n\ninterface EnhancedTableProps {\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\n  order: Order;\n  orderBy: string;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { order, orderBy, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n  return (\n    <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\n      sx={{\n        '& th:first-child': {\n          borderRadius: '1em 0 0 0'\n        },\n        '& th:last-child': {\n          borderRadius: '0 1em 0 0'\n        }\n      }}>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell._id}\n            align={headCell.numeric ? 'right' : 'left'}\n            style={{ fontSize: '13px' }}\n            sortDirection={orderBy === headCell._id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell._id}\n              direction={orderBy === headCell._id ? order : 'asc'}\n              onClick={createSortHandler(headCell._id)}\n            >\n              {headCell.label}\n              {orderBy === headCell._id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\ninterface RouteParams {\n  id: string\n}\n\nconst ListCTVEvent: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n  const params = useParams<RouteParams>();\n\n  const [events, setEvents] = React.useState<IEvent[]>([]);\n  const [anchorEl, setAnchorEl] = React.useState([null]);\n  const manager = useSelector((state: RootState) => state.manager);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [filterName, setFilterName] = React.useState('');\n\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof DataUser>('nameEvent');\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof DataUser,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  const handleChangePage = (event: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleFilterByName = (event: any) => {\n    setPage(0);\n    const keyword = event.target.value;\n\n    if (keyword !== '') {\n      const results = manager?.events?.filter((event: any) => {\n        return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n        // Use the toLowerCase() method to make it case-insensitive\n      });\n      setEvents(results);\n    } else {\n      setEvents(() => manager?.events?.filter((event: any) => event.nameEvent));\n      // If the text field is empty, show all users\n    }\n\n    setFilterName(keyword);\n  };\n\n  const handleOpenMenu = (jobEvent: any, index: any) => {\n    const newAnchorEls = [\n      ...anchorEl.slice(0, index),\n      jobEvent.currentTarget,\n      ...anchorEl.slice(index + 1)\n    ];\n    setAnchorEl(newAnchorEls);\n  };\n\n  const handleCloseMenu = (index: any) => {\n    const newAnchorEls = [\n      ...anchorEl.slice(0, index),\n      null,\n      ...anchorEl.slice(index + 1)\n    ];\n    setAnchorEl(newAnchorEls);\n  };\n\n  const sortApplyJob = stableSort(events, getComparator(order, orderBy));\n\n  const checkUserApply = manager?.events?.filter((event: any) => event._id == params.id);\n\n  React.useEffect(() => {\n    dispatch(getListCTV());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    setEvents(() => checkUserApply);\n  }, [manager]);\n\n  React.useEffect(() => {\n    document.title = \"LIST CVT\";\n  }, []);\n\n  const tableRef = React.useRef(null);\n\n  return (\n\n    <>\n      <Container>\n        <Card style={{ padding: \"20px\", marginTop: \"40px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n          <StyledRoot\n            style={{ display: \"flex\", flexDirection: \"row\" }}\n            sx={{\n              color: 'primary.main',\n              bgcolor: 'primary.lighter',\n            }}\n          >\n            <Box>\n              <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n                Danh Sách Cộng Tác Viên\n              </Typography>\n            </Box>\n            <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n              <Box style={{ marginRight: \"14px\" }}>\n                <StyledSearch\n                  style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\n                  value={filterName}\n                  onChange={handleFilterByName}\n                  placeholder=\"Tìm kiếm...\"\n                  startAdornment={\n                    <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                      <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                    </InputAdornment>\n                  }\n                />\n              </Box>\n            </Box>\n          </StyledRoot>\n          <TableContainer>\n            {/* Table user */}\n            <Table ref={tableRef}>\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n              />\n              {events && events.length > 0 ? (\n                <TableBody>\n                  {sortApplyJob.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((event: any, index) =>\n                    <TableRow id=\"row\" key={event._id}>\n                      <TableCell key={event._id} align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        <Box >\n                          {event?.nameEvent ?? null}\n                        </Box>\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {job.jobEvent.nameJob}\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {job.userApply.fullName}\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"300px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {new Intl.NumberFormat().format(job.jobEvent.unitPrice)} VND\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"250px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any, index: number) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"14px\", paddingBottom: \"14px\" }}>\n                            <Button style={{ fontSize: '12px', fontWeight: \"normal\", textTransform: \"lowercase\", width: \"20px\" }} size=\"small\" color=\"inherit\" onClick={(jobApply) => handleOpenMenu(jobApply, index)} >\n                              {job.coefficient}\n                            </Button>\n                            <Popover\n                              open={!!anchorEl[index]}\n                              anchorEl={anchorEl[index]}\n                              onClose={() => handleCloseMenu(index)}\n                              anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                              PaperProps={{\n                                sx: {\n\n                                  width: 340,\n                                  '& .MuiMenuItem-root': {\n                                    px: 1,\n                                    typography: 'body2',\n                                    borderRadius: 0.75,\n                                  },\n                                },\n                              }}\n                            >\n                              <UpdateCoefficient event={event} job={job} key={event._id} />\n                            </Popover>\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"300px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {new Intl.NumberFormat().format(job.total)} VND\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"300px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {job.acceptStatus}\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"50px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"5px\", paddingBottom: \"10px\" }}>\n                            <IconButton onClick={(e) => dispatch(acceptCTV(event._id, job._id))} style={{ color: \"green\" }}>\n                              <CheckCircleOutlineIcon />\n                            </IconButton>\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"50px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.notiApplyJob.includes(\"Bạn đã ứng tuyển thành công\") && jobApply.acceptStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"5px\", paddingBottom: \"10px\" }}>\n                            <IconButton onClick={(e) => dispatch(unacceptCTV(event._id, job._id))} style={{ color: \"red\" }}>\n                              <HighlightOffIcon />\n                            </IconButton>\n                          </Box>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  )}\n\n                  <TablePagination\n                    style={{ fontSize: \"12px\" }}\n                    sx={{\n                      '& .MuiTablePagination-selectLabel': {\n                        fontSize: \"12px\"\n                      },\n                      '& .MuiTablePagination-selectIcon': {\n                        width: \"16px\"\n                      },\n                      '& .MuiTablePagination-displayedRows': {\n                        fontSize: \"12px\"\n                      },\n                      '& .MuiSvgIcon-root': {\n                        fontSize: \"16px\"\n                      },\n                    }}\n                    rowsPerPageOptions={[5, 10, 25]}\n                    labelRowsPerPage={\"Số lượng hàng:\"}\n                    count={events.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    onPageChange={handleChangePage}\n                    onRowsPerPageChange={handleChangeRowsPerPage}\n                    SelectProps={{\n                      MenuProps: {\n                        sx: {\n                          \"&& .MuiTablePagination-menuItem\": {\n                            fontSize: \"12px\"\n                          }\n                        }\n                      }\n                    }}\n                  />\n                </TableBody>\n              ) : (\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                      <Typography variant=\"h6\" paragraph>\n                        Không tồn tại user\n                      </Typography>\n\n                      <Typography variant=\"body2\">\n                        Không tìm thấy kết quả &nbsp;\n                        <strong>&quot;{filterName}&quot;</strong>.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n        </Card>\n      </Container >\n    </>\n  );\n};\n\nexport default ListCTVEvent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListCTVExcel.tsx",["704","705","706","707","708","709","710","711"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListCTV } from \"redux/actions/Manager\";\nimport { RootState } from \"redux/reducers\";\nimport { IEvent } from \"redux/types/event\";\nimport UpdateCoefficient from \"./UpdateCoefficient\"\nimport { TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Card, Container, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, Popover, Button } from \"@mui/material\";\n// @mui\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box } from \"@mui/system\";\nimport { visuallyHidden } from '@mui/utils';\n\nimport { useParams } from 'react-router-dom';\n\nimport { DownloadTableExcel } from 'react-export-table-to-excel';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n        width: 320,\n    },\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n    },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n    a: { [key in Key]: number | string },\n    b: { [key in Key]: number | string },\n) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface DataUser {\n    _id: keyof IEvent;\n    nameEvent: keyof IEvent;\n    nameJob: keyof IEvent;\n    userApply: keyof IEvent;\n    unitPrice: keyof IEvent;\n    coefficient: keyof IEvent;\n    total: keyof IEvent;\n}\n\ninterface HeadCell {\n    _id: keyof DataUser;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n    {\n        _id: 'nameEvent',\n        numeric: false,\n        label: 'Tên sự kiện',\n    },\n    {\n        _id: 'nameJob',\n        numeric: false,\n        label: 'Tên công việc',\n    },\n    {\n        _id: 'userApply',\n        numeric: false,\n        label: 'Người ứng tuyển',\n    },\n    {\n        _id: 'unitPrice',\n        numeric: false,\n        label: 'Lương',\n    },\n    {\n        _id: 'coefficient',\n        numeric: false,\n        label: 'Hệ số',\n    },\n    {\n        _id: 'total',\n        numeric: false,\n        label: 'Thành tiền',\n    },\n];\n\n\ninterface EnhancedTableProps {\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\n    order: Order;\n    orderBy: string;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n    const { order, orderBy, onRequestSort } =\n        props;\n    const createSortHandler =\n        (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\n            onRequestSort(event, property);\n        };\n    return (\n        <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\n            sx={{\n                '& th:first-child': {\n                    borderRadius: '1em 0 0 0'\n                },\n                '& th:last-child': {\n                    borderRadius: '0 1em 0 0'\n                }\n            }}>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell._id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        style={{ fontSize: '13px' }}\n                        sortDirection={orderBy === headCell._id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell._id}\n                            direction={orderBy === headCell._id ? order : 'asc'}\n                            onClick={createSortHandler(headCell._id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell._id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\ninterface RouteParams {\n    id: string\n}\n\nconst ListCTVExcel: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [anchorEl, setAnchorEl] = React.useState([null]);\n    const manager = useSelector((state: RootState) => state.manager);\n\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [filterName, setFilterName] = React.useState('');\n\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof DataUser>('nameEvent');\n\n\n    const handleFilterByName = (event: any) => {\n        setPage(0);\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = manager?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => manager?.events?.filter((event: any) => event.nameEvent));\n            // If the text field is empty, show all users\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleOpenMenu = (jobEvent: any, index: any) => {\n        const newAnchorEls = [\n            ...anchorEl.slice(0, index),\n            jobEvent.currentTarget,\n            ...anchorEl.slice(index + 1)\n        ];\n        setAnchorEl(newAnchorEls);\n    };\n\n    const handleCloseMenu = (index: any) => {\n        const newAnchorEls = [\n            ...anchorEl.slice(0, index),\n            null,\n            ...anchorEl.slice(index + 1)\n        ];\n        setAnchorEl(newAnchorEls);\n    };\n\n    const sortApplyJob = stableSort(events, getComparator(order, orderBy));\n\n    const checkUserApply = manager?.events?.filter((event: any) => event._id == params.id);\n\n    React.useEffect(() => {\n        dispatch(getListCTV());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() => checkUserApply);\n    }, [manager]);\n\n    React.useEffect(() => {\n        document.title = \"List | CTV\";\n    }, []);\n\n    const tableRef = React.useRef(null);\n\n    const nameEvent = events.map((event:any) => event.nameEvent)\n\n    return (\n\n        <>\n            <Container>\n                <Card style={{ padding: \"20px\", marginTop: \"40px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n                    <StyledRoot\n                        style={{ display: \"flex\", flexDirection: \"row\" }}\n                        sx={{\n                            color: 'primary.main',\n                            bgcolor: 'primary.lighter',\n                        }}\n                    >\n                        <Box>\n                            <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n                                Danh Sách CTV Hoàn Thành Công Việc\n                            </Typography>\n                        </Box>\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                            <Box style={{ marginRight: \"14px\" }}>\n                                <StyledSearch\n                                    style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\n                                    value={filterName}\n                                    onChange={handleFilterByName}\n                                    placeholder=\"Tìm kiếm...\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </Box>\n                            <DownloadTableExcel\n                                filename={nameEvent.toString()}\n                                sheet= {\"Danh sách ctv sự kiện \" + nameEvent.toString()}\n                                currentTableRef={tableRef.current}\n\n                            >\n                                <Button>\n                                    <img src=\"/icons8-excel-48.png\" style={{  width: \"30px\" }}></img>\n                                </Button>\n                            </DownloadTableExcel>\n                        </Box>\n                    </StyledRoot>\n                    <TableContainer>\n                        {/* Table user */}\n                        <Table ref={tableRef}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Tên sự kiện\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Tên công việc\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Người ứng tuyển\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Lương\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Hệ số\n                                    </TableCell>\n                                    <TableCell\n                                        align={'left'}\n                                        style={{ fontSize: '13px' }}\n                                    >\n                                        Thành tiền\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            {events && events.length > 0 ? (\n                                <TableBody>\n                                    {sortApplyJob.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((event: any, index) =>\n                                        <TableRow id=\"row\" key={event._id}>\n                                            <TableCell key={event._id} align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                                                <Box >\n                                                    {event?.nameEvent ?? null}\n                                                </Box>\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiAccept.includes(\"Đã hoàn thành công việc. Liên hệ văn phòng Viện/Khoa.\")).map((job: any) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                                                        {job.jobEvent.nameJob}\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiAccept.includes(\"Đã hoàn thành công việc. Liên hệ văn phòng Viện/Khoa.\")).map((job: any) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                                                        {job.userApply.username}\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"300px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiAccept.includes(\"Đã hoàn thành công việc. Liên hệ văn phòng Viện/Khoa.\")).map((job: any) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                                                        {new Intl.NumberFormat().format(job.jobEvent.unitPrice)} VND\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"250px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiAccept.includes(\"Đã hoàn thành công việc. Liên hệ văn phòng Viện/Khoa.\")).map((job: any, index: number) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"14px\", paddingBottom: \"14px\" }}>\n                                                        <Button style={{ fontSize: '12px', fontWeight: \"normal\", textTransform: \"lowercase\", width: \"20px\" }} size=\"small\" color=\"inherit\" onClick={(jobApply) => handleOpenMenu(jobApply, index)} >\n                                                            {job.coefficient}\n                                                        </Button>\n                                                        <Popover\n                                                            open={!!anchorEl[index]}\n                                                            anchorEl={anchorEl[index]}\n                                                            onClose={() => handleCloseMenu(index)}\n                                                            anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                                            PaperProps={{\n                                                                sx: {\n\n                                                                    width: 340,\n                                                                    '& .MuiMenuItem-root': {\n                                                                        px: 1,\n                                                                        typography: 'body2',\n                                                                        borderRadius: 0.75,\n                                                                    },\n                                                                },\n                                                            }}\n                                                        >\n                                                            <UpdateCoefficient event={event} job={job} key={event._id} />\n                                                        </Popover>\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                            <TableCell align=\"left\" sx={{ width: \"300px\", fontSize: '12px' }}>\n                                                {event.usersApplyJob.filter((jobApply: any) => jobApply.notiAccept.includes(\"Đã hoàn thành công việc. Liên hệ văn phòng Viện/Khoa.\")).map((job: any) =>\n                                                    <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                                                        {new Intl.NumberFormat().format(job.total)} VND\n                                                    </Box>\n                                                )}\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                            ) : (\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                            <Typography variant=\"h6\" paragraph>\n                                                Không tồn tại user\n                                            </Typography>\n\n                                            <Typography variant=\"body2\">\n                                                Không tìm thấy kết quả &nbsp;\n                                                <strong>&quot;{filterName}&quot;</strong>.\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                </Card>\n            </Container >\n        </>\n    );\n};\n\nexport default ListCTVExcel;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\ListUserApplyEvent.tsx",["712","713"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getListUserApply, approveUserApplyJob, unapproveUserApplyJob } from \"redux/actions/Manager\";\nimport { RootState } from \"redux/reducers\";\nimport { IEvent } from \"redux/types/event\";\nimport { Avatar, TableSortLabel, IconButton, Toolbar, OutlinedInput, InputAdornment, Button, Card, Container, Popover, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, FormControl } from \"@mui/material\";\n// @mui\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport HighlightOffIcon from '@mui/icons-material/HighlightOff';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box } from \"@mui/system\";\nimport { visuallyHidden } from '@mui/utils';\n\nimport { useParams } from 'react-router-dom';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': {\n    width: 320,\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n  },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface DataUser {\n  _id: keyof IEvent;\n  nameEvent: keyof IEvent;\n  nameJob: keyof IEvent;\n  userApply: keyof IEvent;\n  applyStatus: keyof IEvent;\n  approve: keyof IEvent;\n  unapprove: keyof IEvent;\n}\n\ninterface HeadCell {\n  _id: keyof DataUser;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    _id: 'nameEvent',\n    numeric: false,\n    label: 'Tên sự kiện',\n  },\n  {\n    _id: 'nameJob',\n    numeric: false,\n    label: 'Tên công việc',\n  },\n  {\n    _id: 'userApply',\n    numeric: false,\n    label: 'Người ứng tuyển',\n  },\n  {\n    _id: 'applyStatus',\n    numeric: false,\n    label: 'Trạng thái',\n  },\n  {\n    _id: 'approve',\n    numeric: false,\n    label: '',\n  },\n  {\n    _id: 'unapprove',\n    numeric: false,\n    label: '',\n  },\n];\n\n\ninterface EnhancedTableProps {\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\n  order: Order;\n  orderBy: string;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { order, orderBy, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n  return (\n    <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\n      sx={{\n        '& th:first-child': {\n          borderRadius: '1em 0 0 0'\n        },\n        '& th:last-child': {\n          borderRadius: '0 1em 0 0'\n        }\n      }}>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell._id}\n            align={headCell.numeric ? 'right' : 'left'}\n            style={{ fontSize: '13px' }}\n            sortDirection={orderBy === headCell._id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell._id}\n              direction={orderBy === headCell._id ? order : 'asc'}\n              onClick={createSortHandler(headCell._id)}\n            >\n              {headCell.label}\n              {orderBy === headCell._id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\ninterface RouteParams {\n  id: string\n}\nconst Users: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n  const params = useParams<RouteParams>();\n\n\n  const [events, setEvents] = React.useState<IEvent[]>([]);\n  const manager = useSelector((state: RootState) => state.manager);\n\n  const [anchorEl, setAnchorEl] = React.useState([null]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [filterName, setFilterName] = React.useState('');\n\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof DataUser>('nameEvent');\n\n\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof DataUser,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  const handleChangePage = (event: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleFilterByName = (event: any) => {\n    setPage(0);\n    const keyword = event.target.value;\n\n    if (keyword !== '') {\n      const results = manager?.events?.filter((event: any) => {\n        return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n        // Use the toLowerCase() method to make it case-insensitive\n      });\n      setEvents(results);\n    } else {\n      setEvents(() => manager?.events?.filter((event: any) => event.nameEvent));\n      // If the text field is empty, show all users\n    }\n\n    setFilterName(keyword);\n  };\n\n  const handleOpenMenu = (jobApply: any, index: any) => {\n    const newAnchorEls = [\n      ...anchorEl.slice(0, index),\n      jobApply.currentTarget,\n      ...anchorEl.slice(index + 1)\n    ];\n    setAnchorEl(newAnchorEls);\n  };\n\n  const handleCloseMenu = (index: any) => {\n    const newAnchorEls = [\n      ...anchorEl.slice(0, index),\n      null,\n      ...anchorEl.slice(index + 1)\n    ];\n    setAnchorEl(newAnchorEls);\n  };\n\n  const sortApplyJob = stableSort(events, getComparator(order, orderBy));\n\n  React.useEffect(() => {\n    dispatch(getListUserApply());\n  }, [dispatch]);\n  // if (window.location.href.indexOf('reload') == -1) {\n  //   window.location.replace(window.location.href + '?reload');\n  // }\n\n  React.useEffect(() => {\n\n    setEvents(() => manager?.events?.filter((event: any) => event._id == params.id));\n  }, [manager]);\n\n  React.useEffect(() => {\n    document.title = \"LIST USER APPLY\";\n  }, []);\n\n  return (\n\n    <>\n      <Container>\n        <Card style={{ padding: \"20px\", marginTop: \"40px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n          <StyledRoot\n            style={{ display: \"flex\", flexDirection: \"row\" }}\n            sx={{\n              color: 'primary.main',\n              bgcolor: 'primary.lighter',\n            }}\n          >\n            <Box>\n              <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n                Danh Sách Ứng Tuyển\n              </Typography>\n            </Box>\n            <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n              <Box style={{ marginRight: \"14px\" }}>\n                <StyledSearch\n                  style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\n                  value={filterName}\n                  onChange={handleFilterByName}\n                  placeholder=\"Tìm kiếm...\"\n                  startAdornment={\n                    <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                      <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                    </InputAdornment>\n                  }\n                />\n              </Box>\n            </Box>\n          </StyledRoot>\n          <TableContainer>\n            {/* Table user */}\n            <Table >\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n              />\n              {events && events.length > 0 ? (\n                <TableBody>\n                  {sortApplyJob.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((event: any, index) =>\n                    <TableRow key={event._id}>\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        <Box >\n                          {event?.nameEvent ?? null}\n                        </Box>\n                      </TableCell>\n                      {/* <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.applyStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {job.jobEvent.event.nameEvent}\n                          </Box>\n                        )}\n                      </TableCell> */}\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.applyStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {job.jobEvent.nameJob}\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"150px\" }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.applyStatus.includes(\"Chờ phê duyệt\")).map((job: any, index: number) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"14px\", paddingBottom: \"14px\" }}>\n                            <Button style={{ fontSize: '12px', fontWeight: \"normal\", textTransform: \"lowercase\", width: \"40px\" }} size=\"small\" color=\"inherit\" onClick={(jobApply) => handleOpenMenu(jobApply, index)} >\n                              {job.userApply.username}\n                            </Button>\n                            <Popover\n                              open={!!anchorEl[index]}\n                              anchorEl={anchorEl[index]}\n                              onClose={() => handleCloseMenu(index)}\n                              anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                              transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                              PaperProps={{\n                                sx: {\n\n                                  width: 340,\n                                  '& .MuiMenuItem-root': {\n                                    px: 1,\n                                    typography: 'body2',\n                                    borderRadius: 0.75,\n                                  },\n                                },\n                              }}\n                            >\n                              <Box style={{ display: \"flex\", flexDirection: \"column\" }}>\n                                <Avatar src={job.userApply.avatar} sx={{ display: \"flex\", margin: \"auto\", height: \"70px\", width: \"70px\", marginTop: \"5px\", marginBottom: \"10px\" }} />\n                                <Box sx={{ textAlign: \"center\", fontWeight: \"bold\", marginBottom: \"10px\" }}>\n                                  {job.userApply.username}\n                                </Box>\n                                <Box sx={{ display: 'grid', gap: 2, gridTemplateColumns: 'repeat(2, 1fr)', backgroundColor: \"rgba(0,0,0,0.03)\", color: \"rgb(33, 43, 54)\", marginBottom: 4, padding: 3, borderRadius: 4 }}>\n                                  <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    marginTop: 1\n                                  }} >\n                                    Họ tên\n                                  </FormControl>\n                                  <FormControl sx={{ textAlign: 'right', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                                    {job.userApply.fullName}\n                                  </FormControl>\n                                  <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    marginTop: 1\n                                  }} >\n                                    Khoa\n                                  </FormControl>\n                                  <FormControl sx={{ textAlign: 'right', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                                    {job.userApply.department.nameDepartment}\n                                  </FormControl>\n                                  <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    marginTop: 1\n                                  }} >\n                                    Mã số sinh viên\n                                  </FormControl>\n                                  <FormControl sx={{ textAlign: 'right', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                                    {job.userApply.mssv}\n                                  </FormControl>\n                                  <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    marginTop: 1\n                                  }} >\n                                    Lớp\n                                  </FormControl>\n                                  <FormControl sx={{ textAlign: 'right', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                                    {job.userApply.classUser}\n                                  </FormControl>\n                                  <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    marginTop: 1\n                                  }} >\n                                    Số điện thoại\n                                  </FormControl>\n                                  <FormControl sx={{ textAlign: 'right', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                                    {job.userApply.phone}\n                                  </FormControl>\n                                </Box>\n                              </Box>\n                            </Popover>\n                          </Box>\n\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"150px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.applyStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"20px\", paddingBottom: \"20px\" }}>\n                            {job.applyStatus}\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"50px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.applyStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"5px\", paddingBottom: \"10px\" }}>\n                            <IconButton onClick={(e) => dispatch(approveUserApplyJob(event._id, job._id))} style={{ color: \"green\" }}>\n                              <CheckCircleOutlineIcon />\n                            </IconButton>\n                          </Box>\n                        )}\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ width: \"50px\", fontSize: '12px' }}>\n                        {event.usersApplyJob.filter((jobApply: any) => jobApply.applyStatus.includes(\"Chờ phê duyệt\")).map((job: any) =>\n                          <Box key={job._id} style={{ display: \"flex\", flexDirection: \"column\", marginTop: \"5px\", paddingBottom: \"10px\" }}>\n                            <IconButton onClick={(e) => dispatch(unapproveUserApplyJob(event._id, job._id))} style={{ color: \"red\" }}>\n                              <HighlightOffIcon />\n                            </IconButton>\n                          </Box>\n                        )}\n                      </TableCell>\n                    </TableRow>\n                  )}\n\n                  <TableRow>\n                    <TablePagination\n                      style={{ fontSize: \"12px\" }}\n                      sx={{\n                        '& .MuiTablePagination-selectLabel': {\n                          fontSize: \"12px\"\n                        },\n                        '& .MuiTablePagination-selectIcon': {\n                          width: \"16px\"\n                        },\n                        '& .MuiTablePagination-displayedRows': {\n                          fontSize: \"12px\"\n                        },\n                        '& .MuiSvgIcon-root': {\n                          fontSize: \"16px\"\n                        },\n                      }}\n                      rowsPerPageOptions={[5, 10, 25]}\n                      labelRowsPerPage={\"Số lượng hàng:\"}\n                      count={events.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                      SelectProps={{\n                        MenuProps: {\n                          sx: {\n                            \"&& .MuiTablePagination-menuItem\": {\n                              fontSize: \"12px\"\n                            }\n                          }\n                        }\n                      }}\n                    />\n                  </TableRow>\n                </TableBody>\n              ) : (\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                      <Typography variant=\"h6\" paragraph>\n                        Không tồn tại user\n                      </Typography>\n\n                      <Typography variant=\"body2\">\n                        Không tìm thấy kết quả &nbsp;\n                        <strong>&quot;{filterName}&quot;</strong>.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default Users;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\NewComment.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\Events.tsx",["714"],"import * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, deleteEvent } from \"redux/actions/Manager\";\nimport { RootState } from \"redux/reducers\";\nimport { IEvent } from \"redux/types/event\";\nimport UpdateEvent from \"pages/Manager/UpdateEvent\";\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\n\nimport ClearIcon from '@mui/icons-material/Clear';\nimport RefreshIcon from '@mui/icons-material/Refresh';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport { Link, NavLink } from 'react-router-dom';\n\nimport { Button, Container, Typography, Card, CardContent, CardMedia, Box, Popover, Avatar, Box as BoxButton, FormControl, Toolbar, Divider } from '@mui/material';\nimport { styled } from \"@material-ui/core/styles\";\nimport { formatDistance } from \"date-fns\";\nimport { StyledMenuItem } from \"layouts/navigation/style\";\n\nconst Event: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n\n    const StyledRoot = styled(Toolbar)(({ theme }) => ({\n        justifyContent: 'center',\n        padding: theme.spacing(0, 3, 0, 3),\n    }));\n\n\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [anchorEl, setAnchorEl] = React.useState([null]);\n    const manager = useSelector((state: RootState) => state.manager);\n\n    const [anchorElUser, setAnchorElUser] = React.useState([null]);\n\n    const handleClickUser = (event: any, index: any) => {\n        const newAnchorEls = [\n            ...anchorElUser.slice(0, index),\n            event.currentTarget,\n            ...anchorElUser.slice(index + 1)\n        ];\n        setAnchorElUser(newAnchorEls);\n    };\n    const handleCloseUser = (index: any) => {\n        const newAnchorEls = [\n            ...anchorElUser.slice(0, index),\n            null,\n            ...anchorElUser.slice(index + 1)\n        ];\n        setAnchorElUser(newAnchorEls);\n    };\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            manager?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [manager]);\n\n    const handleOpenMenu = (event: any, index: any) => {\n        const newAnchorEls = [\n            ...anchorEl.slice(0, index),\n            event.currentTarget,\n            ...anchorEl.slice(index + 1)\n        ];\n        setAnchorEl(newAnchorEls);\n    };\n\n    const handleCloseMenu = (index: any) => {\n        const newAnchorEls = [\n            ...anchorEl.slice(0, index),\n            null,\n            ...anchorEl.slice(index + 1)\n        ];\n        setAnchorEl(newAnchorEls);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Sự kiện | Manager\";\n    }, []);\n\n    return (\n\n        <Container >\n            <StyledRoot style={{ display: \"flex\", flexDirection: \"column\" }}>\n                {/* navigate */}\n                <Box style={{ display: \"flex\", flexDirection: \"row\", width: 680 }}>\n                    <Box>\n                        <Typography gutterBottom style={{ color: \"black\", fontSize: \"20px\", fontWeight: 'bold' }}>\n                            Danh Sách Sự Kiện\n                        </Typography>\n                    </Box>\n                    <Box flexGrow={1} />\n                    <Box\n                        style={{ backgroundColor: 'rgb(33, 43, 54)', color: \"white\", fontSize: 13, fontWeight: \"400\", borderRadius: 6, textDecoration: \"none\", padding: \"6px 8px\", display:\"flex\", flexDirection:\"row\" }}\n                        component={Link} to={\"/event/newevent\"}\n                    >\n                        <AddIcon style={{ width: '14px', color: \"white\", marginRight: \"2px\" }} />\n                        <Box style={{ fontSize: '12px', paddingTop: \"5px\" }} >\n                            Tạo Sự Kiện\n                        </Box>\n                    </Box>\n                </Box>\n                {events.map((event: any, index) =>\n                    <Box key={event._id} width={680} marginTop={4}>\n                        <Box >\n                            <Card style={{ boxShadow: \"none\", padding: 50, borderRadius: \"24px\" }}>\n                                {event?.approver === null ? (\n                                    <Box display={\"flex\"} flexDirection={\"row\"}>\n                                        <Box style={{ fontSize: 16, lineHeight: 3, fontWeight: '700', letterSpacing: 0.4, paddingRight: 7 }}>\n                                            Người duyệt:\n                                        </Box>\n                                        <Box style={{ fontSize: 16, lineHeight: 3, letterSpacing: 0.4 }}>\n                                            Chưa có người duyệt\n                                        </Box>\n                                    </Box>\n                                ) : (\n                                    <Box display={\"flex\"} flexDirection={\"row\"}>\n                                        <Box style={{ fontSize: 16, lineHeight: 3, fontWeight: '700', letterSpacing: 0.4, paddingRight: 7 }}>\n                                            Người duyệt:\n                                        </Box>\n                                        <Box style={{ fontSize: 16, lineHeight: 3, letterSpacing: 0.4 }}>\n                                            {event.approver.username}\n                                        </Box>\n                                    </Box>\n                                )}\n                                {/* header */}\n                                <Box style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginBottom: \"20px\" }}>\n                                    <Box style={{ fontSize: 24, lineHeight: 3, fontWeight: '700', letterSpacing: 0.4 }}>\n                                        {event?.nameEvent ?? null}\n                                    </Box>\n                                    <Box flexGrow={1} />\n\n                                    <Button onClick={(event) => handleClickUser(event, index)}  >\n                                        <MoreVertIcon style={{ color: \"black\" }} />\n                                    </Button>\n                                    <Popover\n                                        open={!!anchorElUser[index]}\n                                        anchorEl={anchorElUser[index]}\n                                        onClose={() => handleCloseUser(index)}\n                                        anchorReference=\"anchorPosition\"\n                                        anchorPosition={{ top: 300, left: 1330 }}\n                                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                        PaperProps={{\n                                            style: {\n                                                borderRadius: 20,\n                                                boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                            },\n                                            sx: {\n                                                p: 1,\n                                                width: 180,\n                                                overflowX: 'unset',\n                                                overflowY: 'unset',\n                                                '& .MuiMenuItem-root': {\n                                                    px: 1,\n                                                    py: 1,\n                                                    typography: 'body2',\n                                                    borderRadius: 1,\n                                                    justifyContent: 'left'\n                                                },\n                                            },\n                                        }}\n                                    >\n                                        <Box>\n                                            <StyledMenuItem component={NavLink} to={`/jobEvents/${event._id}`}>\n                                                <Typography style={{ fontSize: '14px' }}>Danh sách công việc</Typography>\n                                            </StyledMenuItem>\n                                            <StyledMenuItem component={NavLink} to={`/listUserApply/${event._id}`}>\n                                                <Typography style={{ fontSize: '14px' }}>Danh sách ứng tuyển</Typography>\n                                            </StyledMenuItem>\n\n                                            <StyledMenuItem component={NavLink} to={`/listCTVEvent/${event._id}`}>\n                                                <Typography style={{ fontSize: '14px' }}>Danh sách ctv</Typography>\n                                            </StyledMenuItem>\n\n                                            <StyledMenuItem component={NavLink} to={`/listCTVCalendar/${event._id}`}>\n                                                <Typography style={{ fontSize: '14px' }}>Xuất file excel lịch làm </Typography>\n                                            </StyledMenuItem>\n\n                                            <StyledMenuItem component={NavLink} to={`/listCTVExcel/${event._id}`}>\n                                                <Typography style={{ fontSize: '14px' }}>Xuất file excel lương </Typography>\n                                            </StyledMenuItem>\n                                        </Box>\n                                    </Popover>\n                                </Box>\n\n                                <Box style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginBottom: \"20px\" }}>\n                                    <Box\n                                        style={{\n                                            display: \"flex\", flexDirection: \"row\", alignItems: \"center\",\n                                            borderRadius: \"40px\",\n                                        }}>\n                                        <Avatar style={{ backgroundColor: \"red\", marginRight: \"15px\", width: '30px', height: '30px', fontSize: '13px' }}>\n                                            {event.poster.username.charAt(0).toUpperCase()}\n                                        </Avatar>\n                                        <Box>\n                                            <Typography style={{ fontWeight: \"600\", fontSize: '15px' }}>{event.poster.username}</Typography>\n                                            <Typography style={{ fontWeight: \"400\", fontSize: '13px', color: 'rgb(145, 158, 171)' }}>{event.poster.department.nameDepartment}</Typography>\n                                        </Box>\n                                    </Box>\n                                    <Box flexGrow={1} />\n                                    <Box>\n                                        <Button style={{ color: \"white\", backgroundColor: '#00ab55', marginRight: 20, textTransform: 'capitalize', borderRadius: '10px', padding: '4px 12px', fontSize: '12px' }} onClick={(event) => handleOpenMenu(event, index)}  >\n                                            <RefreshIcon style={{ width: \"16px\", marginRight: '4px', fontWeight: '600' }} />\n                                            Cập nhật\n                                        </Button>\n                                        <Popover\n                                            open={!!anchorEl[index]}\n                                            anchorEl={anchorEl[index]}\n                                            onClose={() => handleCloseMenu(index)}\n                                            anchorReference=\"anchorPosition\"\n                                            anchorPosition={{ top: 300, left: 1270 }}\n                                            anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                            PaperProps={{\n                                                sx: {\n                                                    p: 1,\n                                                    width: 300,\n                                                    overflowX: 'unset',\n                                                    overflowY: 'unset',\n                                                    '& .MuiMenuItem-root': {\n                                                        px: 1,\n                                                        py: 1,\n                                                        typography: 'body2',\n                                                        borderRadius: 1,\n                                                        justifyContent: 'left'\n                                                    },\n                                                },\n                                            }}\n                                        >\n                                            <Box>\n                                                <UpdateEvent event={event} key={event._id} />\n                                            </Box>\n                                        </Popover>\n                                    </Box>\n                                    <Button style={{ color: \"white\", backgroundColor: '#FF5630', textTransform: 'capitalize', borderRadius: '10px', fontSize: '12px', padding: '4px 12px' }} onClick={(e) => dispatch(deleteEvent(event._id))} >\n                                        <ClearIcon style={{ width: \"16px\", marginRight: '4px' }} />\n                                        Xóa\n                                    </Button>\n                                </Box>\n                                {/* noidung */}\n                                <Box style={{ marginBottom: \"20px\" }}>\n                                    <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                        Nội dung\n                                    </Typography>\n                                    <Box style={{ fontSize: '13px' }} dangerouslySetInnerHTML={{ __html: event.contentEvent }} />\n                                </Box>\n                                {/* job */}\n                                <Box style={{ marginBottom: \"20px\" }}>\n                                    <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                        Công việc\n                                    </Typography>\n                                    {event.job.map((job: any) =>\n                                        <Box style={{ fontSize: '13px', paddingBottom: 5 }}>\n                                            • {job.nameJob}\n                                        </Box>\n                                    )}\n                                </Box>\n\n                                {/* detail */}\n                                <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                    Chi tiết\n                                </Typography>\n                                <Box display={\"flex\"}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                    alignItems={'center'}\n                                    style={{ backgroundColor: 'white', padding: '20px 0px', borderRadius: '20px' }}>\n\n                                    <Box sx={{\n                                        display: 'grid',\n                                        gap: 4,\n                                        gridTemplateColumns: 'repeat(3, 1fr)',\n                                        color: \"rgb(33, 43, 54)\",\n                                        columnGap: 11\n\n                                    }} >\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>\n                                                Số lượng\n                                            </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                {event.quantityUser}\n                                            </Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Địa điểm</Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>{event.location}</Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Tổng chi phí </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>{new Intl.NumberFormat().format(event.costs)}</Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Ngày bắt đầu </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }} >\n                                                {event.dayStart}\n                                            </Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Ngày kết thúc </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                {event.dayEnd}\n                                            </Box>\n                                        </FormControl>\n\n                                    </Box>\n                                </Box>\n\n                                {/* Image event */}\n                                <Box display={\"flex\"}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                    alignItems={'center'}>\n\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={event.image}\n                                        alt=\"Không có ảnh\"\n                                        style={{ width: 500, borderRadius: 10, margin: '14px 0' }}\n                                    />\n                                </Box>\n\n                                <Divider style={{ margin: '10px 0' }} />\n\n                                <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                    Bình luận\n                                </Typography>\n                                {/* Comment */}\n                                <Box display={\"flex\"}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                    alignItems={'center'}>\n                                    {event.comments.map((comment: any) =>\n                                        <Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: 10, }}>\n                                            {comment.commenter.username == null ? (\n                                                <Avatar style={{ backgroundColor: \"green\", marginRight: \"10px\", marginTop: \"10px\", width: '28px', height: '28px', fontSize: '13px' }} aria-label=\"recipe\">\n                                                    {comment.commenter.username}\n                                                </Avatar>\n                                            ) : (\n                                                <Avatar style={{ backgroundColor: \"green\", marginRight: \"10px\", marginTop: \"10px\", width: '28px', height: '28px', fontSize: '13px' }} aria-label=\"recipe\">\n                                                    {comment.commenter.username.charAt(0).toUpperCase()}\n                                                </Avatar>\n                                            )}\n                                            <CardContent style={{ backgroundColor: \"#f4f5f5\", padding: \"10px 10px\", borderRadius: \"10px\" }}>\n                                                <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                                                    <Typography style={{ fontWeight: \"bold\", fontSize: \"13px\", marginBottom: \"5px\" }}>{comment.commenter.username}</Typography>\n                                                    <Box style={{ flexGrow: \"1\" }}></Box>\n                                                    <Typography style={{ fontSize: '12px' }}>{(formatDistance(new Date(comment.created), Date.now(), { addSuffix: true })).split(\"about\")}</Typography>\n                                                </Box>\n                                                <Typography style={{ fontSize: \"12px\", width: 400, textAlign: \"justify\" }}>\n                                                    {comment.contentComment}\n                                                </Typography>\n                                            </CardContent>\n                                        </Box>\n                                    )}\n                                </Box>\n                            </Card>\n                        </Box>\n                    </Box>\n                )\n                }\n            </StyledRoot >\n        </Container >\n    );\n};\n\nexport default Event;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\ApproveEvents.tsx",["715"],"import * as React from \"react\";\nimport { makeStyles, styled } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEventApprove, deleteComment } from \"redux/actions/sManager\";\nimport { RootState } from \"redux/reducers\";\nimport { IEvent } from \"redux/types/event\";\nimport { Card, CardMedia, CardContent, Avatar, Toolbar, Typography, Button, Box, Container, FormControl, Divider } from '@mui/material';\n\nimport { approveEvent } from \"redux/actions/sManager\";\nimport UpdateComment from \"pages/SManager/UpdateComment\";\n\nimport { formatDistance } from 'date-fns';\n\nimport CheckIcon from '@mui/icons-material/Check';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { border } from \"@mui/system\";\n\nconst useStyles = makeStyles((theme) => ({\n    btnLogin: {\n        '&.MuiButton-root:hover': {\n            backgroundColor: \"transparent\",\n        }\n    },\n}));\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n    justifyContent: 'center',\n    padding: theme.spacing(0, 3, 0, 3),\n}));\n\nconst ApproveEvents: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const smanager = useSelector((state: RootState) => state.smanager);\n\n    // function formatDate(input: any) {\n    //     var datePart = input.match(/\\d+/g),\n    //         year = datePart[0].substring(0),\n    //         month = datePart[1], day = datePart[2], hour = datePart[3], minute = datePart[4];\n    //     var ampm = hour >= 12 ? 'PM' : 'AM';\n\n    //     return hour + ':' + minute + ' ' + ampm + ' ' + ' ' + day + '/' + month + '/' + year;\n    // }\n\n    function convertTZ(date: any, tzString: any) {\n        return new Date(date).toLocaleString(\"en-TT\", { timeZone: tzString });\n    }\n\n\n    React.useEffect(() => {\n        dispatch(getEventApprove());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            smanager?.events?.filter((event: any) =>\n                event.poster\n            ));\n    }, [smanager]);\n\n    React.useEffect(() => {\n        document.title = \"Duyệt bài | CTV\";\n    }, []);\n\n    return (\n        <Container >\n            <StyledRoot style={{ display: \"flex\", flexDirection: \"column\" }}>\n                {events.map((event: any) =>\n                    <Box key={event._id} width={680}>\n                        <Box >\n                            <Card style={{ boxShadow: \"none\", padding: 40, borderRadius: \"24px\" }}>\n                                {/* header */}\n                                <Box style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginBottom: \"30px\" }}>\n                                    <Box >\n                                        <Box style={{ fontSize: 24, fontWeight: '700', letterSpacing: 0.4 }}>\n                                            {event?.nameEvent}\n                                        </Box>\n                                        <Box display={'flex'} flexDirection={'row'} >\n                                            <Typography style={{ fontWeight: \"bold\", fontSize: '13px', color: '#757575' }}>\n                                                {event.poster.username}\n                                            </Typography>\n                                            <Typography style={{ fontSize: '13px', padding: '0px 4px', color: '#757575' }}>\n                                                |\n                                            </Typography>\n                                            <Typography style={{ fontWeight: \"bold\", fontSize: '13px', color: '#757575' }}>\n                                                {convertTZ((event.created_at), \"Asia/Bangkok\")}\n                                            </Typography>\n                                        </Box>\n\n                                    </Box>\n                                    <Box flexGrow={1} />\n                                    <Button\n                                        style={{\n                                            display: \"flex\", color: \"green\",\n                                            textTransform: \"capitalize\",\n                                            border: '1px solid'\n                                        }}\n                                        className={classes.btnLogin}\n                                        onClick={(e) => dispatch(approveEvent(event._id))}><CheckIcon style={{ width: '18px' }} />\n                                    </Button>\n                                </Box>\n                                {/* detail */}\n                                <Box style={{ marginBottom: \"20px\" }}>\n                                    <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                        Nội dung\n                                    </Typography>\n                                    <Box style={{ fontSize: '13px' }} dangerouslySetInnerHTML={{ __html: event.contentEvent }} />\n                                </Box>\n                                <Box style={{ marginBottom: \"20px\" }}>\n                                    <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                        Công việc\n                                    </Typography>\n                                    {event.job.map((job: any) =>\n                                        <Box sx={{\n                                            display: 'grid',\n                                            gap: 4,\n                                            gridTemplateColumns: 'repeat(3, 1fr)',\n                                            color: \"rgb(33, 43, 54)\",\n                                            columnGap: 1,\n                                            marginBottom: 5\n\n                                        }} >\n                                            <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                                <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>\n                                                    Tên công việc\n                                                </Box>\n                                                <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                    {job.nameJob}\n                                                </Box>\n                                            </FormControl>\n                                            <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                                <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>\n                                                    Số lượng\n                                                </Box>\n                                                <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                    {job.quantity}\n                                                </Box>\n                                            </FormControl>\n                                            <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                                <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>\n                                                    Đơn giá\n                                                </Box>\n                                                <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                    {new Intl.NumberFormat().format(job.unitPrice)} VNĐ\n                                                </Box>\n                                            </FormControl>\n\n                                        </Box>\n                                    )}\n                                </Box>\n                                <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                    Chi tiết sự kiện\n                                </Typography>\n                                <Box display={\"flex\"}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                    alignItems={'center'}\n                                    style={{ backgroundColor: 'white', padding: '20px 0px', borderRadius: '20px' }}>\n\n                                    <Box sx={{\n                                        display: 'grid',\n                                        gap: 4,\n                                        gridTemplateColumns: 'repeat(3, 1fr)',\n                                        color: \"rgb(33, 43, 54)\",\n                                        columnGap: 11\n\n                                    }} >\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>\n                                                Tổng số lượng\n                                            </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                {event.quantityUser}\n                                            </Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Địa điểm</Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>{event.location}</Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Tổng chi phí </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>{new Intl.NumberFormat().format(event.costs)} VNĐ</Box>\n                                        </FormControl>\n\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Ngày bắt đầu </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }} >\n                                                {event.dayStart}\n                                            </Box>\n                                        </FormControl>\n\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Ngày kết thúc </Box>\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\n                                                {event.dayEnd}\n                                            </Box>\n                                        </FormControl>\n\n                                    </Box>\n                                </Box>\n                                {/* Image event */}\n                                <Box display={\"flex\"}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                    alignItems={'center'} >\n\n                                    <CardMedia\n                                        component=\"img\"\n                                        image={event.image}\n                                        alt=\"Không có ảnh\"\n                                        style={{ width: 500, borderRadius: 10, margin: '14px 0' }}\n                                    />\n                                </Box>\n\n                                <Divider style={{ margin: '10px 0' }} />\n\n                                <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\n                                    Bình luận\n                                </Typography>\n                                {/* Comment */}\n                                <Box display={\"flex\"}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                    alignItems={'center'}>\n                                    {event.comments.map((comment: any) =>\n                                        <Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: 10, }}>\n                                            <Avatar style={{ backgroundColor: \"green\", marginRight: \"10px\", marginTop: \"10px\", width: '28px', height: '28px', fontSize: '13px' }} aria-label=\"recipe\">\n                                                {comment.commenter.username.charAt(0).toUpperCase()}\n                                            </Avatar>\n                                            <CardContent style={{ backgroundColor: \"#f4f5f5\", padding: \"10px 10px\", borderRadius: \"10px\" }}>\n                                                <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                                                    <Typography style={{ fontWeight: \"bold\", fontSize: \"13px\", marginBottom: \"5px\" }}>{comment.commenter.username}</Typography>\n                                                    <Box style={{ flexGrow: \"1\" }}></Box>\n                                                    <Typography style={{ fontSize: '12px' }}>{(formatDistance(new Date(comment.created), Date.now(), { addSuffix: true })).split(\"about\")}</Typography>\n                                                </Box>\n                                                <Typography style={{ fontSize: \"12px\", width: 400, textAlign: \"justify\" }}>\n                                                    {comment.contentComment}\n                                                </Typography>\n                                            </CardContent>\n                                            <Button\n                                                style={{ color: \"red\" }}\n                                                disableRipple\n                                                className={classes.btnLogin}\n                                                size='small'\n                                                onClick={(e) => dispatch(deleteComment(event._id, comment._id))}> <DeleteForeverIcon style={{ width: '18px' }} />\n                                            </Button>\n                                        </Box>\n                                    )}\n                                    <UpdateComment event={event} />\n                                </Box>\n                            </Card>\n                        </Box>\n                    </Box>\n                )}\n            </StyledRoot>\n        </Container>\n    );\n};\n\nexport default ApproveEvents;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\SManager.tsx",["716"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"redux/actions/sManager\";\nimport { RootState } from \"redux/reducers\";\nimport { IUser } from \"redux/types/user\";\nimport { TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Card, Container, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\n// @mui\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Box } from \"@mui/system\";\nimport { visuallyHidden } from '@mui/utils';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 3, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': {\n    width: 320,\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n  },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface DataUser {\n  _id: keyof IUser;\n  username: keyof IUser;\n  email: keyof IUser;\n  department: keyof IUser;\n  role: keyof IUser;\n}\n\ninterface HeadCell {\n  paddingLeft: boolean;\n  _id: keyof DataUser;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    _id: 'username',\n    numeric: false,\n    paddingLeft: true,\n    label: 'Tên Tài Khoản',\n  },\n  {\n    _id: 'email',\n    numeric: false,\n    paddingLeft: false,\n    label: 'Email',\n  },\n  {\n    _id: 'role',\n    numeric: false,\n    paddingLeft: false,\n    label: 'Vai Trò',\n  },\n  {\n    _id: 'department',\n    numeric: false,\n    paddingLeft: false,\n    label: 'Khoa',\n  }\n];\n\n\ninterface EnhancedTableProps {\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\n  order: Order;\n  orderBy: string;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { order, orderBy, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n  return (\n    <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\n      sx={{\n        '& th:first-child': {\n          borderRadius: '1em 0 0 0'\n        },\n        '& th:last-child': {\n          borderRadius: '0 1em 0 0'\n        }\n      }}>\n      <TableRow >\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell._id}\n            align={headCell.numeric ? 'right' : 'left'}\n            style={{ paddingLeft: headCell.paddingLeft ? \"112px\" : \"17px\", fontSize: '13px' }}\n            sortDirection={orderBy === headCell._id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell._id}\n              direction={orderBy === headCell._id ? order : 'asc'}\n              onClick={createSortHandler(headCell._id)}\n            >\n              {headCell.label}\n              {orderBy === headCell._id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst Users: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n\n  const [users, setUsers] = React.useState<IUser[]>([]);\n  const smanager = useSelector((state: RootState) => state.smanager);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [filterName, setFilterName] = React.useState('');\n\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof DataUser>('username');\n\n\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof DataUser,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  const handleChangePage = (event: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleFilterByName = (event: any) => {\n    setPage(0);\n    const keyword = event.target.value;\n\n    if (keyword !== '') {\n      const results = smanager?.users?.filter((user: any) => {\n        if (user.role.keyRole !== \"admin\")\n          return user.username.toLowerCase().startsWith(keyword.toLowerCase());\n        // Use the toLowerCase() method to make it case-insensitive\n      });\n      setUsers(results);\n    } else {\n      setUsers(() => smanager?.users?.filter((user: any) => user.role.keyRole === \"user\" || user.role.keyRole === \"manager\" || user.role.keyRole === \"smanager\"));\n      // If the text field is empty, show all users\n    }\n\n    setFilterName(keyword);\n  };\n\n  const sortUser = stableSort(users, getComparator(order, orderBy));\n\n  React.useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    setUsers(() => smanager?.users?.filter((user: any) =>  user.role.keyRole === \"manager\"));\n  }, [smanager]);\n\n  React.useEffect(() => {\n    document.title = \"Smanager | CTV\";\n  }, []);\n\n  return (\n\n    <>\n      <Container>\n        <Card style={{ padding: \"20px\", marginTop: \"50px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n          <StyledRoot\n            sx={{\n              color: 'primary.main',\n              bgcolor: 'primary.lighter',\n            }}\n          >\n            <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n              User\n            </Typography>\n            <StyledSearch\n              style={{ borderRadius: '30px', fontSize: '13px' }}\n              value={filterName}\n              onChange={handleFilterByName}\n              placeholder=\"Tìm kiếm user...\"\n              startAdornment={\n                <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                  <SearchIcon sx={{ color: 'text.disabled', width: 18 }} />\n                </InputAdornment>\n              }\n            />\n          </StyledRoot>\n          <TableContainer>\n            {/* Table user */}\n            <Table>\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n              />\n              {users && users.length > 0 ? (\n                <TableBody style={{ fontSize: '12px' }} >\n                  {sortUser.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user: any) =>\n                    <TableRow key={user.username} >\n                      <TableCell align=\"left\" sx={{ width: \"150px\", paddingLeft: \"110px\", fontSize: '12px' }}>\n                        {user.username}\n                      </TableCell>\n\n                      <TableCell align=\"left\" sx={{ width: \"150px\", fontSize: '12px' }}>\n                        {user.email}\n                      </TableCell>\n\n                      <TableCell align=\"left\" sx={{ width: \"150px\", fontSize: '12px' }}>\n                        {user.role.keyRole}\n                      </TableCell>\n\n\n                      <TableCell align=\"left\" sx={{ width: \"150px\", fontSize: '12px' }}>\n                        {user.department.nameDepartment}\n                      </TableCell >\n                    </TableRow>\n                  )}\n\n                  <TableRow>\n                    <TablePagination\n                      style={{ fontSize: \"12px\" }}\n                      sx={{\n                        '& .MuiTablePagination-selectLabel': {\n                          fontSize: \"12px\"\n                        },\n                        '& .MuiTablePagination-selectIcon': {\n                          width: \"16px\"\n                        },\n                        '& .MuiTablePagination-displayedRows': {\n                          fontSize: \"12px\"\n                        },\n                        '& .MuiSvgIcon-root': {\n                          fontSize: \"16px\"\n                        },\n                      }}\n                      rowsPerPageOptions={[5, 10, 25]}\n                      labelRowsPerPage={\"Số lượng hàng:\"}\n                      count={users.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                      SelectProps={{\n                        MenuProps:{\n                          sx: {\n                            \"&& .MuiTablePagination-menuItem\": {\n                              fontSize: \"12px\"\n                            }\n                          }\n                        }\n                      }}\n\n                    // labelDisplayedRows={({ from, to, count }) => `${from} - ${to} / ${count}`}\n\n                    />\n                  </TableRow>\n                </TableBody>\n              ) : (\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                      <Typography variant=\"h6\" paragraph>\n                        Không tồn tại user\n                      </Typography>\n\n                      <Typography variant=\"body2\">\n                        Không tìm thấy kết quả &nbsp;\n                        <strong>&quot;{filterName}&quot;</strong>.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default Users;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\JobEvents.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\AddDepartment.tsx",["717"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, CircularProgress } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\n\nimport { addDepartment, getDepartments } from \"redux/actions/admin\";\n\nimport { Box, Container, FormControl, FormLabel, TextField, Typography } from \"@mui/material\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n  btnRegister: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1, 2),\n  },\n  checkboxWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1.5, 0),\n    textAlign: 'left',\n    fontSize: '13px',\n    \"& .MuiInputBase-root\": {\n      \"& fieldset\": {\n        borderRadius: \"10px\",\n      },\n    },\n  },\n}));\n\ninterface IInitialValues {\n  nameDepartment: string;\n  keyDepartment: string;\n}\n\nconst AddDepartment: React.FC = (): JSX.Element => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const ADMIN = \"640cbf0573094a5e2e001859\";\n\n  const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n  const Department = useSelector((state: RootState) => state.admin);\n\n  const initialValues: IInitialValues = {\n    nameDepartment: \"\",\n    keyDepartment: \"\",\n  };\n\n  const onHandleSubmit = (values: IInitialValues, { setSubmitting }: any) => {\n    dispatch(addDepartment({ ...values, role: ADMIN }, setSubmitting))\n  };\n\n  const validationSchema = Yup.object({\n    nameDepartment: Yup.string().required(\"Invalid nameDepartment!\"),\n    keyDepartment: Yup.string().required(\"Invalid keyDepartment!\"),\n  });\n\n  React.useEffect(() => {\n    dispatch(getDepartments());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    setDepartments(() => Department?.departments?.filter((department: any) => department.nameDepartment));\n  }, [Department]);\n\n  return (\n    <Container style={{ maxWidth: 600 }}>\n\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onHandleSubmit}\n      >\n        {({ isSubmitting, handleSubmit, values, handleChange, handleBlur, errors, touched }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <Box display={\"flex\"}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              alignItems={'center'}\n              style={{ backgroundColor: 'white', padding: '40px 0px', borderRadius: '20px' }}>\n\n              <Typography style={{ fontWeight: \"bold\", fontSize: \"18px\", margin: 20 }} >\n                Thêm khoa\n              </Typography>\n\n              <FormControl>\n                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: \"5px\" }}>Ký tự viết tắt khoa</FormLabel>\n                <TextField\n                  style={{ width: 300 }}\n                  className={classes.textField}\n                  fullWidth\n                  variant={'outlined'}\n                  name='keyDepartment'\n                  value={values.keyDepartment}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder='Nhập ký tự viết tắt khoa muốn thêm'\n                  InputProps={{\n\n                  }}\n                  inputProps={{\n                    style: {\n                      fontSize: '12px',\n                    }\n                  }}\n                  helperText={touched.keyDepartment ? errors.keyDepartment : \"\"}\n                  error={touched.keyDepartment ? Boolean(errors.keyDepartment) : false}\n                />\n              </FormControl>\n\n              <FormControl style={{ marginTop: 2 }} >\n                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: 2 }}>\n                  Tên khoa\n                </FormLabel>\n                <TextField\n                  style={{ width: 300, }}\n                  className={classes.textField}\n                  fullWidth\n                  variant={'outlined'}\n                  name='nameDepartment'\n                  value={values.keyDepartment}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  placeholder='Nhập tên khoa muốn thêm'\n                  inputProps={{\n                    style: {\n                      fontSize: '12px',\n                    }\n                  }}\n                  helperText={touched.nameDepartment ? errors.nameDepartment : \"\"}\n                  error={touched.nameDepartment ? Boolean(errors.nameDepartment) : false} />\n\n              </FormControl>\n              <Box marginTop={2}>\n                <Button\n                  type='submit'\n                  disabled={isSubmitting}\n                  style={{\n                    color: \"rgb(33, 43, 54)\",\n                    height: \"34px\",\n                    width: \"120px\",\n                    fontSize: \"12px\",\n                    borderRadius: \"4px\",\n                    fontWeight: 500,\n                    textTransform: \"capitalize\",\n                    border: '1px solid rgb(33, 43, 54)',\n                    marginRight: 10\n                  }}\n                >\n                  {isSubmitting ? <CircularProgress size='1rem' /> : \"Thêm Khoa\"}\n                </Button>\n\n                <Button style={{\n                  color: \"#FF6969\",\n                  height: \"34px\",\n                  width: \"120px\",\n                  fontSize: \"12px\",\n                  fontWeight: 500,\n                  borderRadius: \"4px\",\n                  textTransform: \"capitalize\",\n                  border: '1px solid #FF6969',\n\n                }}\n                  onClick={history.goBack}\n                >Quay lại</Button>\n              </Box>\n\n\n            </Box>\n          </form>\n        )}\n      </Formik>\n\n\n\n\n\n    </Container >\n\n  );\n};\n\nexport default AddDepartment;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\Events.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\Users.tsx",["718"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers, deleteUser } from \"redux/actions/admin\";\nimport { RootState } from \"redux/reducers\";\nimport { IUser } from \"redux/types/user\";\nimport { Box,TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Button, Card, Container, Popover, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\nimport { Link } from 'react-router-dom';\nimport UserForm from \"./UserForm\";\n// @mui\nimport EditIcon from '@mui/icons-material/Edit';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { visuallyHidden } from '@mui/utils';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter,\n  }),\n  '&.Mui-focused': {\n    width: 320,\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n  },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n  order: Order,\n  orderBy: Key,\n): (\n  a: { [key in Key]: number | string },\n  b: { [key in Key]: number | string },\n) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) {\n      return order;\n    }\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\ninterface DataUser {\n  _id: keyof IUser;\n  username: keyof IUser;\n  email: keyof IUser;\n  department: keyof IUser;\n  role: keyof IUser;\n  update: keyof IUser;\n  delete: keyof IUser;\n}\n\ninterface HeadCell {\n  _id: keyof DataUser;\n  label: string;\n  numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n  {\n    _id: 'username',\n    numeric: false,\n    label: 'Tên người dùng',\n  },\n  {\n    _id: 'email',\n    numeric: false,\n    label: 'Email',\n  },\n  {\n    _id: 'role',\n    numeric: false,\n    label: 'Chức vụ',\n  },\n  {\n    _id: 'department',\n    numeric: false,\n    label: 'Khoa',\n  },\n  {\n    _id: 'update',\n    numeric: false,\n    label: '',\n  },\n  {\n    _id: 'delete',\n    numeric: false,\n    label: '',\n  },\n];\n\n\ninterface EnhancedTableProps {\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\n  order: Order;\n  orderBy: string;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n  const { order, orderBy, onRequestSort } =\n    props;\n  const createSortHandler =\n    (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\n      onRequestSort(event, property);\n    };\n  return (\n    <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\n      sx={{\n        '& th:first-child': {\n          borderRadius: '1em 0 0 0'\n        },\n        '& th:last-child': {\n          borderRadius: '0 1em 0 0'\n        }\n      }}>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell._id}\n            align={headCell.numeric ? 'right' : 'left'}\n            style={{ fontSize: '13px' }}\n            sortDirection={orderBy === headCell._id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell._id}\n              direction={orderBy === headCell._id ? order : 'asc'}\n              onClick={createSortHandler(headCell._id)}\n            >\n              {headCell.label}\n              {orderBy === headCell._id ? (\n                <Box component=\"span\" sx={visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </Box>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nconst Users: React.FC = (): JSX.Element => {\n\n  const dispatch = useDispatch();\n\n\n  const [users, setUsers] = React.useState<IUser[]>([]);\n  const admin = useSelector((state: RootState) => state.admin);\n\n  const [anchorEl, setAnchorEl] = React.useState([null]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [filterName, setFilterName] = React.useState('');\n\n  const [order, setOrder] = React.useState<Order>('asc');\n  const [orderBy, setOrderBy] = React.useState<keyof DataUser>('username');\n\n\n\n  const handleRequestSort = (\n    event: React.MouseEvent<unknown>,\n    property: keyof DataUser,\n  ) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleChangeRowsPerPage = (event: any) => {\n    setPage(0);\n    setRowsPerPage(parseInt(event.target.value, 10));\n  };\n\n  const handleChangePage = (event: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleFilterByName = (event: any) => {\n    setPage(0);\n    const keyword = event.target.value;\n\n    if (keyword !== '') {\n      const results = admin?.users?.filter((user: any) => {\n        if (user.role.keyRole !== \"admin\")\n          return user.username.toLowerCase().startsWith(keyword.toLowerCase());\n      });\n      setUsers(results);\n    } else {\n      setUsers(() => admin?.users?.filter((user: any) => user.role.keyRole === \"user\" || user.role.keyRole === \"manager\" || user.role.keyRole === \"smanager\"));\n    }\n\n    setFilterName(keyword);\n  };\n\n  const handleOpenMenu = (event: any, index: any) => {\n    const newAnchorEls = [\n      ...anchorEl.slice(0, index),\n      event.currentTarget,\n      ...anchorEl.slice(index + 1)\n    ];\n    setAnchorEl(newAnchorEls);\n  };\n\n  const handleCloseMenu = (index: any) => {\n    const newAnchorEls = [\n      ...anchorEl.slice(0, index),\n      null,\n      ...anchorEl.slice(index + 1)\n    ];\n    setAnchorEl(newAnchorEls);\n  };\n\n\n  const sortUser = stableSort(users, getComparator(order, orderBy));\n\n  React.useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    setUsers(() => admin?.users?.filter((user: any) => user.role.keyRole === \"user\" || user.role.keyRole === \"manager\" || user.role.keyRole === \"smanager\"))\n  }, [admin]);\n\n  React.useEffect(() => {\n    document.title = \"ADMIN\";\n  }, []);\n\n  return (\n\n    <>\n      <Container>\n        <Card style={{ padding: \"20px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n          <StyledRoot\n            style={{ display: \"flex\", flexDirection: \"row\" }}\n            sx={{\n              color: 'primary.main',\n              bgcolor: 'primary.lighter',\n            }}\n          >\n            <Box>\n              <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n                Danh sách người dùng\n              </Typography>\n            </Box>\n            <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n              <Box style={{ marginRight: \"14px\" }}>\n                <StyledSearch\n                  style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\n                  value={filterName}\n                  onChange={handleFilterByName}\n                  placeholder=\"Tìm kiếm user...\"\n                  startAdornment={\n                    <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                      <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                    </InputAdornment>\n                  }\n                />\n              </Box>\n              <Box component={Link} to=\"/users/registerAdmin\" style={{ fontSize: '14px', textDecoration: \"none\", color: \"black\" }}>\n                <Box style={{\n                  border: '1px solid rgba(158, 158, 158, 0.32)',\n                  borderRadius: '30px', textAlign: 'center',\n                  marginTop: '0.5px', padding: '11px', backgroundColor: \"#f5f5f5\",\n                  width: 180, display: 'flex', flexDirection: 'row', justifyContent: 'center'\n                }}>\n                  <AddIcon style={{ width: '14px', color: '#ee6f81', marginRight: \"6px\" }} />\n                  <Typography style={{ fontSize: '12px', paddingTop: \"2.5px\" }} >\n                    Thêm Người Dùng\n                  </Typography>\n                </Box>\n              </Box>\n            </Box>\n          </StyledRoot>\n          <TableContainer>\n            {/* Table user */}\n            <Table >\n              <EnhancedTableHead\n                order={order}\n                orderBy={orderBy}\n                onRequestSort={handleRequestSort}\n              />\n              {users && users.length > 0 ? (\n                <TableBody>\n                  {sortUser.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user: any, index) =>\n                    <TableRow key={user._id}>\n                      <TableCell align=\"left\" sx={{ width: \"200px\", paddingLeft: \"26px\", fontSize: '12px' }}>\n                        {user.username}\n                      </TableCell>\n\n                      <TableCell align=\"left\" sx={{ width: \"300px\", fontSize: '12px' }}>\n                        {user.email}\n                      </TableCell>\n\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        {user.role.keyRole}\n                      </TableCell>\n\n\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\n                        {user.department.nameDepartment}\n                      </TableCell >\n                      <TableCell align=\"left\" sx={{ padding: \"0px\" }}>\n                        <Button size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, index)} >\n                          <EditIcon style={{ width: \"16px\" }} />\n                        </Button>\n                        <Popover\n                          open={!!anchorEl[index]}\n                          anchorEl={anchorEl[index]}\n                          onClose={() => handleCloseMenu(index)}\n                          anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                          PaperProps={{\n                            sx: {\n                              p: 1,\n                              width: 340,\n                              '& .MuiMenuItem-root': {\n                                px: 1,\n                                typography: 'body2',\n                                borderRadius: 0.75,\n                              },\n                            },\n                          }}\n                        >\n                          <Box>\n                            <UserForm user={user} key={user._id} />\n                          </Box>\n                        </Popover>\n                      </TableCell>\n                      <TableCell align=\"left\" sx={{ padding: \"0px\" }} >\n                        <Button style={{ color: \"red\" }} onClick={(e) => dispatch(deleteUser(user._id))} >\n                          <DeleteForeverIcon style={{ width: \"16px\" }} />\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  )}\n\n                  <TableRow>\n                    <TablePagination\n                      style={{ fontSize: \"12px\" }}\n                      sx={{\n                        '& .MuiTablePagination-select': {\n                          width: \"12px\"\n                        },\n                        '& .MuiTablePagination-selectLabel': {\n                          fontSize: \"12px\"\n                        },  \n                        '& .MuiTablePagination-selectIcon': {\n                          width: \"16px\"\n                        },\n                        '& .MuiTablePagination-displayedRows': {\n                          fontSize: \"12px\"\n                        },\n                        '& .MuiSvgIcon-root': {\n                          fontSize: \"16px\"\n                        },\n                      }}\n                      rowsPerPageOptions={[5, 10, 25]}\n                      labelRowsPerPage={\"Số lượng hàng:\"}\n                      count={users.length}\n                      rowsPerPage={rowsPerPage}\n                      page={page}\n                      onPageChange={handleChangePage}\n                      onRowsPerPageChange={handleChangeRowsPerPage}\n                      SelectProps={{\n                        MenuProps: {\n                          sx: {\n                            \"&& .MuiTablePagination-menuItem\": {\n                              fontSize: \"12px\"\n                            }\n                          }\n                        }\n                      }}\n                    />\n                  </TableRow>\n                </TableBody>\n              ) : (\n                <TableBody>\n                  <TableRow>\n                    <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                      <Typography variant=\"h6\" paragraph>\n                        Không tồn tại user\n                      </Typography>\n\n                      <Typography variant=\"body2\">\n                        Không tìm thấy kết quả &nbsp;\n                        <strong>&quot;{filterName}&quot;</strong>.\n                      </Typography>\n                    </TableCell>\n                  </TableRow>\n                </TableBody>\n              )}\n            </Table>\n          </TableContainer>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default Users;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\NewEvent.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\Department.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\JobFromEvent.tsx",["719","720"],"import * as React from \"react\";\nimport { styled, alpha } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getJobEvents, deleteJobEvent } from \"redux/actions/Manager\";\nimport { RootState } from \"redux/reducers\";\nimport { IJobEvent } from \"redux/types/jobEvent\";\nimport { TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Button, Card, Container, Popover, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\nimport { Link } from 'react-router-dom';\nimport UpdateJobEvent from \"pages/Manager/UpdateJobEvent\";\n// @mui\nimport EditIcon from '@mui/icons-material/Edit';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { Box } from \"@mui/system\";\nimport { visuallyHidden } from '@mui/utils';\nimport { useParams } from 'react-router-dom';\n\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\n    height: 96,\n    display: 'flex',\n    justifyContent: 'space-between',\n    padding: theme.spacing(0, 1, 0, 3),\n}));\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n        width: 320,\n    },\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n    },\n}));\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\ntype Order = 'asc' | 'desc';\n\nfunction getComparator<Key extends keyof any>(\n    order: Order,\n    orderBy: Key,\n): (\n    a: { [key in Key]: number | string },\n    b: { [key in Key]: number | string },\n) => number {\n    return order === 'desc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) {\n            return order;\n        }\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\ninterface DataUser {\n    _id: keyof IJobEvent;\n    nameJob: keyof IJobEvent;\n    event: keyof IJobEvent;\n    quantity: keyof IJobEvent;\n    unitPrice: keyof IJobEvent;\n    jobDescription: keyof IJobEvent;\n    benefit: keyof IJobEvent;\n    update: keyof IJobEvent;\n    delete: keyof IJobEvent;\n}\n\ninterface HeadCell {\n    _id: keyof DataUser;\n    label: string;\n    numeric: boolean;\n}\n\nconst headCells: HeadCell[] = [\n    {\n        _id: 'event',\n        numeric: false,\n        label: 'Tên sự kiện',\n    },\n    {\n        _id: 'nameJob',\n        numeric: false,\n        label: 'Tên công việc',\n    },\n    {\n        _id: 'quantity',\n        numeric: false,\n        label: 'Số lượng người',\n    },\n    {\n        _id: 'unitPrice',\n        numeric: false,\n        label: 'Đơn giá',\n    },\n    {\n        _id: 'jobDescription',\n        numeric: false,\n        label: 'Mô tả công việc',\n    },\n    {\n        _id: 'benefit',\n        numeric: false,\n        label: 'Yêu cầu công việc',\n    },\n    {\n        _id: 'update',\n        numeric: false,\n        label: '',\n    },\n    {\n        _id: 'delete',\n        numeric: false,\n        label: '',\n    },\n];\n\n\ninterface EnhancedTableProps {\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\n    order: Order;\n    orderBy: string;\n}\n\nfunction EnhancedTableHead(props: EnhancedTableProps) {\n    const { order, orderBy, onRequestSort } =\n        props;\n    const createSortHandler =\n        (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\n            onRequestSort(event, property);\n        };\n    return (\n        <TableHead\n            style={{ backgroundColor: \"#f4f5f5\" }}\n            sx={{\n                '& th:first-child': {\n                    borderRadius: '1em 0 0 0'\n                },\n                '& th:last-child': {\n                    borderRadius: '0 1em 0 0'\n                }\n            }}>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <TableCell\n                        key={headCell._id}\n                        align={headCell.numeric ? 'right' : 'left'}\n                        style={{ fontSize: '13px' }}\n                        sortDirection={orderBy === headCell._id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell._id}\n                            direction={orderBy === headCell._id ? order : 'asc'}\n                            onClick={createSortHandler(headCell._id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell._id ? (\n                                <Box component=\"span\" sx={visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </Box>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\ninterface RouteParams {\n    id: string\n}\nconst JobFromEvent: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n\n    const [jobEvents, setJobEvents] = React.useState<IJobEvent[]>([]);\n    const manager = useSelector((state: RootState) => state.manager);\n\n    const [anchorEl, setAnchorEl] = React.useState([null]);\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n    const [filterName, setFilterName] = React.useState('');\n\n    const [order, setOrder] = React.useState<Order>('asc');\n    const [orderBy, setOrderBy] = React.useState<keyof DataUser>('nameJob');\n\n    const handleRequestSort = (\n        event: React.MouseEvent<unknown>,\n        property: keyof DataUser,\n    ) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleChangeRowsPerPage = (event: any) => {\n        setPage(0);\n        setRowsPerPage(parseInt(event.target.value, 10));\n    };\n\n    const handleChangePage = (event: any, newPage: any) => {\n        setPage(newPage);\n    };\n\n    const handleFilterByName = (event: any) => {\n        setPage(0);\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = manager?.jobevents?.filter((jobEvent: any) => {\n                return jobEvent.nameJob.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setJobEvents(results);\n        } else {\n            setJobEvents(() => manager?.jobevents?.filter((jobEvent: any) => jobEvent.nameJob || jobEvent.event));\n            // If the text field is empty, show all users\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleOpenMenu = (jobEvent: any, index: any) => {\n        const newAnchorEls = [\n            ...anchorEl.slice(0, index),\n            jobEvent.currentTarget,\n            ...anchorEl.slice(index + 1)\n        ];\n        setAnchorEl(newAnchorEls);\n    };\n\n    const handleCloseMenu = (index: any) => {\n        const newAnchorEls = [\n            ...anchorEl.slice(0, index),\n            null,\n            ...anchorEl.slice(index + 1)\n        ];\n        setAnchorEl(newAnchorEls);\n    };\n\n    const sortJobEvent = stableSort(jobEvents, getComparator(order, orderBy));\n\n    React.useEffect(() => {\n        dispatch(getJobEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n\n        setJobEvents(() => manager?.jobevents?.filter((jobEvent: any) => jobEvent.event._id == params.id));\n    }, [manager]);\n\n    React.useEffect(() => {\n        document.title = \"JOB EVENT\";\n    }, []);\n\n    return (\n\n        <>\n            <Container>\n                <Card style={{ padding: \"20px\", marginTop: \"20px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\n                    <StyledRoot\n                        style={{ display: \"flex\", flexDirection: \"row\" }}\n                        sx={{\n                            color: 'primary.main',\n                            bgcolor: 'primary.lighter',\n                        }}\n                    >\n                        <Box>\n                            <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\n                                Công Việc Sự Kiện\n                            </Typography>\n                        </Box>\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                            <Box style={{ marginRight: \"14px\" }}>\n                                <StyledSearch\n                                    style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\n                                    value={filterName}\n                                    onChange={handleFilterByName}\n                                    placeholder=\"Tìm kiếm công việc...\"\n                                    startAdornment={\n                                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                                        </InputAdornment>\n                                    }\n                                />\n                            </Box>\n                            <Box component={Link} to=\"/jobEvent/newJobEvent\" style={{ fontSize: '14px', textDecoration: \"none\", color: \"black\" }}>\n                                <Box style={{\n                                    border: '1px solid rgba(158, 158, 158, 0.32)',\n                                    borderRadius: '30px', textAlign: 'center',\n                                    marginTop: '0.5px', padding: '11px', backgroundColor: \"#f5f5f5\",\n                                    width: 140, display: 'flex', flexDirection: 'row', justifyContent: 'center'\n                                }}>\n                                    <AddIcon style={{ width: '14px', color: '#ee6f81', marginRight: \"6px\" }} />\n                                    <Typography style={{ fontSize: '12px', paddingTop: \"2.5px\" }} >\n                                        Thêm Công Việc\n                                    </Typography>\n                                </Box>\n                            </Box>\n                        </Box>\n                    </StyledRoot>\n                    <TableContainer>\n                        {/* Table user */}\n                        <Table >\n                            <EnhancedTableHead\n                                order={order}\n                                orderBy={orderBy}\n                                onRequestSort={handleRequestSort}\n                            />\n                            {jobEvents && jobEvents.length > 0 ? (\n                                <TableBody>\n                                    {sortJobEvent.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((jobEvent: any, index) =>\n                                        <TableRow key={jobEvent._id}>\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\n                                                {jobEvent.event.nameEvent}\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\n                                                {jobEvent.nameJob}\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\n                                                {jobEvent.quantity}\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\n                                                {jobEvent.unitPrice}\n\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\n                                                {jobEvent.jobDescription}\n                                            </TableCell>\n\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\n                                                {jobEvent.benefit}\n                                            </TableCell>\n\n                                            <TableCell align=\"right\">\n                                                <Button size=\"large\" color=\"inherit\" onClick={(jobEvent) => handleOpenMenu(jobEvent, index)} >\n                                                    <EditIcon style={{ width: \"16px\" }} />\n                                                </Button>\n                                                <Popover\n                                                    open={!!anchorEl[index]}\n                                                    anchorEl={anchorEl[index]}\n                                                    onClose={() => handleCloseMenu(index)}\n                                                    anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                                    PaperProps={{\n                                                        sx: {\n                                                            p: 1,\n                                                            width: 340,\n                                                            '& .MuiMenuItem-root': {\n                                                                px: 1,\n                                                                typography: 'body2',\n                                                                borderRadius: 0.75,\n                                                            },\n                                                        },\n                                                    }}\n                                                >\n                                                    <Box>\n                                                        <UpdateJobEvent jobEvent={jobEvent} key={jobEvent._id} />\n                                                    </Box>\n                                                </Popover>\n                                            </TableCell>\n                                            <TableCell >\n                                                <Button style={{ color: \"red\" }} onClick={(e) => dispatch(deleteJobEvent(jobEvent._id))} >\n                                                    <DeleteForeverIcon style={{ width: \"16px\" }} />\n                                                </Button>\n                                            </TableCell>\n                                        </TableRow>\n                                    )}\n\n                                    <TableRow>\n                                        <TablePagination\n                                            style={{ fontSize: \"12px\" }}\n                                            sx={{\n                                                '& .MuiTablePagination-selectLabel': {\n                                                    fontSize: \"12px\"\n                                                },\n                                                '& .MuiTablePagination-selectIcon': {\n                                                    width: \"16px\"\n                                                },\n                                                '& .MuiTablePagination-displayedRows': {\n                                                    fontSize: \"12px\"\n                                                },\n                                                '& .MuiSvgIcon-root': {\n                                                    fontSize: \"16px\"\n                                                },\n                                            }}\n                                            rowsPerPageOptions={[5, 10, 25]}\n                                            labelRowsPerPage={\"Số lượng hàng:\"}\n                                            count={jobEvents.length}\n                                            rowsPerPage={rowsPerPage}\n                                            page={page}\n                                            onPageChange={handleChangePage}\n                                            onRowsPerPageChange={handleChangeRowsPerPage}\n                                            SelectProps={{\n                                                MenuProps: {\n                                                    sx: {\n                                                        \"&& .MuiTablePagination-menuItem\": {\n                                                            fontSize: \"12px\"\n                                                        }\n                                                    }\n                                                }\n                                            }}\n                                        />\n                                    </TableRow>\n                                </TableBody>\n                            ) : (\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                            <Typography variant=\"h6\" paragraph>\n                                                Không tồn tại công việc\n                                            </Typography>\n\n                                            <Typography variant=\"body2\">\n                                                Không tìm thấy kết quả &nbsp;\n                                                <strong>&quot;{filterName}&quot;</strong>.\n                                            </Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            )}\n                        </Table>\n                    </TableContainer>\n                </Card>\n            </Container>\n        </>\n    );\n};\n\nexport default JobFromEvent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\Login.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\LoginUser.tsx",["721","722","723"],"// import React from \"react\";\n// import { makeStyles } from \"@material-ui/core/styles\";\n// import { Button, CircularProgress, Typography } from \"@material-ui/core\";\n// import { Formik } from \"formik\";\n// import * as Yup from \"yup\";\n// import { Container, Drawer, Box, TextField } from \"@mui/material\";\n\n// import { useDispatch } from \"react-redux\";\n// import { loginUser } from \"redux/actions/user\";\n// import { Link } from \"react-router-dom\";\n// import { InputAdornment } from \"@mui/material\";\n// import PersonIcon from '@mui/icons-material/Person';\n// import PasswordIcon from '@mui/icons-material/Password';\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     flexGrow: 1,\n//     position: \"absolute\",\n//     top: \"0\",\n//     left: \"0\",\n//     width: \"100%\",\n//     minHeight: \"100vh\",\n//   },\n//   btnLogin: {\n//     marginTop: theme.spacing(2),\n//     padding: theme.spacing(1, 2),\n//   },\n//   checkboxWrapper: {\n//     display: \"flex\",\n//     justifyContent: \"flex-start\",\n//     marginTop: theme.spacing(2),\n//   },\n\n//   textField: {\n//     margin: theme.spacing(2, 0),\n//     textAlign: 'left',\n//     fontSize: '13px',\n//     \"& .MuiInputBase-root\": {\n//       \"& fieldset\": {\n//         borderRadius: \"10px\",\n//       },\n//     },\n//   },\n\n// }));\n\n// interface IInitialValues {\n//   email: string;\n//   password: string;\n// }\n\n// const LoginUser: React.FC = (): JSX.Element => {\n//   const classes = useStyles();\n//   const dispatch = useDispatch();\n//   // const [checked, setChecked] = React.useState<boolean>(false);\n\n//   const initialValues: IInitialValues = {\n//     email: \"\",\n//     password: \"\",\n//   };\n\n//   const onHandleSubmit = (values: IInitialValues, { setSubmitting }: any) => {\n//     dispatch(loginUser(values, setSubmitting));\n//   };\n\n//   const validationSchema = Yup.object({\n//     email: Yup.string().required(\"Invalid username!\"),\n//     password: Yup.string().required(\"Invalid password!\"),\n//   });\n\n//   React.useEffect(() => {\n//     document.title = \"Đăng nhập | CTV\";\n//   }, []);\n\n//   return (\n\n//     <Box component={\"nav\"}\n//       color={\"black\"}\n//       display={\"flex\"}\n//     >\n//       <Box flexGrow={1} style={{ paddingRight: 360 }}>\n\n//       </Box>\n//       <Drawer\n//         anchor=\"right\"\n//         open\n//         variant=\"permanent\"\n//         style={{}}\n//         BackdropProps={{ style: { position: 'absolute' } }}\n//         PaperProps={{\n//           sx: {\n//             width: 400,\n//             bgcolor: 'background.default',\n//             borderLeftStyle: 'none',\n//           },\n//         }}\n//       >\n//         <Container style={{ maxWidth: 360, }}>\n//           <Box>\n//             <Box display={\"flex\"} flexDirection={'column'} justifyContent={'center'} style={{ backgroundColor: 'white', padding: '220px 0px 0px', borderRadius: '20px' }}>\n//               <Box display={\"flex\"} flexDirection={'column'} justifyContent={'center'} textAlign={'left'}>\n//                 <Typography style={{ fontWeight: \"500\", fontSize: \"20px\", margin: \"14px 0px\", letterSpacing: '0.6px', paddingBottom: '4px' }} >\n//                   Đăng nhập vào Cộng Tác Viên\n//                 </Typography>\n//               </Box>\n//               <Box display={'flex'} textAlign={'left'} flexDirection={'row'} style={{ fontSize: \"14px\", fontWeight: '380' }} >\n//                 <Box style={{ color: 'black', marginRight: '4px' }}>\n//                   Bạn là người mới ?\n//                 </Box>\n//                 <Box component={Link} to=\"/register\" style={{ color: 'black', textDecoration: \"none\", cursor: 'pointer' }} >\n//                   Tạo tài khoản\n//                 </Box>\n//               </Box>\n//               <Box textAlign={'center'}>\n//                 <Formik\n//                   initialValues={initialValues}\n//                   validationSchema={validationSchema}\n//                   onSubmit={onHandleSubmit}\n//                 >\n//                   {({ isSubmitting, handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\n//                     <form noValidate onSubmit={handleSubmit}>\n//                       <Box style={{ margin: '30px 0px 0px 0px' }}>\n\n//                         <TextField\n//                           className={classes.textField}\n//                           fullWidth\n//                           variant={'outlined'}\n//                           name='email'\n//                           value={values.email}\n//                           onChange={handleChange}\n//                           onBlur={handleBlur}\n//                           placeholder='Nhập gmail'\n//                           InputProps={{\n//                             startAdornment: (\n//                               <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n//                                 <PersonIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n//                               </InputAdornment>\n//                             ),\n//                           }}\n//                           inputProps={{\n//                             style: {\n//                               fontSize: '12px',\n//                             }\n//                           }}\n//                           helperText={touched.email ? errors.email : \"\"}\n//                           error={touched.email ? Boolean(errors.email) : false}\n//                         />\n\n//                         <TextField\n//                           className={classes.textField}\n//                           fullWidth\n//                           style={{ paddingBottom: '30px' }}\n//                           variant={'outlined'}\n//                           type='password'\n//                           name='password'\n//                           value={values.password}\n//                           onChange={handleChange}\n//                           onBlur={handleBlur}\n//                           placeholder='Nhập mật khẩu'\n//                           InputProps={{\n//                             startAdornment: (\n//                               <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n//                                 <PasswordIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n//                               </InputAdornment>\n//                             )\n//                           }}\n//                           inputProps={{\n//                             style: {\n//                               fontSize: '12px',\n//                             }\n//                           }}\n//                           helperText={touched.password ? errors.password : \"\"}\n//                           error={touched.password ? Boolean(errors.password) : false}\n//                         />\n//                         <Box textAlign={'right'} style={{ fontSize: \"14px\", fontWeight: '380' }}>\n//                           <Box component={Link} to=\"/login\" style={{ color: 'black', cursor: 'pointer', paddingBottom: '4px' }}>\n//                             Quên mật khẩu?\n//                           </Box>\n//                         </Box>\n\n//                       </Box>\n//                       <Button\n//                         fullWidth\n//                         disableRipple\n//                         type='submit'\n//                         style={{ backgroundColor: 'rgb(33, 43, 54)', color: \"white\", borderRadius: 10, textTransform: 'capitalize', fontWeight: 'normal' }}\n//                         className={classes.btnLogin}\n//                         disabled={isSubmitting}\n//                       >\n//                         {isSubmitting ? <CircularProgress size='1rem' /> : \"Đăng Nhập\"}\n//                       </Button>\n//                     </form>\n//                   )}\n//                 </Formik>\n//               </Box>\n//             </Box>\n//           </Box>\n//         </Container>\n//       </Drawer>\n\n//     </Box>\n//   );\n// };\n\n// export default LoginUser;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Container, Typography, Drawer, Button, Box, TextField, CircularProgress } from '@mui/material';\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { styled } from '@mui/material/styles';\n\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"redux/actions/user\";\nimport { Link } from \"react-router-dom\";\nimport { InputAdornment } from \"@mui/material\";\nimport PersonIcon from '@mui/icons-material/Person';\nimport PasswordIcon from '@mui/icons-material/Password';\nimport { BoxInfor } from \"layouts/navigation/style\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n  btnLogin: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1, 2),\n  },\n  checkboxWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    marginTop: theme.spacing(2),\n  },\n\n  textField: {\n    margin: theme.spacing(2, 0),\n    textAlign: 'left',\n    fontSize: '13px',\n    \"& .MuiInputBase-root\": {\n      \"& fieldset\": {\n        borderRadius: \"10px\",\n      },\n    },\n  },\n\n}));\n\n\n\nconst StyledSection = styled('div')(({ theme }) => ({\n\n  maxWidth: 600,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  backgroundColor: 'white'\n\n}));\n\nconst StyledRoot = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex',\n    padding: 0\n  },\n}));\n\nconst StyledContent = styled('div')(({ theme }) => ({\n  maxWidth: 800,\n  margin: 'auto',\n  minHeight: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  padding: theme.spacing(12, 0),\n}));\n\ninterface IInitialValues {\n  email: string;\n  password: string;\n}\n\nconst LoginUser: React.FC = (): JSX.Element => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  // const [checked, setChecked] = React.useState<boolean>(false);\n\n  const initialValues: IInitialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const onHandleSubmit = (values: IInitialValues, { setSubmitting }: any) => {\n    dispatch(loginUser(values, setSubmitting));\n  };\n\n  const validationSchema = Yup.object({\n    email: Yup.string().required(\"Invalid username!\"),\n    password: Yup.string().required(\"Invalid password!\"),\n  });\n\n  React.useEffect(() => {\n    document.title = \"Đăng nhập | CTV\";\n  }, []);\n\n  return (\n\n\n    <StyledRoot>\n      {/* this is logo */}\n      {/* <Logo\n      sx={{\n        position: 'fixed',\n        top: { xs: 16, sm: 24, md: 40 },\n        left: { xs: 16, sm: 24, md: 40 },\n      }}\n    /> */}\n\n      <Container maxWidth=\"lg\">\n        <StyledContent>\n          <Typography style={{ fontWeight: \"700\", fontSize: \"40px\", marginBottom: \"20px\", letterSpacing: '0.8px', paddingBottom: '4px' }} >\n            Hi, welcome to CTV\n          </Typography>\n          <img src=\"/login.png\" />\n        </StyledContent>\n\n      </Container>\n\n      <StyledSection>\n\n        <Container >\n\n          <Box display={\"flex\"} flexDirection={'column'}\n            justifyContent={'center'}\n            style={{ backgroundColor: 'white', padding: '120px 0px 0px', borderRadius: '20px' }}\n          >\n            <Box display={\"flex\"} flexDirection={'column'} justifyContent={'center'} textAlign={'left'}>\n              <Typography style={{ fontWeight: \"700\", fontSize: \"20px\", margin: \"14px 0px\", letterSpacing: '0.6px', paddingBottom: '4px' }} >\n                Đăng nhập vào CTV\n              </Typography>\n            </Box>\n            <Box display={'flex'} textAlign={'left'} flexDirection={'row'} style={{ fontSize: \"14px\", fontWeight: '380' }} >\n              <Box style={{ color: 'black', marginRight: '4px' }}>\n                Bạn là người mới ?\n              </Box>\n              <Box component={Link} to=\"/register\"\n                style={{ color: 'rgb(84 219 154)', cursor: 'pointer' }}\n              >\n                Tạo tài khoản\n              </Box>\n            </Box>\n            <Box textAlign={'center'}>\n              <Formik\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={onHandleSubmit}\n              >\n                {({ isSubmitting, handleSubmit, handleChange, handleBlur, values, errors, touched }) => (\n                  <form noValidate onSubmit={handleSubmit}>\n                    <Box style={{ margin: '30px 0px 0px 0px' }}>\n\n                      <TextField\n                        className={classes.textField}\n                        fullWidth\n                        variant={'outlined'}\n                        name='email'\n                        value={values.email}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        placeholder='Nhập gmail'\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                              <PersonIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                            </InputAdornment>\n                          ),\n                        }}\n                        inputProps={{\n                          style: {\n                            fontSize: '12px',\n                          }\n                        }}\n                        helperText={touched.email ? errors.email : \"\"}\n                        error={touched.email ? Boolean(errors.email) : false}\n                      />\n\n                      <TextField\n                        className={classes.textField}\n                        fullWidth\n                        style={{ paddingBottom: '30px' }}\n                        variant={'outlined'}\n                        type='password'\n                        name='password'\n                        value={values.password}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        placeholder='Nhập mật khẩu'\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                              <PasswordIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                            </InputAdornment>\n                          )\n                        }}\n                        inputProps={{\n                          style: {\n                            fontSize: '12px',\n                          }\n                        }}\n                        helperText={touched.password ? errors.password : \"\"}\n                        error={touched.password ? Boolean(errors.password) : false}\n                      />\n                      <Box textAlign={'right'} style={{ fontSize: \"14px\", fontWeight: '380' }}>\n                        <Box component={Link} to=\"/login\" style={{ color: 'black', cursor: 'pointer', paddingBottom: '4px' }}>\n                          Quên mật khẩu?\n                        </Box>\n                      </Box>\n\n                    </Box>\n                    <Button\n                      fullWidth\n                      disableRipple\n                      type='submit'\n                      style={{ backgroundColor: 'rgb(33, 43, 54)', color: \"white\", borderRadius: 10, textTransform: 'capitalize', fontWeight: 'normal' }}\n                      className={classes.btnLogin}\n                      disabled={isSubmitting}\n                    >\n                      {isSubmitting ? <CircularProgress size='1rem' /> : \"Đăng Nhập\"}\n                    </Button>\n                  </form>\n                )}\n              </Formik>\n            </Box>\n          </Box>\n\n        </Container>\n      </StyledSection>\n\n\n    </StyledRoot>\n  );\n};\n\nexport default LoginUser;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\Register.tsx",["724","725","726","727","728","729","730"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDepartments } from \"redux/actions/user\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FormField from \"pages/auth/FormField\";\nimport { registerSManagerAdmin } from \"redux/actions/sManager\";\nimport { registerManagerAdmin } from \"redux/actions/Manager\";\nimport { FormControlLabel, RadioGroup, Typography, Grid, Button, CircularProgress } from \"@material-ui/core\";\nimport FormFieldDepartment from \"pages/auth/FormDepartment_Admin\";\n\nimport { Link } from 'react-router-dom';\nimport { Box, Container, FormControl, FormLabel, InputAdornment, MenuItem, Select, TextField, Radio } from \"@mui/material\";\nimport { Person } from \"@mui/icons-material\";\nimport { RootState } from \"redux/reducers\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    position: \"absolute\",\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n  btnRegister: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1, 2),\n  },\n  checkboxWrapper: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(2, 0),\n    width: 300,\n  },\n  formLabel: {\n    marginBottom: theme.spacing(1.5),\n    textAlign: 'left',\n    fontSize: '13px',\n    borderRadius: 10\n  },\n  selectStyle: {\n    fontSize: '13px',\n    marginBottom: '28px',\n\n    \"& fieldset\": {\n      borderRadius: \"10px\",\n    },\n  },\n  textField: {\n    margin: theme.spacing(1.5, 0),\n    textAlign: 'left',\n    fontSize: '13px',\n    \"& .MuiInputBase-root\": {\n      \"& fieldset\": {\n        borderRadius: \"10px\",\n      },\n    },\n  },\n}));\n\ninterface IInitialValues {\n  username: string;\n  email: string;\n  password: string;\n  department: string;\n}\n\nconst Register: React.FC = (): JSX.Element => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [checked2, setChecked2] = React.useState(\"smanager\");\n  const [checked3, setChecked3] = React.useState(\"manager\");\n\n  const Department = useSelector((state: RootState) => state.admin);\n\n  React.useEffect(() => {\n    dispatch(getDepartments());\n  }, [dispatch]);\n\n\n  const initialValues: IInitialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    department: \"\",\n  };\n\n  const onHandleSubmit = (values: IInitialValues, { setSubmitting }: any) => {\n\n    if (checked2 === \"smanager\") {\n      dispatch(registerSManagerAdmin({ ...values, role: \"640cc3c229937ffacc4359f8\" }, setSubmitting));\n    } else if (checked3 === \"manager\") {\n      dispatch(registerManagerAdmin({ ...values, role: \"640cc3ca29937ffacc4359fa\" }, setSubmitting));\n    }\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setChecked2(event.target.value);\n    setChecked3(event.target.value);\n  };\n\n  const validationSchema = Yup.object({\n    username: Yup.string().required(\"Invalid username!\"),\n    email: Yup.string().email(\"Invalid email!\").required(\"Invalid email!\"),\n    password: Yup.string().required(\"Invalid password!\"),\n  });\n\n  React.useEffect(() => {\n    document.title = \"Thêm tài khoản | CTV \";\n  }, []);\n\n  return (\n    <Container style={{ maxWidth: 600 }}>\n      <Box display={\"flex\"}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        alignItems={'center'}\n        style={{ backgroundColor: 'white', padding: '40px 0px', borderRadius: '20px' }}>\n\n        <Typography style={{ fontWeight: \"bold\", fontSize: \"18px\", marginTop: \"5px\" }} >\n          Tạo Tài Khoản\n        </Typography>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onHandleSubmit}\n        >\n          {({ isSubmitting, handleSubmit, values, handleChange, handleBlur, errors, touched }) => (\n            <form noValidate onSubmit={handleSubmit}>\n              <Box display={\"flex\"}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                alignItems={'center'}\n                style={{ backgroundColor: 'white', padding: '40px 0px', borderRadius: '20px' }}>\n\n                {/* Email */}\n                <FormControl>\n                  <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: \"5px\" }}>\n                    Email\n                  </FormLabel>\n                  <TextField\n                    style={{ width: 300, }}\n                    className={classes.textField}\n                    fullWidth\n                    variant={'outlined'}\n                    name='email'\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder='Nhập Email'\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                          <Person style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                        </InputAdornment>\n                      ),\n                    }}\n                    inputProps={{\n                      style: {\n                        fontSize: '12px',\n                      }\n                    }}\n                    helperText={touched.email ? errors.email : \"\"}\n                    error={touched.email ? Boolean(errors.email) : false}\n                  />\n                </FormControl>\n\n\n\n                {/* Username */}\n                <FormControl>\n                  <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: \"5px\" }}>\n                    Username\n                  </FormLabel>\n                  <TextField\n                    style={{ width: 300, }}\n                    className={classes.textField}\n                    fullWidth\n                    variant={'outlined'}\n                    name='username'\n                    value={values.username}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder='Nhập username'\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                          <Person style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                        </InputAdornment>\n                      ),\n                    }}\n                    inputProps={{\n                      style: {\n                        fontSize: '12px',\n                      }\n                    }}\n                    helperText={touched.username ? errors.username : \"\"}\n                    error={touched.username ? Boolean(errors.username) : false}\n                  />\n                </FormControl>\n\n                {/* password */}\n                <FormControl>\n                  <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: \"5px\" }}>Password</FormLabel>\n                  <TextField\n                    style={{ width: 300, }}\n                    className={classes.textField}\n                    fullWidth\n                    variant={'outlined'}\n                    name='password'\n                    type=\"password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    placeholder='Nhập password'\n                    InputProps={{\n                      startAdornment: (\n                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\n                          <Person style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\n                        </InputAdornment>\n                      ),\n                    }}\n                    inputProps={{\n                      style: {\n                        fontSize: '12px',\n                      }\n                    }}\n                    helperText={touched.password ? errors.password : \"\"}\n                    error={touched.password ? Boolean(errors.password) : false}\n                  />\n                </FormControl>\n\n\n\n                {/* <Select\n                name=\"nameDepartment\"\n                fullWidth\n                displayEmpty\n                variant={'outlined'}\n                className={classes.selectStyle}\n                value={values.nameDepartment}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                error={touched.nameDepartment ? Boolean(errors.nameDepartment) : false}\n                renderValue={(value) => value ? value : <em style={{ fontSize: '13px' }}>Vui lòng chọn khoa</em>}\n                MenuProps={{\n                  PaperProps: {\n                    style: {\n                      fontSize: 10,\n                    },\n                  },\n                }}\n              >\n                {departments?.map((department: any) => {\n                  return <MenuItem style={{ fontSize: '13px' }} value={department.nameDepartment} key={department._id}> {department.nameDepartment} </MenuItem>\n                })}\n              </Select> */}\n\n                <FormFieldDepartment isDepartmentCbb={true} />\n\n                <Box  display={\"flex\"} justifyContent={'center'}>\n                  <RadioGroup\n                    name=\"radio-buttons-group\"\n                    style={{ flexDirection: 'row', fontSize: '13px' }}\n                  >\n                    <FormControlLabel  value=\"smanager\" control={<Radio sx={{\n                      \"& svg\": {\n                        width: \"14px\",\n                        height: \"14px\"\n                      }\n                    }} onChange={handleChange} />} label={<Box fontSize={'13px'} style={{ padding: '3px' }} >Quản lý cấp cao</Box>}  />\n                    <FormControlLabel value=\"manager\" control={<Radio sx={{\n                      \"& svg\": {\n                        width: \"14px\",\n                        height: \"14px\"\n                      }\n                    }} onChange={handleChange} />} label={<Box fontSize={'13px'} style={{ padding: '3px' }} >Quản lý</Box>}  />\n                  </RadioGroup>\n                </Box>\n                <Box marginTop={2}>\n                  <Button\n                    type='submit'\n                    style={{\n                      color: \"rgb(33, 43, 54)\",\n                      height: \"34px\",\n                      width: \"120px\",\n                      fontSize: \"12px\",\n                      borderRadius: \"4px\",\n                      fontWeight: 500,\n                      textTransform: \"capitalize\",\n                      border: '1px solid rgb(33, 43, 54)',\n                      marginRight: 10\n                    }}\n                    disabled={isSubmitting}\n                  >\n                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Đăng Ký\"}\n                  </Button>\n\n                  <Link to=\"/users\">\n                    <Button style={{\n                      color: \"#FF6969\",\n                      height: \"34px\",\n                      width: \"120px\",\n                      fontSize: \"12px\",\n                      fontWeight: 500,\n                      borderRadius: \"4px\",\n                      textTransform: \"capitalize\",\n                      border: '1px solid #FF6969',\n\n                    }}\n                    >Quay lại</Button>\n                  </Link>\n                </Box>\n\n\n\n              </Box>\n            </form>\n          )}\n        </Formik>\n      </Box>\n\n    </Container >\n\n  );\n};\n\nexport default Register;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\RegisterUser.tsx",["731","732","733","734","735"],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\DetailGuest1.tsx",["736","737","738","739","740","741","742"],"import * as React from \"react\";\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { Box, OutlinedInput, InputAdornment, TextField, Toolbar, AppBar, Typography, Avatar, ListItemIcon, Divider, MenuItem as MenuItemDepartment, IconButton, Stack, Popover, MenuItem } from '@mui/material';\n\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedGuest from \"pages/guest/FeedGuest\";\nimport FeedDetailGuest from \"pages/guest/FeedDetailGuest\";\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport {  Person, PersonAdd } from '@mui/icons-material';\n\nimport { Link, useParams } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\ninterface RouteParams {\n    id: string\n}\nconst DetailGuest: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [eventDetails, setEventDetails] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setEventDetails(() =>\n            user?.events?.filter((event: any) =>\n                event._id == params.id\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box sx={{ fontSize: '12px', position: \"start\" }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={{\n                                xs: 0.5,\n                                sm: 1,\n                            }}\n                            sx={{ margin: 3, color: 'black' }}\n                        >\n                            <Box sx={{\n                                display: 'flex', alignItems: 'center', textAlign: 'center'\n                            }}>\n                                <IconButton onClick={(event) => handleClickUser(event)}\n                                    sx={{\n                                        p: 0,\n\n                                    }}>\n                                    <Person style={{ color: \"black\" }} />\n                                </IconButton>\n\n                                <Popover\n                                    open={openUser}\n                                    anchorEl={anchorElUser}\n                                    onClose={handleCloseUser}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                    sx={{ marginLeft: 1 }}\n                                    PaperProps={{\n                                        style: {\n                                            borderRadius: 20,\n                                            boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                        },\n                                        sx: {\n                                            p: 1,\n                                            width: 220,\n                                            overflowX: 'unset',\n                                            overflowY: 'unset',\n                                            '& .MuiMenuItem-root': {\n                                                px: 1,\n                                                py: 1,\n                                                typography: 'body2',\n                                                borderRadius: 1,\n                                                justifyContent: 'left'\n                                            },\n                                            '& .MuiAvatar-root': {\n                                                width: 32,\n                                                height: 32,\n                                                ml: -0.5,\n                                                mt: 1,\n                                                mr: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n\n                                    <BoxSpan />\n                                    <Stack sx={{ p: 0.5 }} >\n                                    <StyledMenuItem component={Link} to={'/loginuser'} >\n                                            <Avatar>G</Avatar>\n                                            <Typography style={{ color: \"black\" }}>Tài Khoản</Typography>\n                                        </StyledMenuItem>\n\n                                        <Divider />\n\n                                        <StyledMenuItem component={Link} to={'/register'} >\n                                            <ListItemIcon>\n                                                <PersonAdd fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <Typography style={{ color: \"black\" }}>Đăng Ký</Typography>\n                                        </StyledMenuItem>\n                                    </Stack>\n\n                                </Popover>\n                            </Box>\n                        </Stack>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <Link style={{ textDecoration: \"none\" }} to={`/guestEvent2/${event._id}`}>\n                                            <FeedGuest event={event} key={event._id} />\n                                        </Link>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {eventDetails.map((event: any) =>\n                                    <Box style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailGuest event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", height: \"410px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default DetailGuest;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\DetailGuest2.tsx",["743","744","745","746","747","748","749"],"import * as React from \"react\";\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { Box, OutlinedInput, InputAdornment, TextField, Toolbar, AppBar, Typography, Avatar, ListItemIcon, Divider, MenuItem as MenuItemDepartment, IconButton, Stack, Popover, MenuItem } from '@mui/material';\n\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedGuest from \"pages/guest/FeedGuest\";\nimport FeedDetailGuest from \"pages/guest/FeedDetailGuest\";\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Person, PersonAdd } from '@mui/icons-material';\n\nimport { Link, useParams } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\ninterface RouteParams {\n    id: string\n}\nconst DetailGuest: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const params = useParams<RouteParams>();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [eventDetails, setEventDetails] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setEventDetails(() =>\n            user?.events?.filter((event: any) =>\n                event._id == params.id\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box sx={{ fontSize: '12px', position: \"start\" }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ | CTV\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={{\n                                xs: 0.5,\n                                sm: 1,\n                            }}\n                            sx={{ margin: 3, color: 'black' }}\n                        >\n                            <Box sx={{\n                                display: 'flex', alignItems: 'center', textAlign: 'center'\n                            }}>\n                                <IconButton onClick={(event) => handleClickUser(event)}\n                                    sx={{\n                                        p: 0,\n\n                                    }}>\n                                    <Person style={{ color: \"black\" }} />\n                                </IconButton>\n\n                                <Popover\n                                    open={openUser}\n                                    anchorEl={anchorElUser}\n                                    onClose={handleCloseUser}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                    sx={{ marginLeft: 1 }}\n                                    PaperProps={{\n                                        style: {\n                                            borderRadius: 20,\n                                            boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                        },\n                                        sx: {\n                                            p: 1,\n                                            width: 220,\n                                            overflowX: 'unset',\n                                            overflowY: 'unset',\n                                            '& .MuiMenuItem-root': {\n                                                px: 1,\n                                                py: 1,\n                                                typography: 'body2',\n                                                borderRadius: 1,\n                                                justifyContent: 'left'\n                                            },\n                                            '& .MuiAvatar-root': {\n                                                width: 32,\n                                                height: 32,\n                                                ml: -0.5,\n                                                mt: 1,\n                                                mr: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n\n                                    <BoxSpan />\n                                    <Stack sx={{ p: 0.5 }} >\n                                        <StyledMenuItem component={Link} to={'/loginuser'} >\n                                            <Avatar>G</Avatar>\n                                            <Typography style={{ color: \"black\" }}>Tài Khoản</Typography>\n                                        </StyledMenuItem>\n\n                                        <Divider />\n\n                                        <StyledMenuItem component={Link} to={'/register'} >\n                                            <ListItemIcon>\n                                                <PersonAdd fontSize=\"small\" />\n                                            </ListItemIcon>\n                                            <Typography style={{ color: \"black\" }}>Đăng Ký</Typography>\n                                        </StyledMenuItem>\n                                    </Stack>\n\n                                </Popover>\n                            </Box>\n                        </Stack>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <Link style={{ textDecoration: \"none\" }} to={`/guestEvent1/${event._id}`}>\n                                            <FeedGuest event={event} key={event._id} />\n                                        </Link>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {eventDetails.map((event: any) =>\n                                    <Box style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailGuest event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", height: \"410px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default DetailGuest;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\Guest.tsx",["750","751","752","753","754","755","756","757","758","759","760","761","762","763","764"],"import * as React from \"react\";\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { Button, AppBar, Box, Toolbar, Typography, InputAdornment, OutlinedInput, IconButton, TextField } from '@mui/material';\n\nimport { MenuItem as MenuItemDepartment } from \"@material-ui/core\"\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedGuest from \"pages/guest/FeedGuest\";\nimport FeedDetailGuest from \"pages/guest/FeedDetailGuest\";\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Person, PersonAdd } from '@mui/icons-material';\n\nimport { Link } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\n\nconst Content: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [eventDetails, setEventDetails] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [user]);\n    const findIndexEvent = user.events.map((event: any) => event.nameEvent)\n    React.useEffect(() => {\n        setEventDetails(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent == findIndexEvent[0]\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box style={{ fontSize: '12px' }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Box\n                            style={{ textDecoration:\"none\", color:\"#212B36\", marginRight:14, fontSize: 14 }}\n                            component={Link} to={\"/loginuser\"}\n                        >\n                           Đăng nhập\n                        </Box>\n                        <Box\n                            style={{ backgroundColor: 'rgb(33, 43, 54)', color: \"white\" , fontSize: 13, fontWeight:\"400\", borderRadius: 4, textDecoration:\"none\", padding:6.5 }}\n                            component={Link} to={\"/register\"}\n                        >\n                           Đăng ký\n                        </Box>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <Link style={{ textDecoration: \"none\" }} to={`/guestEvent1/${event._id}`}>\n                                            <FeedGuest event={event} key={event._id} />\n                                        </Link>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {eventDetails.map((event: any) =>\n                                    <Box key={event._id} style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailGuest event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default Content;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\CreateEvent.tsx",["765"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, CircularProgress, FormControl, FormLabel, TextField, Accordion, Box, Typography, Container } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { createEvent } from \"redux/actions/Manager\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    accordion: {\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(1),\n    },\n    formLabel: {\n        fontWeight: \"bold\",\n        fontSize: \"14px\",\n        marginTop: \"5px\"\n    },\n    textField: {\n        margin: theme.spacing(1.5, 0),\n        textAlign: 'left',\n        fontSize: '13px',\n        \"& .MuiInputBase-root\": {\n            \"& fieldset\": {\n                borderRadius: \"10px\",\n            },\n        },\n    },\n}));\n\ntype Props = {\n    event: any;\n};\n\ninterface IInitialValues {\n    nameEvent: string;\n    location: string;\n    dayStart: string;\n    dayEnd: string;\n    image: string;\n    contentEvent: string;\n    ggSheet: string;\n}\n\nconst CreateEvent: React.FC<Props> = ({ event }): JSX.Element => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const initialValues: IInitialValues = {\n        nameEvent: event?.nameEvent ?? \"\",\n        location: event?.location ?? \"\",\n        dayStart: event?.dayStart ?? \"\",\n        dayEnd: event?.dayEnd ?? \"\",\n        image: event?.image ?? \"\",\n        contentEvent: event?.contentEvent ?? \"\",\n        ggSheet: event?.ggSheet ?? \"\",\n    };\n\n\n    // const onHandleSubmit = (\n    //     values: IInitialValues,\n    //     { setSubmitting }: any\n    // ): Promise<void> =>\n    //     dispatch<any>(createEvent(values, setSubmitting));\n\n    const validationSchema = Yup.object({\n        nameEvent: Yup.string().required(\"required!\"),\n        location: Yup.string().required(\"required!\"),\n        dayStart: Yup.string().required(\"required!\"),\n        dayEnd: Yup.string().required(\"required!\"),\n        ggSheet: Yup.string().required(\"required!\"),\n        contentEvent: Yup.string().required(\"required!\"),\n    });\n\n    return (\n        <Container style={{ maxWidth: 600 }}>\n            <Formik\n                enableReinitialize\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values: any, { setSubmitting }) => {\n                    let formData = new FormData();\n                    formData.append(\"nameEvent\", values.nameEvent);\n                    formData.append(\"location\", values.location);\n                    formData.append(\"dayStart\", values.dayStart);\n                    formData.append(\"dayEnd\", values.dayEnd);\n                    formData.append(\"image\", values.image);\n                    formData.append(\"contentEvent\", values.contentEvent);\n                    formData.append(\"ggSheet\", values.ggSheet);\n                    dispatch(createEvent(formData, setSubmitting));\n                }}\n            >\n                {({ values, handleChange, handleBlur, errors, touched, setFieldValue, isSubmitting, handleSubmit }) => (\n                    <form noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\n                        <Box display={\"flex\"}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                            alignItems={'center'}\n                            style={{ backgroundColor: 'white', padding: '40px 0px', borderRadius: '20px' }}>\n                            <Typography style={{ fontWeight: \"bold\", fontSize: \"18px\", margin: 20 }} >\n                                Thêm sự kiện\n                            </Typography>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Tên sự kiện</FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    className={classes.textField}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    name='nameEvent'\n                                    value={values.nameEvent}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập tên sự kiện'\n                                    helperText={touched.nameEvent ? errors.nameEvent : \"\"}\n                                    error={touched.nameEvent ? Boolean(errors.nameEvent) : false}\n                                />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Địa điểm tổ chức</FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    className={classes.textField}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='location'\n                                    value={values.location}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập địa điểm tổ chức'\n                                    helperText={touched.location ? errors.location : \"\"}\n                                    error={touched.location ? Boolean(errors.location) : false}\n                                />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Ngày giờ bắt đầu</FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    className={classes.textField}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='dayStart'\n                                    value={values.dayStart}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập ngày giờ bắt đầu'\n                                    helperText={touched.dayStart ? errors.dayStart : \"\"}\n                                    error={touched.dayStart ? Boolean(errors.dayStart) : false}\n                                />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Ngày giờ kết thúc</FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    className={classes.textField}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='dayEnd'\n                                    value={values.dayEnd}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập ngày giờ kết thúc'\n                                    helperText={touched.dayEnd ? errors.dayEnd : \"\"}\n                                    error={touched.dayEnd ? Boolean(errors.dayEnd) : false}\n                                />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Nội dung sự kiện</FormLabel>\n                                <ReactQuill theme=\"snow\" value={values.contentEvent} onChange={(e: any) => {\n                                    setFieldValue('contentEvent', e);\n                                }} />\n                                {/* <TextField\n                                    style={{ width: 300 }}\n                                    className={classes.textField}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='contentEvent'\n                                    value={values.contentEvent}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập nội dung sự kiện'\n                                    helperText={touched.contentEvent ? errors.contentEvent : \"\"}\n                                    error={touched.contentEvent ? Boolean(errors.contentEvent) : false}\n                                /> */}\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Link Google Sheet</FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    className={classes.textField}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='ggSheet'\n                                    value={values.ggSheet}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập link google sheet'\n                                    helperText={touched.ggSheet ? errors.ggSheet : \"\"}\n                                    error={touched.ggSheet ? Boolean(errors.ggSheet) : false}\n                                />\n                            </FormControl>\n                            <FormControl>\n                                <FormLabel classes={{ root: classes.formLabel }}>Hình ảnh</FormLabel>\n                                <input\n                                    accept=\"image/*\"\n                                    name='image'\n                                    type='file'\n                                    onChange={(e: any) => {\n                                        setFieldValue('image', e.target.files[0]);\n                                    }}\n                                    onBlur={handleBlur}\n                                />\n                            </FormControl>\n                            <Button\n                                type='submit'\n                                disabled={isSubmitting}\n                                style={{\n                                    color: \"rgb(33, 43, 54)\",\n                                    height: \"34px\",\n                                    width: \"120px\",\n                                    fontSize: \"12px\",\n                                    borderRadius: \"4px\",\n                                    fontWeight: 500,\n                                    textTransform: \"capitalize\",\n                                    border: '1px solid rgb(33, 43, 54)',\n                                    margin: \"15px 10px 0px 0px\"\n                                }}\n                            >\n                                {isSubmitting ? <CircularProgress size='1rem' /> : \"Tạo Sự Kiện\"}\n                            </Button>\n                        </Box>\n\n                    </form>\n                )}\n            </Formik>\n        </Container>\n    );\n};\n\nexport default CreateEvent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\UserForm.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\UpdateComment.tsx",["766"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, CircularProgress, Box } from \"@material-ui/core\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { useDispatch } from \"react-redux\";\nimport { commentEvent } from \"redux/actions/sManager\";\nimport { FormControl, TextField } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n    btnLogin: {\n        '&.MuiButton-root:hover': {\n            backgroundColor: \"transparent\",\n        }\n    },\n    formTextField: {\n        \"& .MuiInputBase-root\": {\n            \"& fieldset\": {\n                borderRadius: 10,\n            },\n            \"&.Mui-focused fieldset\": {\n                borderColor: \"black\"\n            },\n        }\n    },\n}));\n\ntype Props = {\n    event: any;\n};\n\ninterface IInitialValues {\n    contentComment: string;\n}\n\nconst CommentPost: React.FC<Props> = ({ event }): JSX.Element => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const initialValues: IInitialValues = {\n        contentComment: event?.contentComment ?? \"\",\n    };\n\n    const onHandleSubmit = (\n        values: IInitialValues,\n        { setSubmitting }: any\n    ): Promise<void> =>\n        dispatch<any>(commentEvent(values, event._id, setSubmitting));\n\n    return (\n        <Formik\n            enableReinitialize\n            initialValues={initialValues}\n            onSubmit={onHandleSubmit}\n        >\n            {({ isSubmitting, handleSubmit, values, handleChange, handleBlur, errors, touched }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                    <Box style={{ display: \"flex\", flexDirection: \"row\", marginTop: \"30px\" }}>\n                        {/* <FormComment /> */}\n                        <FormControl style={{ paddingLeft: 10 }}>\n                            <TextField\n                                style={{ width: 450, }}\n                                className={classes.formTextField}\n                                variant=\"outlined\"\n                                inputProps={{\n                                    style: {\n                                        fontSize: '12px',\n                                        padding: '12px'\n                                    }\n                                }}\n                                name='contentComment'\n                                value={values.contentComment}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                placeholder='Nhập bình luận...'\n                            />\n                        </FormControl>\n                        <Button\n                            disableRipple\n                            type='submit'\n                            className={classes.btnLogin}\n                            disabled={isSubmitting}\n                        >\n                            {isSubmitting ? <CircularProgress size='1rem' /> : <SendIcon style={{ width: '16px' }} />}\n                        </Button>\n                    </Box>\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nexport default CommentPost;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\FeedContent.tsx",["767"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Avatar, Card, Box, CardMedia, IconButton, Typography } from '@mui/material';\nimport { Divider } from '@mui/material';\nimport { Bookmark, BookmarkBorder } from '@mui/icons-material';\nimport TabContext from '@mui/lab/TabContext';\nimport { createStorager, deleteStorager } from \"redux/actions/user\";\n\nimport { formatDistance } from 'date-fns';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\n\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    toolbarContent: {\n        justifyContent: 'center',\n        backgroundColor: 'none',\n        flexDirection: 'column',\n        marginBottom: 'auto',\n        letterSpacing: 0.6\n    },\n    card: {\n        borderRadius: '12px',\n        margin: 'auto',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        marginBottom: 30,\n        boxShadow: 'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'\n    },\n    myMedia: {\n        width: \"450px\",\n        borderRadius: \"16px\"\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        borderRadius: '12px',\n\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedContent: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state: RootState) => state.user);\n    const [value, setValue] = React.useState('1');\n\n    function handleClickStorage() {\n        dispatch(createStorager(event._id));\n    }\n\n    function handleClickUnStorage() {\n        dispatch(deleteStorager(event._id));\n    }\n    const textAvatar = event?.poster.username ?? null;\n    const letterAvatar = textAvatar.charAt(0).toUpperCase();\n\n    const lettercreatedAt = (formatDistance(new Date(event?.created_at), Date.now(), { addSuffix: true })).split(\"about\");\n\n    const storager = event.storagers.map((storager: any) => storager.storager.username);\n\n    const storagers = event.storagers.some((storager: any) => user.user.username.includes(storager.storager.username));\n\n    const compareUser = storagers ? (\n        <Bookmark onClick={handleClickUnStorage} style={{ width: \"30px\", height: \"30px\", color: 'rgb(33, 43, 54)' }} />\n    ) : storager !== user.user.username ? (\n        <BookmarkBorder onClick={handleClickStorage} style={{ width: \"30px\", height: \"30px\", color: 'rgb(33, 43, 54)' }} />\n    ) : null\n\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.toolbarContent}>\n            <TabContext value={value}>\n\n                {/* de rieng ra 1 component */}\n                <Card className={classes.card}>\n                    <Box margin={'0px 26px'}>\n                        <Box style={{ marginTop: \"30px\", fontSize: \"20px\", fontWeight: \"bold\" }}>\n                            Khoa {event.departmentEvent.nameDepartment.toLowerCase()}\n                        </Box>\n                    </Box>\n\n                    <Divider sx={{ margin: '20px 0px' }} />\n                    <Box margin={'0px 26px'}>\n                        <Box display={'flex'} flexDirection={'row'} margin={'10px 0px'}>\n                            <Box display={'flex'} flexDirection={'row'} marginTop={1}>\n                                <Avatar style={{\n                                    fontSize:\"14px\",\n                                    backgroundColor: 'white',\n                                    marginRight: '12px',\n                                    border: '1px dashed #b7b7b4',\n                                    color: '#454545'\n                                }}\n                                    aria-label=\"recipe\">\n                                    {letterAvatar}\n                                </Avatar>\n\n                                <Box>\n                                    <Box fontWeight={1000} >{event?.poster.username ?? null}</Box>\n                                    <Box sx={{ color: '#757575', fontSize: '14px' }}>{lettercreatedAt}</Box>\n                                </Box>\n                            </Box>\n\n                            <Box flexGrow={1} />\n\n                            <IconButton aria-label='settings'>\n                                {compareUser}\n                            </IconButton>\n                        </Box>\n                    </Box>\n\n                    <Box margin={'0px 26px'}>\n                        <Box style={{ marginBottom: '30px', paddingTop: '10px' }}>\n\n                            <Typography style={{ textAlign: 'left', fontSize: '17px', fontWeight: \"600\", paddingBottom: 6 }}>\n                                {event?.nameEvent ?? null}\n                            </Typography>\n\n                            <Box display={'flex'} flexDirection={'row'} marginBottom={4} letterSpacing={0.6}>\n                                <Box sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    paddingRight: 1,\n                                    fontWeight: 500\n                                }}>\n                                    Thời gian:\n                                </Box>\n                                <Box style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                    {event?.dayStart ?? null} - {event?.dayEnd ?? null}\n                                </Box>\n\n                            </Box>\n                        </Box >\n                    </Box>\n                    <Divider sx={{ marginBottom: '50px' }} />\n                    <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginTop: \"-20px\" }}>\n                        <CardMedia\n                            className={classes.myMedia}\n                            component=\"img\"\n                            image={event?.image}\n                            alt=\"Paella dish\"\n                        >\n                        </CardMedia>\n                    </Box>\n\n                    <Divider sx={{ margin: '20px 0px' }} />\n                    <Box margin={'0px 26px'}>\n                        <Box display={'flex'} flexDirection={'row'} marginBottom={4}>\n                            <Box sx={{\n                                textAlign: 'left',\n                                fontSize: '14px',\n                                color: '#757575',\n                                paddingRight: 1,\n                                fontWeight: 500\n                            }}>\n                                Địa điểm:\n                            </Box>\n                            <Box style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                {event?.location ?? null}\n                            </Box>\n\n                        </Box>\n                    </Box>\n\n                </Card>\n            </TabContext>\n        </Box>\n    );\n};\n\nexport default FeedContent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\FeedDetailContent.tsx",["768"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Divider } from '@mui/material';\nimport TabContext from '@mui/lab/TabContext';\nimport { Box, Button, FormControl } from '@mui/material';\nimport { userApplyJob, userUnApplyJob } from \"redux/actions/user\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\nimport { BoxNameDetails, BoxDetails } from 'layouts/navigation/style';\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n\n    card: {\n        borderRadius: '12px',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        maxHeight: '100%',\n        maxWidth: '100%',\n        paddingTop: 30,\n        paddingBottom: 30,\n        boxShadow: 'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'\n    },\n    myMedia: {\n        width: \"440px\",\n        borderRadius: \"24px\"\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        height: '800px',\n        borderRadius: '12px',\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedDetailContent: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state: RootState) => state.user);\n    const [value, setValue] = React.useState('1');\n\n    const userApply = event.usersApplyJob.map((userapply: any) => userapply.userApply.username);\n\n    const userApplys = event.usersApplyJob.some((userapply: any) => user.user.username.includes(userapply.userApply.username));\n\n    const userJob = event.usersApplyJob.map((userjob: any) => userjob.jobEvent._id);\n\n    const compareUserApply = userApplys ? (\n        event.job.map((job: any) =>\n            event.usersApplyJob.some((userjob: any) => job._id.includes(userjob.jobEvent._id) && user.user.username.includes(userjob.userApply.username)) ? (\n                <Box sx={{ display: 'grid', gap: 2, gridTemplateColumns: 'repeat(3, 1fr)', backgroundColor: \"rgba(0,0,0,0.03)\", color: \"rgb(33, 43, 54)\", marginBottom: 4, padding: 3, borderRadius: 4 }} key={job._id}>\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        marginTop: 1\n                    }} >\n                        Tên công việc:\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                        {job.nameJob}\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left' }}>\n                        <Button style={{\n                            color: \"#FF6969\",\n                            height: \"30px\",\n                            width: \"120px\",\n                            fontSize: \"12px\",\n                            fontWeight: 500,\n                            borderRadius: \"4px\",\n                            textTransform: \"capitalize\",\n                            border: '1px solid #FF6969'\n                        }}\n                            onClick={(e) => dispatch(userUnApplyJob(event._id, job._id))}>Hủy Ứng Tuyển</Button>\n                    </FormControl>\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500\n                    }} >\n                        Yêu cầu công việc:\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.jobRequest}\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left' }} />\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500\n                    }}>\n                        Mô tả công việc:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.jobDescription}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        gap: 5\n                    }}>\n                        Quyền lợi:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.benefit}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        gap: 5\n                    }}>\n                        Số lượng:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.quantityRemaining}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n                </Box>\n\n            ) : (\n                <Box sx={{ display: 'grid', gap: 2, gridTemplateColumns: 'repeat(3, 1fr)', backgroundColor: \"rgba(0,0,0,0.03)\", color: \"rgb(33, 43, 54)\", marginBottom: 4, padding: 3, borderRadius: 4 }} key={job._id}>\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        marginTop: 1\n                    }} >\n                        Tên công việc:\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                        {job.nameJob}\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left' }}>\n                        <Button style={{\n                            color: \"rgb(33, 43, 54)\",\n                            height: \"30px\",\n                            width: \"120px\",\n                            fontSize: \"12px\",\n                            borderRadius: \"4px\",\n                            fontWeight: 500,\n                            textTransform: \"capitalize\",\n                            border: '1px solid rgb(33, 43, 54)'\n                        }}\n                            onClick={(e) => dispatch(userApplyJob(event._id, job._id))}>Ứng Tuyển</Button>\n                    </FormControl>\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500\n                    }} >\n                        Yêu cầu công việc:\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.jobRequest}\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left' }} />\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500\n                    }}>\n                        Mô tả công việc:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.jobDescription}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        gap: 5\n                    }}>\n                        Quyền lợi:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.benefit}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        gap: 5\n                    }}>\n                        Số lượng:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.quantityRemaining}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n                </Box>\n            )\n        )\n    ) : userApply !== user.user.username ? (\n        event.job.map((job: any) =>\n            job._id !== userJob ? (\n                <Box sx={{ display: 'grid', gap: 2, gridTemplateColumns: 'repeat(3, 1fr)', backgroundColor: \"rgba(0,0,0,0.03)\", color: \"rgb(33, 43, 54)\", marginBottom: 4, padding: 3, borderRadius: 4 }} key={job._id}>\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        marginTop: 1\n                    }} >\n                        Tên công việc:\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                        {job.nameJob}\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left' }}>\n                        <Button style={{\n                            color: \"rgb(33, 43, 54)\",\n                            height: \"30px\",\n                            width: \"120px\",\n                            fontSize: \"12px\",\n                            borderRadius: \"4px\",\n                            fontWeight: 500,\n                            textTransform: \"capitalize\",\n                            border: '1px solid rgb(33, 43, 54)'\n                        }}\n                            onClick={(e) => dispatch(userApplyJob(event._id, job._id))}>Ứng Tuyển</Button>\n                    </FormControl>\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500\n                    }} >\n                        Yêu cầu công việc:\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.jobRequest}\n                    </FormControl>\n\n                    <FormControl sx={{ textAlign: 'left' }} />\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500\n                    }}>\n                        Mô tả công việc:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.jobDescription}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        gap: 5\n                    }}>\n                        Quyền lợi:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.benefit}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n\n                    <FormControl sx={{\n                        textAlign: 'left',\n                        fontSize: '14px',\n                        color: '#757575',\n                        fontWeight: 500,\n                        gap: 5\n                    }}>\n                        Số lượng:\n                    </FormControl>\n                    <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                        {job.quantityRemaining}\n                    </FormControl>\n                    <FormControl sx={{ textAlign: 'left' }} />\n                </Box>\n            ) : null\n        )\n    ) : null\n\n    const classes = useStyles();\n\n    return (\n        <Box >\n            <TabContext value={value}>\n                <Box className={classes.card}>\n                    {/* <Box margin={'10px 26px'}>\n                        <Box sx={{ fontSize: \"20px\", fontWeight: \"bold\" }}>\n                            Khoa {event.departmentEvent.nameDepartment.toLowerCase()}\n                        </Box>\n                        <Box sx={{ fontSize: \"14px\" }}>\n                            {event?.poster.username ?? null}\n                        </Box>\n                    </Box> */}\n\n\n                    {/* <Divider /> */}\n\n                    <BoxDetails >\n                        <Box sx={{ fontSize: \"14px\" }}>\n                            <BoxNameDetails>\n                                Mô tả:\n                            </BoxNameDetails>\n                            <Box sx={{ textAlign: 'left', fontSize: '14px', fontWeight: 500 }} dangerouslySetInnerHTML={{ __html: event.contentEvent }} />\n                        </Box>\n                    </BoxDetails>\n\n                    <Divider />\n                    <BoxDetails style={{ overflowY: \"auto\", height: \"500px\" }}>\n                        <BoxNameDetails >\n                            Công việc:\n                        </BoxNameDetails>\n                        {compareUserApply}\n                    </BoxDetails>\n                </Box>\n            </TabContext>\n        </Box>\n    );\n};\n\nexport default FeedDetailContent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedManageJob.tsx",["769","770","771","772","773","774","775","776"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Button, Card, CardContent, Toolbar, Box } from '@mui/material';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport TabContext from '@mui/lab/TabContext';\nimport TabPanel from '@mui/lab/TabPanel';\n\nimport { userApplyJob, userUnApplyJob } from \"redux/actions/user\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    toolbarContent: {\n        justifyContent: 'center',\n        backgroundColor: 'none',\n        flexDirection: 'column',\n        marginBottom: 'auto'\n    },\n    card: {\n        borderRadius: '22px',\n        margin: 'auto',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '1200px',\n        height: '300px',\n    },\n    myMedia: {\n        height: \"250px\",\n        // paddingTop: '56.25%', // 16:9,\n        marginTop: '30'\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        height: '800px',\n        borderRadius: '12px',\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedManageJob: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const [value, setValue] = React.useState('1');\n\n    const user = useSelector((state: RootState) => state.user);\n\n    const classes = useStyles();\n\n    const findJobUserApply = event.usersApplyJob.filter((userapply: any) => userapply.userApply.username === user.user.username && userapply.notiApplyJob == \"Bạn đã ứng tuyển thành công\");\n\n    return (\n        <>\n            {findJobUserApply.map((job: any) =>\n                <Toolbar key={job._id} className={classes.toolBar}>\n                    <Box className={classes.toolbarContent}>\n                        <TabContext value={value}>\n                            <TabPanel value=\"1\" >\n                                {/* de rieng ra 1 component */}\n                                <Card className={classes.card}>\n                                    <CardContent>\n                                        <Box sx={{ display: \"flex\", flexDirection: \"row\", marginTop: \"35px\", marginLeft: \"35px\" }}>\n                                            <Box sx={{ fontWeight: \"bold\", fontSize: \"21px\" }}>\n                                                {event.nameEvent}\n                                            </Box>\n                                            <PlayArrowIcon style={{ fontSize: \"35px\", margin: \"-5px 10px 0px 10px\", color: \"#c6c9c9\" }} />\n                                            <Box sx={{ fontWeight: \"bold\", fontSize: \"21px\" }}>\n                                                {job.jobEvent.nameJob}\n                                            </Box>\n                                            <Box flexGrow={1} />\n                                            <Box sx={{ marginTop: \"50px\", fontWeight: \"bold\" }}>\n                                                {job.acceptStatus == \"Chờ phê duyệt\" ? (\n                                                    <Box>\n                                                        Chưa có thông báo nhận lương\n                                                    </Box>\n                                                ) : job.acceptStatus == \"Duyệt\" ? (\n                                                    <Box sx={{ color: \"#00B14F\" }}>\n                                                        {job.notiAccept}\n                                                    </Box>\n                                                ) : job.acceptStatus == \"Không Duyệt\" ? (\n                                                    <Box sx={{ color: \"red\" }}>\n                                                        {job.notiAccept}\n                                                    </Box>\n                                                ) : null}\n                                            </Box>\n                                        </Box>\n\n                                        <Box sx={{ fontSize: \"15px\", marginTop: \"10px\", marginLeft: \"35px\" }}>\n                                            {event?.dayStart ?? null} - {event?.dayEnd ?? null}\n                                        </Box>\n\n                                        <Box sx={{ fontSize: \"16px\", marginTop: \"30px\", marginLeft: \"35px\" }}>\n                                            Địa điểm: {event.location}\n                                        </Box>\n\n                                        <Box sx={{ display: \"flex\", flexDirection: \"row\" }} >\n                                            <Box>\n                                                <Box sx={{ fontSize: \"15px\", marginTop: \"20px\", marginLeft: \"35px\" }}>\n                                                    Mô tả: {job.jobEvent.jobDescription}\n                                                </Box>\n                                                <Box sx={{ fontSize: \"15px\", marginTop: \"20px\", marginLeft: \"35px\" }}>\n                                                    Quyền lợi: {job.jobEvent.benefit}\n                                                </Box>\n                                            </Box>\n                                            <Box flexGrow={1} />\n                                            <Button style={{ color: \"green\" }} target='_blank' href={event.ggSheet} rel=\"noopener noreferrer\">\n                                                Link chi tiết công việc\n                                            </Button>\n\n                                        </Box>\n                                    </CardContent>\n\n                                </Card>\n                            </TabPanel>\n                        </TabContext>\n\n                    </Box>\n                </Toolbar >\n            )}\n        </>\n    );\n};\n\nexport default FeedManageJob;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\UpdateJobEvent.tsx",["777"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, CircularProgress, FormControl, FormLabel, TextField, Typography, } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { updateJobEvent } from \"redux/actions/Manager\";\nimport FormEvent from \"pages/auth/FormEvent-Manager\";\nimport { Container } from \"@mui/material\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    btnLogin: {\n        marginTop: theme.spacing(1.5),\n        marginRight: theme.spacing(1),\n        padding: theme.spacing(1, 2),\n    },\n    formLabel: {\n        fontWeight: 600,\n        marginBottom: theme.spacing(1.5),\n    },\n    formControl: {\n        margin: theme.spacing(1, 0),\n    },\n}));\n\ntype Props = {\n    jobEvent: any;\n};\n\ninterface IInitialValues {\n    nameJob: string;\n    quantity: number;\n    unitPrice: number;\n    jobDescription: string;\n    jobRequest: string;\n    benefit: string;\n    event: any;\n}\n\nconst UpdateJobEvent: React.FC<Props> = ({ jobEvent }): JSX.Element => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const initialValues: IInitialValues = {\n        nameJob: jobEvent?.nameJob ?? \"\",\n        quantity: jobEvent?.quantity ?? \"\",\n        unitPrice: jobEvent?.unitPrice ?? \"\",\n        jobDescription: jobEvent?.jobDescription ?? \"\",\n        jobRequest: jobEvent?.jobRequest ?? \"\",\n        benefit: jobEvent?.benefit ?? \"\",\n        event: jobEvent?.event ?? \"\",\n    };\n\n\n    const onHandleSubmit = (\n        values: IInitialValues,\n        { setSubmitting }: any\n    ): Promise<void> =>\n        dispatch<any>(updateJobEvent(values, jobEvent._id, setSubmitting));\n\n    const validationSchema = Yup.object({\n        nameJob: Yup.string().required(\"required!\"),\n        quantity: Yup.string().required(\"required!\"),\n        unitPrice: Yup.string().required(\"required!\"),\n        jobDescription: Yup.string().required(\"required!\"),\n        jobRequest: Yup.string().required(\"required!\"),\n        benefit: Yup.string().required(\"required!\"),\n    });\n\n    return (\n        <Container style={{ maxWidth: 600 }}>\n            <Formik\n                enableReinitialize\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={onHandleSubmit}\n            >\n                {({ isSubmitting, handleSubmit, values, handleChange, handleBlur, errors, touched }) => (\n                    <form noValidate onSubmit={handleSubmit}>\n                        <Box display={\"flex\"}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                            alignItems={'center'}\n                            style={{ backgroundColor: 'white', padding: '30px 0px', borderRadius: '20px' }}>\n                            <FormControl className={classes.formControl}>\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", margin: \"10px 0\" }}>\n                                    Tên công việc\n                                </FormLabel>\n\n                                <TextField\n                                    style={{ width: 300 }}\n                                    fullWidth\n                                    variant={'outlined'}\n                                    name='nameJob'\n                                    value={values.nameJob}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập tên công việc'\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                    helperText={touched.nameJob ? errors.nameJob : \"\"}\n                                    error={touched.nameJob ? Boolean(errors.nameJob) : false}\n                                />\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", margin: \"10px 0\" }}>\n                                    Số lượng người\n                                </FormLabel>\n\n                                <TextField\n                                    style={{ width: 300 }}\n                                    fullWidth\n                                    variant={'outlined'}\n                                    name='quantity'\n                                    value={values.quantity}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập số lượng người'\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                    helperText={touched.quantity ? errors.quantity : \"\"}\n                                    error={touched.quantity ? Boolean(errors.quantity) : false}\n                                />\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", margin: \"10px 0\" }}>\n                                    Đơn giá\n                                </FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    name='unitPrice'\n                                    value={values.unitPrice}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập đơn giá'\n                                    helperText={touched.unitPrice ? errors.unitPrice : \"\"}\n                                    error={touched.unitPrice ? Boolean(errors.unitPrice) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", margin: \"10px 0\" }}>\n                                    Mô tả công việc\n                                </FormLabel>\n\n                                <TextField\n                                    style={{ width: 300 }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    name='jobDescription'\n                                    value={values.jobDescription}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập mô tả công việc'\n                                    helperText={touched.jobDescription ? errors.jobDescription : \"\"}\n                                    error={touched.jobDescription ? Boolean(errors.jobDescription) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", margin: \"10px 0\" }}>\n                                    Yêu cầu công việc\n                                </FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    name='jobRequest'\n                                    value={values.jobRequest}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập yêu cầu công việc'\n                                    helperText={touched.jobRequest ? errors.jobRequest : \"\"}\n                                    error={touched.jobRequest ? Boolean(errors.jobRequest) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n\n                            <FormControl className={classes.formControl}>\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", margin: \"10px 0\" }}>\n                                    Quyền lợi công việc\n                                </FormLabel>\n                                <TextField\n                                    style={{ width: 300 }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    name='benefit'\n                                    value={values.benefit}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập quyền lợi công việc'\n                                    helperText={touched.benefit ? errors.benefit : \"\"}\n                                    error={touched.benefit ? Boolean(errors.benefit) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n\n                            <FormEvent isEvent={true} />\n                            <Button\n                                style={{ backgroundColor: \"black\", color: \"white\" }}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                size='small'\n                                className={classes.btnLogin}\n                                disabled={isSubmitting}\n                            >\n                                {isSubmitting ? <CircularProgress size='1rem' /> : \"Cập Nhật Công Việc\"}\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </Container>\n    );\n};\n\nexport default UpdateJobEvent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\UpdateDepartment.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\FeedGuest.tsx",["778","779","780","781"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Avatar, Card, Box, CardMedia, Typography } from '@mui/material';\nimport { Divider } from '@mui/material';\n\nimport TabContext from '@mui/lab/TabContext';\nimport { createStorager, deleteStorager } from \"redux/actions/user\";\n\nimport { formatDistance } from 'date-fns';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\n\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    toolbarContent: {\n        justifyContent: 'center',\n        backgroundColor: 'none',\n        flexDirection: 'column',\n        marginBottom: 'auto',\n        letterSpacing: 0.6\n    },\n    card: {\n        borderRadius: '12px',\n        margin: 'auto',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        marginBottom: 30,\n        boxShadow: 'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'\n    },\n    myMedia: {\n        width: \"450px\",\n        borderRadius: \"16px\"\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        borderRadius: '12px',\n\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedGuest: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state: RootState) => state.user);\n    const [value, setValue] = React.useState('1');\n\n    function handleClickStorage() {\n        dispatch(createStorager(event._id));\n    }\n\n    function handleClickUnStorage() {\n        dispatch(deleteStorager(event._id));\n    }\n    const textAvatar = event?.poster.username ?? null;\n    const letterAvatar = textAvatar.charAt(0).toUpperCase();\n\n    const lettercreatedAt = (formatDistance(new Date(event?.created_at), Date.now(), { addSuffix: true })).split(\"about\");\n\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.toolbarContent}>\n            <TabContext value={value}>\n\n                {/* de rieng ra 1 component */}\n                <Card className={classes.card}>\n                    <Box margin={'0px 26px'}>\n                        <Box style={{ marginTop: \"30px\", fontSize: \"20px\", fontWeight: \"bold\" }}>\n                            Khoa {event.departmentEvent.nameDepartment.toLowerCase()}\n                        </Box>\n                    </Box>\n\n                    <Divider sx={{ margin: '20px 0px' }} />\n                    <Box margin={'0px 26px'}>\n                        <Box display={'flex'} flexDirection={'row'} margin={'10px 0px'}>\n                            <Avatar style={{\n                                fontSize: \"14px\",\n                                backgroundColor: 'white',\n                                marginRight: '12px',\n                                border: '1px dashed #b7b7b4',\n                                color: '#454545'\n                            }}\n                                aria-label=\"recipe\">\n                                {letterAvatar}\n                            </Avatar>\n\n                            <Box>\n                                <Box fontWeight={1000} >{event?.poster.username ?? null}</Box>\n                                <Box sx={{ color: '#757575', fontSize: '14px' }}>{lettercreatedAt}</Box>\n                            </Box>\n                        </Box>\n                    </Box>\n\n                    <Box margin={'0px 26px'}>\n                        <Box style={{ marginBottom: '30px', paddingTop: '10px' }}>\n\n                            <Typography style={{ textAlign: 'left', fontSize: '17px', fontWeight: \"600\", paddingBottom: 6 }}>\n                                {event?.nameEvent ?? null}\n                            </Typography>\n\n                            <Box display={'flex'} flexDirection={'row'} marginBottom={4} letterSpacing={0.6}>\n                                <Box sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    paddingRight: 1,\n                                    fontWeight: 500\n                                }}>\n                                    Thời gian:\n                                </Box>\n                                <Box style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                    {event?.dayStart ?? null} - {event?.dayEnd ?? null}\n                                </Box>\n\n                            </Box>\n                        </Box >\n                    </Box>\n                    <Divider sx={{ marginBottom: '50px' }} />\n                    <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginTop: \"-20px\" }}>\n                        <CardMedia\n                            className={classes.myMedia}\n                            component=\"img\"\n                            image={event?.image}\n                            alt=\"Paella dish\"\n                        >\n                        </CardMedia>\n                    </Box>\n\n                    <Divider sx={{ margin: '20px 0px' }} />\n                    <Box margin={'0px 26px'}>\n                        <Box display={'flex'} flexDirection={'row'} marginBottom={4}>\n                            <Box sx={{\n                                textAlign: 'left',\n                                fontSize: '14px',\n                                color: '#757575',\n                                paddingRight: 1,\n                                fontWeight: 500\n                            }}>\n                                Địa điểm:\n                            </Box>\n                            <Box style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                {event?.location ?? null}\n                            </Box>\n\n                        </Box>\n                    </Box>\n\n                </Card>\n            </TabContext>\n        </Box>\n    );\n};\n\nexport default FeedGuest;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\guest\\FeedDetailGuest.tsx",["782","783","784"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Divider } from '@mui/material';\nimport TabContext from '@mui/lab/TabContext';\nimport { Box, Button, FormControl } from '@mui/material';\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\nimport { BoxNameDetails, BoxDetails } from 'layouts/navigation/style';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n\n    card: {\n        borderRadius: '12px',\n        justifyContent: 'center',\n        backgroundColor: 'white',\n        maxWidth: '100%',\n        paddingTop: 30,\n        paddingBottom: 30,\n        boxShadow: 'rgba(145, 158, 171, 0.2) 0px 0px 2px 0px, rgba(145, 158, 171, 0.12) 0px 12px 24px -4px'\n    },\n    myMedia: {\n        width: \"440px\",\n        borderRadius: \"24px\"\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        height: '800px',\n        borderRadius: '12px',\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedDetailContent: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state: RootState) => state.user);\n    const [value, setValue] = React.useState('1');\n\n    const classes = useStyles();\n\n    return (\n        <Box >\n            <TabContext value={value}>\n\n                <Box className={classes.card}>\n\n                    <BoxDetails >\n                        <Box sx={{ fontSize: \"14px\" }}>\n                            <BoxNameDetails>\n                                Mô tả:\n                            </BoxNameDetails>\n                            <Box sx={{ textAlign: 'left', fontSize: '14px', fontWeight: 500 }} dangerouslySetInnerHTML={{ __html: event.contentEvent }} />\n                        </Box>\n                    </BoxDetails>\n\n                    <Divider />\n                    <BoxDetails style={{ overflowY: \"auto\", height: \"500px\" }}>\n                        <BoxNameDetails >\n                            Công việc:\n                        </BoxNameDetails>\n                        {event.job.map((job: any) =>\n                            <Box sx={{ display: 'grid', gap: 2, gridTemplateColumns: 'repeat(3, 1fr)', backgroundColor: \"rgba(0,0,0,0.03)\", color: \"rgb(33, 43, 54)\", marginBottom: 4, padding: 3, borderRadius: 4 }} key={job._id}>\n                                <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    marginTop: 1\n                                }} >\n                                    Tên công việc:\n                                </FormControl>\n\n                                <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000', marginTop: 1 }}>\n                                    {job.nameJob}\n                                </FormControl>\n\n                                <FormControl sx={{ textAlign: 'left' }}>\n                                    <Box component={Link} to={\"/loginuser\"}>\n                                    <Button style={{\n                                        color: \"rgb(33, 43, 54)\",\n                                        height: \"30px\",\n                                        width: \"120px\",\n                                        fontSize: \"12px\",\n                                        borderRadius: \"4px\",\n                                        fontWeight: 500,\n                                        textTransform: \"capitalize\",\n                                        border: '1px solid rgb(33, 43, 54)'\n                                    }}\n                                    >Ứng Tuyển</Button>\n                                    </Box>\n                                </FormControl>\n                                <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500\n                                }} >\n                                    Yêu cầu công việc:\n                                </FormControl>\n\n                                <FormControl sx={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                    {job.jobRequest}\n                                </FormControl>\n\n                                <FormControl sx={{ textAlign: 'left' }} />\n                                <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500\n                                }}>\n                                    Mô tả công việc:\n                                </FormControl>\n                                <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                    {job.jobDescription}\n                                </FormControl>\n                                <FormControl sx={{ textAlign: 'left' }} />\n\n                                <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    gap: 5\n                                }}>\n                                    Quyền lợi:\n                                </FormControl>\n                                <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                    {job.benefit}\n                                </FormControl>\n                                <FormControl sx={{ textAlign: 'left' }} />\n\n                                <FormControl sx={{\n                                    textAlign: 'left',\n                                    fontSize: '14px',\n                                    color: '#757575',\n                                    fontWeight: 500,\n                                    gap: 5\n                                }}>\n                                    Số lượng:\n                                </FormControl>\n                                <FormControl style={{ textAlign: 'left', fontSize: '14px', fontWeight: '1000' }}>\n                                    {job.quantityRemaining}\n                                </FormControl>\n                                <FormControl sx={{ textAlign: 'left' }} />\n\n                            </Box>\n                        )}\n                    </BoxDetails>\n                </Box>\n            </TabContext>\n        </Box>\n    );\n};\n\nexport default FeedDetailContent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormDepartment_Admin.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\UpdateEvent.tsx",["785","786"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, CircularProgress, FormControl, FormLabel, TextField, Accordion, AccordionDetails, Container, Box } from \"@mui/material\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport { updateEvent } from \"redux/actions/Manager\";\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    btn: {\n        '&.MuiButton-root:hover': {\n            backgroundColor: \"transparent\",\n        }\n    },\n    accordion: {\n        marginBottom: theme.spacing(3),\n        padding: theme.spacing(1),\n    },\n    formLabel: {\n        fontWeight: 600,\n        marginBottom: theme.spacing(1.5),\n    },\n    formControl: {\n        margin: theme.spacing(1, 0),\n    },\n}));\n\ntype Props = {\n    event: any;\n};\n\ninterface IInitialValues {\n    nameEvent: string;\n    location: string;\n    dayStart: string;\n    dayEnd: string;\n    image: any;\n    contentEvent: string;\n    ggSheet: string;\n}\n\nconst CreatePost: React.FC<Props> = ({ event }): JSX.Element => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const initialValues: IInitialValues = {\n        nameEvent: event?.nameEvent ?? \"\",\n        location: event?.location ?? \"\",\n        dayStart: event?.dayStart ?? \"\",\n        dayEnd: event?.dayEnd ?? \"\",\n        image: event?.image ?? \"\",\n        contentEvent: event?.contentEvent ?? \"\",\n        ggSheet: event?.ggSheet ?? \"\",\n    };\n\n    const validationSchema = Yup.object({\n        nameEvent: Yup.string().required(\"required!\"),\n        location: Yup.string().required(\"required!\"),\n        dayStart: Yup.string().required(\"required!\"),\n        dayEnd: Yup.string().required(\"required!\"),\n        contentEvent: Yup.string().required(\"required!\"),\n        ggSheet: Yup.string().required(\"required!\"),\n    });\n\n    return (\n        <Container style={{ maxWidth: 600 }}>\n            <Formik\n                enableReinitialize={true}\n                initialValues={initialValues}\n                validationSchema={validationSchema}\n                onSubmit={(values: any, { setSubmitting }) => {\n                    let formData = new FormData();\n                    formData.append(\"nameEvent\", values.nameEvent);\n                    formData.append(\"location\", values.location);\n                    formData.append(\"dayStart\", values.dayStart);\n                    formData.append(\"dayEnd\", values.dayEnd);\n                    formData.append(\"image\", values.image);\n                    formData.append(\"contentEvent\", values.contentEvent);\n                    formData.append(\"ggSheet\", values.ggSheet);\n                    dispatch(updateEvent(formData, event._id, setSubmitting));\n                }}\n            >\n                {({ values, handleChange, handleBlur, errors, touched, setFieldValue, isSubmitting, handleSubmit }) => (\n                    <form noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\n                        <Box display={\"flex\"}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                            alignItems={'center'}\n                            style={{ backgroundColor: 'white', padding: '30px 0px', borderRadius: '20px' }}>\n                            <FormControl fullWidth className={classes.formControl}>\n                                <FormLabel classes={{ root: classes.formLabel }}>Tên sự kiện</FormLabel>\n                                <TextField\n                                    style={{ width: 237 }}\n                                    fullWidth\n                                    variant=\"outlined\"\n                                    name='nameEvent'\n                                    value={values.nameEvent}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập tên sự kiện'\n                                    helperText={touched.nameEvent ? errors.nameEvent : \"\"}\n                                    error={touched.nameEvent ? Boolean(errors.nameEvent) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth className={classes.formControl}>\n                                <FormLabel classes={{ root: classes.formLabel }}>Địa điểm tổ chức</FormLabel>\n                                <TextField\n                                    style={{ width: 237 }}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='location'\n                                    value={values.location}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập địa điểm tổ chức'\n                                    helperText={touched.location ? errors.location : \"\"}\n                                    error={touched.location ? Boolean(errors.location) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth className={classes.formControl}>\n                                <FormLabel classes={{ root: classes.formLabel }}>Ngày giờ bắt đầu</FormLabel>\n                                <TextField\n                                    style={{ width: 237 }}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='dayStart'\n                                    value={values.dayStart}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập ngày giờ bắt đầu'\n                                    helperText={touched.dayStart ? errors.dayStart : \"\"}\n                                    error={touched.dayStart ? Boolean(errors.dayStart) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth className={classes.formControl}>\n                                <FormLabel classes={{ root: classes.formLabel }}>Ngày giờ kết thúc</FormLabel>\n                                <TextField\n                                    style={{ width: 237 }}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='dayEnd'\n                                    value={values.dayEnd}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập ngày giờ kết thúc'\n                                    helperText={touched.dayEnd ? errors.dayEnd : \"\"}\n                                    error={touched.dayEnd ? Boolean(errors.dayEnd) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth className={classes.formControl}>\n\n                                <FormLabel classes={{ root: classes.formLabel }}>Nội dung sự kiện</FormLabel>\n                                <ReactQuill theme=\"snow\" value={values.contentEvent} onChange={(e: any) => {\n                                    setFieldValue('contentEvent', e);\n                                }} />\n                            </FormControl>\n                            <FormControl fullWidth className={classes.formControl}>\n                                <FormLabel classes={{ root: classes.formLabel }}>Link Google Sheet</FormLabel>\n                                <TextField\n                                    style={{ width: 237 }}\n                                    fullWidth\n                                    multiline\n                                    variant=\"outlined\"\n                                    name='ggSheet'\n                                    value={values.ggSheet}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    placeholder='Nhập link Google Sheet'\n                                    helperText={touched.ggSheet ? errors.ggSheet : \"\"}\n                                    error={touched.ggSheet ? Boolean(errors.ggSheet) : false}\n                                    inputProps={{\n                                        style: {\n                                            fontSize: '12px',\n                                        }\n                                    }}\n                                />\n                            </FormControl>\n                            <FormControl fullWidth className={classes.formControl}>\n                                <FormLabel classes={{ root: classes.formLabel }}>Hình ảnh</FormLabel>\n                                <input\n                                    accept=\"image/*\"\n                                    name='image'\n                                    type='file'\n                                    onChange={(e: any) => {\n                                        setFieldValue('image', e.target.files[0]);\n                                    }}\n                                    onBlur={handleBlur}\n                                />\n                            </FormControl>\n                            <Button\n                                disableRipple\n                                style={{ backgroundColor: \"black\", color: \"white\" }}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                size='small'\n                                className={classes.btn}\n                                disabled={isSubmitting}\n                            >\n                                {isSubmitting ? <CircularProgress size='1rem' /> : \"Cập Nhật Sự Kiện\"}\n                            </Button>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </Container>\n    );\n};\n\nexport default CreatePost;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\UpdateCoefficient.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormFieldRole.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormField.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormEvent-Manager.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\admin\\FormFieldDepartment.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\Manager\\CreateJobEvent.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedApplyJob.tsx",["787","788","789","790","791","792","793","794","795","796","797","798"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Button, Card, CardContent, Toolbar, Box } from '@mui/material';\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\nimport TabContext from '@mui/lab/TabContext';\nimport TabPanel from '@mui/lab/TabPanel';\n\nimport { userApplyJob, userUnApplyJob } from \"redux/actions/user\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    toolbarContent: {\n        justifyContent: 'center',\n        backgroundColor: 'none',\n        flexDirection: 'column',\n        marginBottom: 'auto'\n    },\n    card: {\n        borderRadius: '22px',\n        margin: 'auto',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '1200px',\n        height: '300px',\n    },\n    myMedia: {\n        height: \"250px\",\n        // paddingTop: '56.25%', // 16:9,\n        marginTop: '30'\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        height: '800px',\n        borderRadius: '12px',\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedApplyJob: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const [value, setValue] = React.useState('1');\n\n    const user = useSelector((state: RootState) => state.user);\n\n    const classes = useStyles();\n\n    const findJobUserApply = event.usersApplyJob.filter((userapply: any) => userapply.userApply.username === user.user.username);\n\n    const userApply = event.usersApplyJob.map((userapply: any) => userapply.userApply.username);\n\n    const userApplys = event.usersApplyJob.some((userapply: any) => user.user.username.includes(userapply.userApply.username));\n\n    const userJob = event.usersApplyJob.map((userjob: any) => userjob.jobEvent._id);\n    return (\n        <>\n            {findJobUserApply.map((job: any) =>\n                <Toolbar key={job._id} className={classes.toolBar}>\n                    <Box className={classes.toolbarContent}>\n                        <TabContext value={value}>\n                            <TabPanel value=\"1\" >\n                                {/* de rieng ra 1 component */}\n                                <Card className={classes.card}>\n                                    <CardContent>\n                                        <Box sx={{ display: \"flex\", flexDirection: \"row\", marginTop: \"22px\", marginLeft: \"35px\" }}>\n                                            <Box sx={{ fontWeight: \"bold\", fontSize: \"21px\" }}>\n                                                {event.nameEvent}\n                                            </Box>\n                                            <PlayArrowIcon style={{ fontSize: \"35px\", margin: \"-5px 10px 0px 10px\", color: \"#c6c9c9\" }} />\n                                            <Box sx={{ fontWeight: \"bold\", fontSize: \"21px\" }}>\n                                                {job.jobEvent.nameJob}\n                                            </Box>\n                                            <Box flexGrow={1} />\n                                            {job.notiApplyJob == \"Chờ phê duyệt\" ? (\n                                                <Box sx={{ marginRight: \"40px\", fontWeight: \"500\" }}>\n                                                    {job.notiApplyJob}\n                                                </Box>\n                                            ) : job.notiApplyJob == \"Bạn đã ứng tuyển thành công\" ? (\n                                                <Box sx={{ marginRight: \"40px\", fontWeight: \"500\", color: \"#00B14F\" }}>\n                                                    {job.notiApplyJob}\n                                                </Box>\n                                            ) : job.notiApplyJob == \"Bạn đã ứng tuyển thất bại\" ? (\n                                                <Box sx={{ marginRight: \"40px\", fontWeight: \"500\", color: \"red\" }}>\n                                                    {job.notiApplyJob}\n                                                </Box>\n                                            ) : null\n                                            }\n                                        </Box>\n\n                                        <Box sx={{ fontSize: \"16px\", marginTop: \"7px\", marginLeft: \"35px\" }}>\n                                            {event.poster.username}\n                                        </Box>\n\n                                        <Box sx={{ fontSize: \"16px\", marginTop: \"30px\", marginLeft: \"35px\" }}>\n                                            Địa điểm: {event.location}\n                                        </Box>\n\n                                        <Box sx={{ fontSize: \"15px\", marginTop: \"10px\", marginLeft: \"35px\" }}>\n                                            {event?.dayStart ?? null} - {event?.dayEnd ?? null}\n                                        </Box>\n                                        <Box sx={{ display: \"flex\", flexDirection: \"row\" }} >\n                                            <Box>\n                                                <Box sx={{ fontSize: \"15px\", marginTop: \"20px\", marginLeft: \"35px\" }}>\n                                                    Mô tả: {job.jobEvent.jobDescription}\n                                                </Box>\n\n                                                <Box sx={{ fontSize: \"15px\", marginTop: \"10px\", marginLeft: \"35px\" }}>\n                                                    Yêu cầu: {job.jobEvent.jobRequest}\n                                                </Box>\n\n                                                <Box sx={{ fontSize: \"15px\", marginTop: \"10px\", marginLeft: \"35px\" }}>\n                                                    Quyền lợi: {job.jobEvent.benefit}\n                                                </Box>\n                                            </Box>\n                                            <Box flexGrow={1} />\n                                            <Box>\n                                                {userApplys ? (\n                                                    user.user.username == job.userApply.username && job.notiApplyJob == \"Chờ phê duyệt\" || user.user.username == job.userApply.username && job.notiApplyJob == \"Bạn đã ứng tuyển thất bại\" ? (\n                                                        <Box sx={{ margin: \"30px 30px 0px 0px\" }} >\n                                                            <Button style={{ backgroundColor: \"red\", color: \"white\", height: \"30px\", width: \"120px\", fontSize: \"12px\", fontWeight: \"bold\", borderRadius: \"6px\", textTransform: \"capitalize\" }} onClick={(e) => dispatch(userUnApplyJob(event._id, job.jobEvent._id))}>Hủy Ứng Tuyển</Button>\n                                                        </Box>\n                                                    ) : null\n                                                ) : userApply !== user.user.username ? (\n                                                    job.jobEvent._id !== userJob ? (\n                                                        <Box sx={{ margin: \"30px 30px 0px 0px\" }}>\n                                                            <Button style={{ backgroundColor: \"#00B14F\", color: \"white\", height: \"30px\", width: \"120px\", fontSize: \"12px\", fontWeight: \"bold\", borderRadius: \"6px\", textTransform: \"capitalize\" }} onClick={(e) => dispatch(userApplyJob(event._id, job.jobEvent._id))}>Ứng Tuyển</Button>\n                                                        </Box>\n                                                    ) : null\n                                                ) : null\n                                                }\n                                            </Box>\n                                        </Box>\n                                    </CardContent>\n\n                                </Card>\n                            </TabPanel>\n                        </TabContext>\n\n                    </Box>\n                </Toolbar >\n            )}\n        </>\n    );\n};\n\nexport default FeedApplyJob;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\FeedStorageEvent.tsx",["799","800"],"import * as React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Avatar, Card, CardContent, CardHeader, CardMedia, Toolbar, Typography, Divider, Grid, Box } from '@mui/material';\nimport { Bookmark, BookmarkBorder } from '@mui/icons-material';\nimport TabContext from '@mui/lab/TabContext';\nimport TabPanel from '@mui/lab/TabPanel';\nimport { green } from '@mui/material/colors';\nimport { createStorager, deleteStoragerInList } from \"redux/actions/user\";\nimport { formatDistance } from 'date-fns';\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\n\ntype Props = {\n    event: any;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    toolBar: {\n        dislay: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center'\n    },\n    toolbarContent: {\n        justifyContent: 'center',\n        backgroundColor: 'none',\n        flexDirection: 'column',\n        marginBottom: 'auto'\n    },\n    card: {\n        borderRadius: '12px',\n        margin: 'auto',\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width:\"1400px\"\n    },\n    myMedia: {\n        width: \"320px\",\n        borderRadius: \"24px\"\n    },\n    cardHold: {\n        justifyContent: 'center',\n        maxWidth: '100%',\n        maxHeight: '100%',\n        width: '500px',\n        height: '800px',\n        borderRadius: '12px',\n    },\n    button: {\n        backgroundColor: '#CBB7F5',\n        color: '#434343',\n        height: '40px',\n        width: '100px',\n        fontSize: '12px',\n        fontWeight: 'bold',\n        textTransform: 'none',\n        margin: '7px 0px 0px 10px',\n        borderRadius: '10px',\n        border: '1px solid',\n        borderColor: '#808080',\n    },\n    toolbarTitle: {\n        justifyContent: 'center',\n        paddingTop: '11px',\n        backgroundColor: 'white',\n        maxWidth: '100%'\n    },\n    box: {\n        justifyContent: 'center',\n        textAlign: 'center'\n    },\n    tabClick: {\n        '& .MuiTabs-indicator': {\n            display: 'flex',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n        },\n        '& .MuiTabs-indicatorSpan': {\n            maxWidth: 50,\n            width: '100%',\n            backgroundColor: '#F8D6A4',\n            borderRadius: 4\n        },\n        \"& .MuiTab-root.Mui-selected\": {\n            color: 'black'\n        }\n    },\n    tab: {\n        textTransform: 'none',\n        fontFamily: '',\n        fontSize: '16px',\n        borderRadius: 2,\n        fontWeight: 'bold',\n    }\n\n}));\n\nconst FeedStorageEvent: React.FC<Props> = ({ event }): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const user = useSelector((state: RootState) => state.user);\n    const [value, setValue] = React.useState('1');\n\n    function handleClickStorage() {\n        dispatch(createStorager(event._id));\n    }\n\n    function handleClickUnStorage() {\n        dispatch(deleteStoragerInList(event._id));\n    }\n\n    function convertTZ(date: any, tzString: any) {\n        return new Date(date).toLocaleString(\"en-TT\", { timeZone: tzString });\n    }\n\n    const textAvatar = event.poster.username ?? null;\n    const letterAvatar = textAvatar.charAt(0).toUpperCase();\n\n    const lettercreatedAt = (formatDistance(new Date(event.created_at), Date.now(), { addSuffix: true })).split(\"about\");\n\n    const storager = event.storagers.map((storager: any) => storager.storager.username);\n\n    const storagers = event.storagers.some((storager: any) => user.user.username.includes(storager.storager.username));\n\n    const compareUser = storagers ? (\n        <Bookmark onClick={handleClickUnStorage} style={{ width: \"30px\", height: \"30px\", color: 'black', marginTop: \"15px\", marginRight: \"15px\" }} />\n    ) : storager !== user.user.username ? (\n        <BookmarkBorder onClick={handleClickStorage} style={{ width: \"30px\", height: \"30px\", color: 'black', marginTop: \"15px\", marginRight: \"15px\" }} />\n    ) : null\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Toolbar className={classes.toolBar}>\n                <Box className={classes.toolbarContent}>\n                    <TabContext value={value}>\n                        <TabPanel value=\"1\" >\n                            {/* de rieng ra 1 component */}\n                            <Card className={classes.card}>\n                                <Box display={'flex'} flexDirection={'row'}>\n                                    <Box sx={{ marginTop: \"50px\", marginLeft: \"20px\", fontSize: \"20px\", fontWeight: \"bold\", width: \"850px\" }}>\n                                        <Box sx={{ marginLeft: \"15px\" }}>\n                                            {event.nameEvent}\n                                        </Box>\n                                        <Typography style={{ textAlign: 'left', fontSize: '14px', margin: '0px 14px', marginTop: \"6px\" }}>\n                                            {event?.dayStart ?? null} - {event?.dayEnd ?? null}\n                                        </Typography>\n                                        <Box>\n                                            <CardHeader\n                                                avatar={\n                                                    <Avatar style={{ backgroundColor: green[500] }} aria-label=\"recipe\">\n                                                        {letterAvatar}\n                                                    </Avatar>\n                                                }\n                                                title={event.poster.username ?? null}\n                                                titleTypographyProps={{ align: 'left', fontSize: '16px', fontWeight: 'bold' }}\n                                                subheader={lettercreatedAt}\n                                                subheaderTypographyProps={{ align: 'left', fontSize: '12px' }}\n                                            >\n                                            </CardHeader>\n\n                                            <CardContent>\n                                                <Box>\n                                                    <Box>\n                                                        <Typography style={{ textAlign: 'left', fontSize: '15px', marginTop: \"-10px\", marginBottom: '14px' }}>\n                                                            Công việc:\n                                                        </Typography>\n                                                        <Grid container spacing={2} columns={16} style={{ marginLeft: \"20px\", marginBottom: \"25px\" }}>\n                                                            {event.job.map((job: any) =>\n                                                                <Grid item xs={4} style={{ fontWeight: \"initial\", fontSize: \"14px\" }}>\n                                                                    {job.nameJob}\n                                                                </Grid>\n                                                            )}\n                                                        </Grid>\n                                                    </Box>\n                                                    <Box>\n                                                        <Typography style={{ textAlign: 'left', fontSize: '14px' }}>\n                                                            Địa điểm: {event.location ?? null}\n                                                        </Typography>\n                                                    </Box>\n                                                    <Box sx={{ marginTop: \"30px\" }}>\n                                                        {event.storagers.filter((storager:any) => storager.storager.username == user.user.username).map((storager: any) =>\n                                                            <Typography style={{ textAlign: 'left', fontSize: '14px' }}>\n                                                                Ngày lưu: {convertTZ((storager.created), \"Asia/Bangkok\")}\n                                                            </Typography>\n                                                        )}\n                                                    </Box>\n                                                </Box>\n                                            </CardContent >\n                                        </Box>\n                                    </Box>\n                                    <Box >\n                                        <Divider orientation=\"vertical\" style={{ margin: '55px 0px', height: \"250px\", backgroundColor: \"rgba(0,0,0,0.5)\" }} />\n                                    </Box>\n                                    <Box sx={{ width: \"730px\" }}>\n                                        <Box display={'flex'} flexDirection={'column'}>\n                                            <Box textAlign={'right'}>\n                                                {compareUser}\n                                            </Box>\n                                            <Box sx={{ marginTop: \"30px\", fontSize: \"20px\", fontWeight: \"bold\", textAlign: \"center\" }}>\n                                                Khoa {event.departmentEvent.nameDepartment.toLowerCase()}\n                                            </Box>\n                                            <Box sx={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", marginTop: \"25px\" }}>\n                                                <CardMedia\n                                                    className={classes.myMedia}\n                                                    component=\"img\"\n                                                    image={event?.image}\n                                                    alt=\"Paella dish\"\n                                                >\n                                                </CardMedia>\n                                            </Box>\n                                        </Box>\n                                    </Box>\n                                </Box>\n                            </Card>\n                        </TabPanel>\n                    </TabContext>\n\n                </Box>\n            </Toolbar >\n        </>\n    );\n};\n\nexport default FeedStorageEvent;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\User\\UpdateProfile.tsx",[],"C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\contents\\Content.tsx",["801","802","803","804","805","806","807"],"import * as React from \"react\";\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getEvents, getDepartments } from \"redux/actions/user\";\nimport { RootState } from \"redux/reducers\";\nimport { logOutUser } from \"redux/actions/user\";\nimport { Stack, Divider, AppBar, Box, Toolbar, Typography, Popover, MenuItem, Avatar, InputAdornment, OutlinedInput, IconButton, TextField } from '@mui/material';\n\nimport { MenuItem as MenuItemDepartment } from \"@material-ui/core\"\nimport { StyledMenuItem } from '../../layouts/navigation/style'\nimport { BoxSpan } from '../../layouts/navigation/style'\n\nimport { IEvent } from \"redux/types/event\";\nimport { IDepartment } from \"redux/types/department\";\n\nimport FeedContent from \"pages/contents/FeedContent\";\nimport FeedDetailContent from \"pages/contents/FeedDetailContent\";\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Person, Notifications } from '@mui/icons-material';\n\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\n    width: 240,\n    '& fieldset': {\n        borderWidth: `1px !important`,\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\n        borderColor: '#rgba(0, 0, 0, 0.87)'\n    },\n}));\n\nconst useStyles = makeStyles((theme) => ({\n    textfield: {\n        '& .MuiSelect-select': {\n            color: 'black', fontSize: '12px'\n        },\n        '& .MuiSvgIcon-root': {\n            fontSize: '20px', paddingRight: '2px'\n        },\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderRadius: '20px'\n            },\n            '&.Mui-focused fieldset': {\n                border: \"1px solid black\",\n            }\n        },\n        '& label.Mui-focused': {\n            color: 'black',\n        },\n        '& fieldset': {\n            borderRadius: '30px'\n        },\n\n    },\n    hoverDetail: {\n        '&: hover': {\n            color: 'green',\n        },\n    },\n}))\n\nconst StyledRoot = styled(AppBar)(() => ({\n    boxShadow: 'none',\n    width: '100%',\n    backgroundColor: 'white',\n    fontWeight: 'bold',\n}));\n\nconst Content: React.FC = (): JSX.Element => {\n\n    const dispatch = useDispatch();\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n    const openUser = Boolean(anchorElUser);\n    const handleClickUser = (event: any) => {\n        setAnchorElUser(event.currentTarget);\n    };\n    const handleCloseUser = () => {\n        setAnchorElUser(null);\n    };\n    const classes = useStyles();\n    const [filterName, setFilterName] = React.useState('');\n\n    const [filterNameDepartment, setFilterNameDepartment] = React.useState('');\n\n    const [events, setEvents] = React.useState<IEvent[]>([]);\n    const [eventDetails, setEventDetails] = React.useState<IEvent[]>([]);\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const user = useSelector((state: RootState) => state.user);\n\n    React.useEffect(() => {\n        dispatch(getEvents());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setEvents(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent\n            ));\n    }, [user]);\n    const findIndexEvent = user.events.map((event: any) => event.nameEvent)\n    React.useEffect(() => {\n        setEventDetails(() =>\n            user?.events?.filter((event: any) =>\n                event.nameEvent == findIndexEvent[0]\n            ));\n    }, [user]);\n    React.useEffect(() => {\n        setDepartments(() => user?.departments?.filter((department: any) => department.nameDepartment));\n    }, [user]);\n\n    const myInputProps_TenKhoa = {\n        startAdornment: <Box style={{ fontSize: '12px' }}\n        > Khoa</Box>,\n        style: {\n            height: '48px',\n        }\n    }\n\n    const handleFilterByName = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase()) || event.location.toLowerCase().startsWith(keyword.toLowerCase()) || event.job.some((job: any) => job.nameJob.toLowerCase().startsWith(keyword.toLowerCase()));\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.nameEvent || event.location || event.job.some((job: any) => job.nameJob)));\n        }\n\n        setFilterName(keyword);\n    };\n\n    const handleFilterByNameDepartment = (event: any) => {\n        const keyword = event.target.value;\n\n        if (keyword !== '') {\n            const results = user?.events?.filter((event: any) => {\n                return event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) || event.departmentEvent.nameDepartment.toLowerCase().startsWith(keyword.toLowerCase()) && event.nameEvent.toLowerCase().startsWith(keyword.toLowerCase());\n                // Use the toLowerCase() method to make it case-insensitive\n            });\n            setEvents(results);\n        } else {\n            setEvents(() => user?.events?.filter((event: any) => event.departmentEvent.nameDepartment));\n        }\n\n        setFilterNameDepartment(keyword);\n    };\n\n    React.useEffect(() => {\n        document.title = \"Trang Chủ | CTV\";\n    }, []);\n\n    return (\n        <Box>\n            <Box>\n                <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\" }}>\n                    <Toolbar>\n                        <Link style={{ textDecoration: 'none' }} to={'/user'}>\n                            <img src=\"/hutech-logo.ico\" style={{ height: \"56px\", width: \"50px\" }}></img>\n                        </Link>\n                        <Box textAlign={\"center\"} sx={{ flexGrow: 1 }}>\n                            <StyledSearch\n                                style={{ borderRadius: '20px', fontSize: '13px', height: \"48px\", marginRight: '16px' }}\n                                value={filterName}\n                                onChange={handleFilterByName}\n                                placeholder=\"Tìm kiếm công việc...\"\n                                startAdornment={\n                                    <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\n                                        <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\n                                    </InputAdornment>\n                                }\n                            />\n                            <TextField\n                                id=\"filled-select-currency\"\n                                select\n                                value={filterNameDepartment}\n                                onChange={handleFilterByNameDepartment}\n                                variant=\"outlined\"\n                                InputProps={myInputProps_TenKhoa}\n                                style={{ width: 240 }}\n                                className={classes.textfield}\n                            >\n                                {departments.map((department) => (\n                                    <MenuItemDepartment key={department._id}\n                                        value={department.nameDepartment}\n                                        style={{ fontSize: \"12px\" }}\n                                    >\n                                        {department.nameDepartment}\n                                    </MenuItemDepartment>\n                                ))}\n                            </TextField>\n                        </Box>\n                        {/* <Box>\n                            <Notifications style={{ color: 'black' }} />\n                        </Box> */}\n                        <Stack\n                            direction=\"row\"\n                            alignItems=\"center\"\n                            spacing={{\n                                xs: 0.5,\n                                sm: 1,\n                            }}\n                            sx={{ margin: 3, color: 'black' }}\n                        >\n                            <Box sx={{\n                                display: 'flex', alignItems: 'center', textAlign: 'center'\n                            }}>\n                                <IconButton onClick={(event) => handleClickUser(event)}\n                                    sx={{\n                                        p: 0,\n\n                                    }}>\n                                    <Person style={{ color: \"black\" }} />\n                                </IconButton>\n\n                                <Popover\n                                    open={openUser}\n                                    anchorEl={anchorElUser}\n                                    onClose={handleCloseUser}\n                                    anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                                    transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                                    sx={{ marginLeft: 1 }}\n                                    PaperProps={{\n                                        style: {\n                                            borderRadius: 20,\n                                            boxShadow: 'rgba(145, 158, 171, 0.24) 0px 0px 2px 0px, rgba(145, 158, 171, 0.24) -20px 20px 40px -4px',\n                                        },\n                                        sx: {\n                                            p: 1,\n                                            width: 220,\n                                            overflowX: 'unset',\n                                            overflowY: 'unset',\n                                            '& .MuiMenuItem-root': {\n                                                px: 1,\n                                                py: 1,\n                                                typography: 'body2',\n                                                borderRadius: 1,\n                                                justifyContent: 'left'\n                                            },\n                                            '& .MuiAvatar-root': {\n                                                width: 32,\n                                                height: 32,\n                                                ml: -0.5,\n                                                mt: 1,\n                                                mr: 1,\n                                            },\n                                        },\n                                    }}\n                                >\n\n                                    <BoxSpan />\n                                    <Stack sx={{ p: 0.5 }} >\n                                        <StyledMenuItem component={NavLink} to={'/profile'} >\n                                            <Box display={\"flex\"}>\n                                                <Box>\n                                                    <Avatar src={user.user.avatar} />\n                                                </Box>\n                                                <Box flexDirection={'column'}>\n                                                    <Typography style={{ fontWeight: 500, fontSize: '14px' }}>{user.user.username}</Typography>\n                                                    <Typography style={{ color: \"#637381\", fontSize: '13.5px' }} >{user.user.email}</Typography>\n                                                </Box>\n                                            </Box>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <StyledMenuItem component={NavLink} to={'/storageEvent'}>\n                                            <Typography style={{ fontSize: '14px' }}>Sự Kiện Đã Lưu</Typography>\n                                        </StyledMenuItem>\n\n                                        <StyledMenuItem component={NavLink} to={'/applyJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Công Việc Đã Ứng Tuyển</Typography>\n                                        </StyledMenuItem>\n\n                                        <StyledMenuItem component={NavLink} to={'/manageJob'}>\n                                            <Typography style={{ fontSize: '14px', float: 'left' }}>Quản Lý Công việc</Typography>\n                                        </StyledMenuItem>\n\n                                        <Divider sx={{ borderStyle: 'dashed' }} />\n\n                                        <MenuItem className=\"navbar-logout\" onClick={(e) => dispatch(logOutUser())}>\n                                            <Typography style={{ fontSize: '14px' }}> Đăng Xuất</Typography>\n                                        </MenuItem>\n                                    </Stack>\n\n                                </Popover>\n                            </Box>\n                        </Stack>\n                    </Toolbar>\n                </StyledRoot>\n            </Box>\n            <Box style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center'\n            }}>\n                <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\n                    {events && events.length > 0 ? (\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }}>\n                            <Box style={{ paddingLeft: '20px', top: 100, zIndex: 10, }}>\n                                {events.map((event: any) =>\n                                    <Box>\n                                        <Link style={{ textDecoration: \"none\" }} to={`/event1/${event._id}`}>\n                                            <FeedContent event={event} key={event._id} />\n                                        </Link>\n                                    </Box>\n                                )}\n                            </Box>\n                            <Box style={{ display: 'flex', paddingLeft: '20px', }}>\n                                {eventDetails.map((event: any) =>\n                                    <Box key={event._id} style={{\n                                        width: 500,\n                                        height: 500,\n                                        borderRadius: '12px',\n                                        position: 'sticky',\n                                        zIndex: 10,\n                                        top: \"100px\",\n                                    }}\n                                    >\n                                        <FeedDetailContent event={event} key={event._id} />\n                                    </Box>\n                                )}\n                            </Box>\n                        </Box>\n                    ) : (\n                        <Box style={{ margin: \"70px 0px\" }}>\n                            <Box>\n                                <img style={{ width: \"400px\", display: \"flex\", margin: \"auto\" }} src=\"/not-found.png\" />\n                            </Box>\n                            <Box>\n                                <Typography style={{ fontSize: \"45px\", fontWeight: \"bold\" }}>\n                                    Không Tồn Tại Sự Kiện\n                                </Typography>\n                            </Box>\n                        </Box>\n                    )}\n\n                </Box >\n            </Box>\n        </Box >\n    );\n};\n\nexport default Content;\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\SManager\\EventAccept.tsx",["808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824"],"import * as React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getEvent } from \"redux/actions/sManager\";\r\nimport { RootState } from \"redux/reducers\";\r\nimport { IEvent } from \"redux/types/event\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\n\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport { Button, Container, Typography, Card, CardContent, CardMedia, Box, Popover, Avatar, Box as BoxButton, FormControl, Toolbar, Divider } from '@mui/material';\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { formatDistance } from \"date-fns\";\r\nimport { StyledMenuItem } from \"layouts/navigation/style\";\r\n\r\nconst EventAccept: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const StyledRoot = styled(Toolbar)(({ theme }) => ({\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(0, 3, 0, 3),\r\n    }));\r\n\r\n\r\n\r\n    const [events, setEvents] = React.useState<IEvent[]>([]);\r\n    const [anchorEl, setAnchorEl] = React.useState([null]);\r\n    const smanager = useSelector((state: RootState) => state.smanager);\r\n\r\n    const [anchorElUser, setAnchorElUser] = React.useState([null]);\r\n\r\n    const handleClickUser = (event: any, index: any) => {\r\n        const newAnchorEls = [\r\n            ...anchorElUser.slice(0, index),\r\n            event.currentTarget,\r\n            ...anchorElUser.slice(index + 1)\r\n        ];\r\n        setAnchorElUser(newAnchorEls);\r\n    };\r\n    const handleCloseUser = (index: any) => {\r\n        const newAnchorEls = [\r\n            ...anchorElUser.slice(0, index),\r\n            null,\r\n            ...anchorElUser.slice(index + 1)\r\n        ];\r\n        setAnchorElUser(newAnchorEls);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getEvent());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setEvents(() =>\r\n            smanager?.events?.filter((event: any) =>\r\n                event.nameEvent\r\n            ));\r\n    }, [smanager]);\r\n\r\n    const handleOpenMenu = (event: any, index: any) => {\r\n        const newAnchorEls = [\r\n            ...anchorEl.slice(0, index),\r\n            event.currentTarget,\r\n            ...anchorEl.slice(index + 1)\r\n        ];\r\n        setAnchorEl(newAnchorEls);\r\n    };\r\n\r\n    const handleCloseMenu = (index: any) => {\r\n        const newAnchorEls = [\r\n            ...anchorEl.slice(0, index),\r\n            null,\r\n            ...anchorEl.slice(index + 1)\r\n        ];\r\n        setAnchorEl(newAnchorEls);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Sự kiện | Manager\";\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <Container >\r\n            <StyledRoot style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                {/* navigate */}\r\n                <Box style={{ display: \"flex\", flexDirection: \"row\", width: 680 }}>\r\n                    <Box>\r\n                        <Typography gutterBottom style={{ color: \"black\", fontSize: \"20px\", fontWeight: 'bold' }}>\r\n                            Danh Sách Sự Kiện Đã Duyệt\r\n                        </Typography>\r\n                    </Box>\r\n                </Box>\r\n                {events.map((event: any, index) =>\r\n                    <Box key={event._id} width={680} marginTop={4}>\r\n                        <Box >\r\n                            <Card style={{ boxShadow: \"none\", padding: 50, borderRadius: \"24px\" }}>\r\n                                {/* header */}\r\n                                <Box style={{ marginBottom: \"20px\" }}>\r\n                                    <Box style={{ fontSize: 24, lineHeight: 3, fontWeight: '700', letterSpacing: 0.4 }}>\r\n                                        {event?.nameEvent ?? null}\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                <Box style={{ marginBottom: \"20px\" }}>\r\n                                    <Box\r\n                                        style={{\r\n                                            display: \"flex\", flexDirection: \"row\", alignItems: \"left\",\r\n                                            borderRadius: \"40px\",\r\n                                        }}>\r\n                                        <Avatar style={{ backgroundColor: \"red\", marginRight: \"15px\", width: '30px', height: '30px', fontSize: '13px' }}>\r\n                                            {event.poster.username.charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                        <Box>\r\n                                            <Typography style={{ fontWeight: \"600\", fontSize: '15px' }}>{event.poster.username}</Typography>\r\n                                            <Typography style={{ fontWeight: \"400\", fontSize: '13px', color: 'rgb(145, 158, 171)' }}>{event.poster.department.nameDepartment}</Typography>\r\n                                        </Box>\r\n                                    </Box>\r\n                                </Box>\r\n                                {/* noidung */}\r\n                                <Box style={{ marginBottom: \"20px\" }}>\r\n                                    <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\r\n                                        Nội dung\r\n                                    </Typography>\r\n                                    <Box style={{ fontSize: '13px' }} dangerouslySetInnerHTML={{ __html: event.contentEvent }} />\r\n                                </Box>\r\n                                {/* job */}\r\n                                <Box style={{ marginBottom: \"20px\" }}>\r\n                                    <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\r\n                                        Công việc\r\n                                    </Typography>\r\n                                    {event.job.map((job: any) =>\r\n                                        <Box style={{ fontSize: '13px', paddingBottom: 5 }}>\r\n                                            • {job.nameJob}\r\n                                        </Box>\r\n                                    )}\r\n                                </Box>\r\n\r\n                                {/* detail */}\r\n                                <Typography gutterBottom style={{ color: \"black\", fontSize: \"16px\", fontWeight: '600' }}>\r\n                                    Chi tiết\r\n                                </Typography>\r\n                                <Box display={\"flex\"}\r\n                                    flexDirection={'column'}\r\n                                    justifyContent={'center'}\r\n                                    alignItems={'center'}\r\n                                    style={{ backgroundColor: 'white', padding: '20px 0px', borderRadius: '20px' }}>\r\n\r\n                                    <Box sx={{\r\n                                        display: 'grid',\r\n                                        gap: 4,\r\n                                        gridTemplateColumns: 'repeat(3, 1fr)',\r\n                                        color: \"rgb(33, 43, 54)\",\r\n                                        columnGap: 11\r\n\r\n                                    }} >\r\n\r\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\r\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>\r\n                                                Số lượng\r\n                                            </Box>\r\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\r\n                                                {event.quantityUser}\r\n                                            </Box>\r\n                                        </FormControl>\r\n\r\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\r\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Địa điểm</Box>\r\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>{event.location}</Box>\r\n                                        </FormControl>\r\n\r\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\r\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Tổng chi phí </Box>\r\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>{new Intl.NumberFormat().format(event.costs)}</Box>\r\n                                        </FormControl>\r\n\r\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\r\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Ngày bắt đầu </Box>\r\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }} >\r\n                                                {event.dayStart}\r\n                                            </Box>\r\n                                        </FormControl>\r\n\r\n                                        <FormControl sx={{ alignItems: 'center', gap: 1 }} >\r\n                                            <Box sx={{ fontSize: '14px', color: '#757575', fontWeight: 500, }}>Ngày kết thúc </Box>\r\n                                            <Box sx={{ fontSize: '14px', fontWeight: '1000' }}>\r\n                                                {event.dayEnd}\r\n                                            </Box>\r\n                                        </FormControl>\r\n\r\n                                    </Box>\r\n                                </Box>\r\n\r\n                                {/* Image event */}\r\n                                <Box display={\"flex\"}\r\n                                    flexDirection={'column'}\r\n                                    justifyContent={'center'}\r\n                                    alignItems={'center'}>\r\n\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        image={event.image}\r\n                                        alt=\"Không có ảnh\"\r\n                                        style={{ width: 500, borderRadius: 10, margin: '14px 0' }}\r\n                                    />\r\n                                </Box>\r\n                            </Card>\r\n                        </Box>\r\n                    </Box>\r\n                )\r\n                }\r\n            </StyledRoot >\r\n        </Container >\r\n    );\r\n};\r\n\r\nexport default EventAccept;\r\n","C:\\Users\\ADMIN\\Desktop\\DATN_CTV\\frontend\\src\\pages\\auth\\FormDepartment_User.tsx",["825","826"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\index.tsx",[],["827","828"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\store.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\App.tsx",["829","830"],"import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// import AppHeader from \"layouts/navigation/AppHeader\";\r\nimport SideBar from \"./layouts/navigation/sidebar\";\r\n// import HeaderHome from \"/pages/homepage/HeaderHome\";\r\n\r\nimport Routes from \"./components/routing/Routes\";\r\n\r\nimport { setAdminAuthToken } from \"./utils/headers\";\r\nimport { setUserAuthToken } from \"./utils/headers\";\r\n\r\n\r\nimport { loadAdmin } from \"./redux/actions/admin\";\r\nimport { loadUser } from \"./redux/actions/user\";\r\n\r\nif (localStorage.admin__token) setAdminAuthToken(localStorage.admin__token);\r\nif (localStorage.user__token) setUserAuthToken(localStorage.user__token);\r\n\r\nconst StyledRoot = styled('div')({\r\n  display: 'flex',\r\n  minHeight: '100%',\r\n});\r\n\r\n\r\nconst APP_BAR_MOBILE = 64;\r\nconst APP_BAR_DESKTOP = 92;\r\n\r\nconst Main = styled('div')(({ theme }) => ({\r\n  flexGrow: 2,\r\n  // marginLeft: 270,\r\n  minHeight: '100%',\r\n  \r\n  [theme.breakpoints.up('lg')]: {\r\n    paddingTop: APP_BAR_DESKTOP + 24,\r\n  },\r\n}));\r\n\r\nconst App: React.FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  // React.useEffect(() => dispatch<any>(loadAdmin()), [dispatch]);\r\n  React.useEffect(() => dispatch<any>(loadUser()), [dispatch]);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <>\r\n        <StyledRoot>\r\n          {/* <AppHeader/> */}\r\n          <SideBar />\r\n          {/* <HeaderHome /> */}\r\n\r\n          <Main >\r\n            <Routes />\r\n          </Main>\r\n\r\n        </StyledRoot>\r\n      </>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\AppLoader.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\actions\\admin.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\utils\\headers.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\sidebar.tsx",["831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876"],"import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { logOutAdmin } from \"../../redux/actions/admin\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { Box, Drawer, Avatar, Typography, Divider } from \"@mui/material\";\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\n\r\nimport NavSection from \"./navSelection\";\r\n\r\nconst NAV_WIDTH = 270;\r\n\r\nconst SideBar: React.FC = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const admin = useSelector((state: RootState) => state.admin);\r\n\r\n  const topLinks =\r\n  admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/user') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/city') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/addcity') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/product') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/newproduct') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/typeproduct') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/newtypeproduct') ? (\r\n      <Box>\r\n        <Box\r\n          style={{\r\n            display: \"flex\", flexDirection: \"row\",\r\n            borderRadius: \"16px\", padding: \"20px 10px\",\r\n            backgroundColor: '#f5f5f5', marginTop: '40px'\r\n          }}>\r\n          <Box>\r\n            <Avatar style={{ backgroundColor: \"green\", margin: \"0 10px\" }}>\r\n              {admin.admin.username.charAt(0).toUpperCase()}\r\n            </Avatar>\r\n          </Box>\r\n          <Box style={{ display: \"flex\", flexDirection: \"column\", textAlign: \"left\" }}>\r\n            <Box style={{ fontSize: \"14px\", marginBottom: \"5px\" }}>\r\n              {admin.admin.username}\r\n            </Box>\r\n            <Typography style={{ fontSize: \"13px\" }}>\r\n              {admin.getRole.nameRole}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    ) : null;\r\n\r\n\r\n\r\n  const bottomLinks = admin.isAuthenticated && window.location.pathname.includes('/user') || admin.isAuthenticated && window.location.pathname.includes('/city') || admin.isAuthenticated && window.location.pathname.includes('/addcity') || admin.isAuthenticated && window.location.pathname.includes('/product') || admin.isAuthenticated && window.location.pathname.includes('/newproduct') || admin.isAuthenticated && window.location.pathname.includes('/typeproduct') || admin.isAuthenticated && window.location.pathname.includes('/newtypeproduct') || admin.isAuthenticated && window.location.pathname.includes('/orderCart') ? (\r\n    <Box onClick={(e) => dispatch(logOutAdmin())} style={{ display: 'flex', marginBottom: \"20px\", justifyContent: 'center', cursor: 'pointer' }}>\r\n      <Box style={{\r\n        border: '1px solid #b5b5b5',\r\n        borderRadius: '12px', textAlign: 'center',\r\n        marginTop: '20px', padding: '6px', paddingTop: '8px',\r\n        width: 140, display: 'flex', flexDirection: 'row', justifyContent: 'center'\r\n      }}>\r\n        <Typography style={{ fontSize: '14px', paddingRight: '10px' }} >\r\n          Đăng xuất\r\n        </Typography>\r\n        <LogoutIcon style={{ width: '14px', color: '#ee6f81', paddingBottom: '2px' }} />\r\n      </Box>\r\n    </Box>\r\n  ) :null\r\n\r\n  const sideBar = admin.isAuthenticated && window.location.pathname.includes('/user') || admin.isAuthenticated && window.location.pathname.includes('/city') || admin.isAuthenticated && window.location.pathname.includes('/addcity') || admin.isAuthenticated && window.location.pathname.includes('/product') || admin.isAuthenticated && window.location.pathname.includes('/newproduct') || admin.isAuthenticated && window.location.pathname.includes('/typeproduct') || admin.isAuthenticated && window.location.pathname.includes('/newtypeproduct') || admin.isAuthenticated && window.location.pathname.includes('/orderCart') ? (\r\n    <>\r\n      <Box component=\"nav\"\r\n        sx={{\r\n          flexShrink: { lg: 0 },\r\n          width: { lg: NAV_WIDTH },\r\n        }}>\r\n        <Drawer\r\n          open\r\n          variant='permanent'\r\n          PaperProps={{\r\n            sx: {\r\n              width: NAV_WIDTH,\r\n              bgcolor: 'background.default',\r\n              borderRightStyle: 'dashed'\r\n            }\r\n          }}>\r\n\r\n          <Box sx={{ px: 2, py: 3, display: 'inline-block', fontWeight: \"bold\" }}>\r\n            {topLinks}\r\n          </Box>\r\n          <Divider />\r\n\r\n          <NavSection />\r\n          <Box flexGrow={1} />\r\n\r\n          <Divider  />\r\n          {bottomLinks}\r\n\r\n        </Drawer>\r\n      </Box>\r\n\r\n    </>\r\n  ) : null\r\n\r\n  return (\r\n    <>\r\n      {sideBar}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\Routes.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\reducers\\index.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\actions\\types.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\navSelection.tsx",["877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892"],"import * as React from \"react\";\r\nimport { ListItemText, ListItemIcon } from '@mui/material';\r\nimport { StyledListItemButton } from './style';\r\nimport { dataAdmin } from './dataConfig'\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { Stack } from '@mui/system';\r\n\r\nimport { NavLink as RtLink } from 'react-router-dom';\r\n\r\nexport default function NavSection() {\r\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n\r\n    const handleListItemClick = (event: any, index: any) => {\r\n        setSelectedIndex(index);\r\n    };\r\n\r\n    const admin = useSelector((state: RootState) => state.admin);\r\n    const topAM = admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/user') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/city') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/addcity') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/product') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/newproduct') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/typeproduct') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/newtypeproduct') || admin.isAuthenticated && admin.getRole.keyRole === \"admin\" && window.location.pathname.includes('/orderCart') ? (\r\n        <Stack spacing={2} style={{ padding: \"10px 14px\" }}>\r\n            {dataAdmin.map((item, index) => (\r\n                <StyledListItemButton disableRipple selected={selectedIndex === index} onClick={(event) => handleListItemClick(event, index)}\r\n                    component={RtLink} to={item.path} key={item.name} style={{ padding: \"8px 3px\" }} sx={{\r\n                        \"&.Mui-selected\": {\r\n                            backgroundColor: \"#f4f5f5\",\r\n                            fontWeight: \"500\",\r\n                            borderRadius: \"14px\",\r\n                            color: 'black'\r\n\r\n                        },\r\n                        \"&.Mui-selected:hover\": {\r\n                            backgroundColor: \"#f4f5f5\"\r\n                        },\r\n                        \"&.Mui-focusVisible\": {\r\n                            backgroundColor: \"none\"\r\n                        },\r\n                        \":hover\": {\r\n                            backgroundColor: \"white\"\r\n                        }\r\n                    }}>\r\n                    <ListItemIcon style={{ paddingLeft: '16px' }}>\r\n                        {item.icon}\r\n                    </ListItemIcon>\r\n                    <ListItemText style={{ fontSize: \"12px\" }} disableTypography primary={item.name} />\r\n                </StyledListItemButton>\r\n            ))}\r\n        </Stack>\r\n    ) : null;\r\n\r\n    return (\r\n        <>\r\n            {topAM}\r\n        </>\r\n\r\n    )\r\n}","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\constant\\routesProps.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\GuestRoute.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\AdminRoute.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\reducers\\admin.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\dataConfig.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\layouts\\navigation\\style.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\Login.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\Product.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Guest.tsx",["893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\TypeProduct.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\NewProduct.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\User.tsx",["987"],"import * as React from \"react\";\r\nimport { styled, alpha } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUsers, deleteUser } from \"../../redux/actions/admin\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { IUser } from \"../../redux/types/user\";\r\nimport { Box,TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Button, Card, Container, Popover, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\r\nimport UserForm from \"./UserForm\";\r\n// @mui\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\r\n  height: 96,\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  padding: theme.spacing(0, 1, 0, 3),\r\n}));\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n  width: 240,\r\n  transition: theme.transitions.create(['box-shadow', 'width'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter,\r\n  }),\r\n  '&.Mui-focused': {\r\n    width: 320,\r\n  },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n  },\r\n}));\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key,\r\n): (\r\n  a: { [key in Key]: number | string },\r\n  b: { [key in Key]: number | string },\r\n) => number {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface DataUser {\r\n  _id: keyof IUser;\r\n  username: keyof IUser;\r\n  role: keyof IUser;\r\n  update: keyof IUser;\r\n  delete: keyof IUser;\r\n}\r\n\r\ninterface HeadCell {\r\n  _id: keyof DataUser;\r\n  label: string;\r\n  numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n  {\r\n    _id: 'username',\r\n    numeric: false,\r\n    label: 'Tên người dùng',\r\n  },\r\n  {\r\n    _id: 'role',\r\n    numeric: false,\r\n    label: 'Chức vụ',\r\n  },\r\n  {\r\n    _id: 'update',\r\n    numeric: false,\r\n    label: '',\r\n  },\r\n  {\r\n    _id: 'delete',\r\n    numeric: false,\r\n    label: '',\r\n  },\r\n];\r\n\r\n\r\ninterface EnhancedTableProps {\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\r\n  order: Order;\r\n  orderBy: string;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n  const { order, orderBy, onRequestSort } =\r\n    props;\r\n  const createSortHandler =\r\n    (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\r\n      onRequestSort(event, property);\r\n    };\r\n  return (\r\n    <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\r\n      sx={{\r\n        '& th:first-child': {\r\n          borderRadius: '1em 0 0 0'\r\n        },\r\n        '& th:last-child': {\r\n          borderRadius: '0 1em 0 0'\r\n        }\r\n      }}>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell._id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            style={{ fontSize: '13px' }}\r\n            sortDirection={orderBy === headCell._id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell._id}\r\n              direction={orderBy === headCell._id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell._id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell._id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst User: React.FC = (): JSX.Element => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const [users, setUsers] = React.useState<IUser[]>([]);\r\n  const admin = useSelector((state: RootState) => state.admin);\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState([null]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [filterName, setFilterName] = React.useState('');\r\n\r\n  const [order, setOrder] = React.useState<Order>('asc');\r\n  const [orderBy, setOrderBy] = React.useState<keyof DataUser>('username');\r\n\r\n\r\n\r\n  const handleRequestSort = (\r\n    event: React.MouseEvent<unknown>,\r\n    property: keyof DataUser,\r\n  ) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: any) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const handleChangePage = (event: any, newPage: any) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleFilterByName = (event: any) => {\r\n    setPage(0);\r\n    const keyword = event.target.value;\r\n\r\n    if (keyword !== '') {\r\n      const results = admin?.users?.filter((user: any) => {\r\n        if (user.role.keyRole !== \"admin\")\r\n          return user.username.toLowerCase().startsWith(keyword.toLowerCase());\r\n      });\r\n      setUsers(results);\r\n    } else {\r\n      setUsers(() => admin?.users?.filter((user: any) => user.role.keyRole === \"user\" || user.role.keyRole === \"company\"));\r\n    }\r\n\r\n    setFilterName(keyword);\r\n  };\r\n\r\n  const handleOpenMenu = (event: any, index: any) => {\r\n    const newAnchorEls = [\r\n      ...anchorEl.slice(0, index),\r\n      event.currentTarget,\r\n      ...anchorEl.slice(index + 1)\r\n    ];\r\n    setAnchorEl(newAnchorEls);\r\n  };\r\n\r\n  const handleCloseMenu = (index: any) => {\r\n    const newAnchorEls = [\r\n      ...anchorEl.slice(0, index),\r\n      null,\r\n      ...anchorEl.slice(index + 1)\r\n    ];\r\n    setAnchorEl(newAnchorEls);\r\n  };\r\n\r\n\r\n  const sortUser = stableSort(users, getComparator(order, orderBy));\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getUsers());\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    setUsers(() => admin?.users?.filter((user: any) => user.role.keyRole))\r\n  }, [admin]);\r\n\r\n  React.useEffect(() => {\r\n    document.title = \"ADMIN\";\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <>\r\n      <Container>\r\n        <Card style={{ padding: \"20px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\r\n          <StyledRoot\r\n            style={{ display: \"flex\", flexDirection: \"row\" }}\r\n            sx={{\r\n              color: 'primary.main',\r\n              bgcolor: 'primary.lighter',\r\n            }}\r\n          >\r\n            <Box>\r\n              <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\r\n                Danh sách người dùng\r\n              </Typography>\r\n            </Box>\r\n            <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\r\n              <Box style={{ marginRight: \"14px\" }}>\r\n                <StyledSearch\r\n                  style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\r\n                  value={filterName}\r\n                  onChange={handleFilterByName}\r\n                  placeholder=\"Tìm kiếm user...\"\r\n                  startAdornment={\r\n                    <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\r\n                      <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </StyledRoot>\r\n          <TableContainer>\r\n            {/* Table user */}\r\n            <Table >\r\n              <EnhancedTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onRequestSort={handleRequestSort}\r\n              />\r\n              {users && users.length > 0 ? (\r\n                <TableBody>\r\n                  {sortUser.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user: any, index) =>\r\n                    <TableRow key={user._id}>\r\n                      <TableCell align=\"left\" sx={{ width: \"200px\", paddingLeft: \"26px\", fontSize: '12px' }}>\r\n                        {user.username}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\" sx={{ width: \"200px\", fontSize: '12px' }}>\r\n                        {user.role.keyRole}\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"left\" sx={{ padding: \"0px\" }}>\r\n                        <Button size=\"large\" color=\"inherit\" onClick={(event) => handleOpenMenu(event, index)} >\r\n                          <EditIcon style={{ width: \"16px\" }} />\r\n                        </Button>\r\n                        <Popover\r\n                          open={!!anchorEl[index]}\r\n                          anchorEl={anchorEl[index]}\r\n                          onClose={() => handleCloseMenu(index)}\r\n                          anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n                          transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                          PaperProps={{\r\n                            sx: {\r\n                              p: 1,\r\n                              width: 340,\r\n                              '& .MuiMenuItem-root': {\r\n                                px: 1,\r\n                                typography: 'body2',\r\n                                borderRadius: 0.75,\r\n                              },\r\n                            },\r\n                          }}\r\n                        >\r\n                          <Box>\r\n                            <UserForm user={user} key={user._id} />\r\n                          </Box>\r\n                        </Popover>\r\n                      </TableCell>\r\n                      <TableCell align=\"left\" sx={{ padding: \"0px\" }} >\r\n                        <Button style={{ color: \"red\" }} onClick={(e) => dispatch(deleteUser(user._id))} >\r\n                          <DeleteForeverIcon style={{ width: \"16px\" }} />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n\r\n                  <TableRow>\r\n                    <TablePagination\r\n                      style={{ fontSize: \"12px\" }}\r\n                      sx={{\r\n                        '& .MuiTablePagination-select': {\r\n                          width: \"12px\"\r\n                        },\r\n                        '& .MuiTablePagination-selectLabel': {\r\n                          fontSize: \"12px\"\r\n                        },  \r\n                        '& .MuiTablePagination-selectIcon': {\r\n                          width: \"16px\"\r\n                        },\r\n                        '& .MuiTablePagination-displayedRows': {\r\n                          fontSize: \"12px\"\r\n                        },\r\n                        '& .MuiSvgIcon-root': {\r\n                          fontSize: \"16px\"\r\n                        },\r\n                      }}\r\n                      rowsPerPageOptions={[5, 10, 25]}\r\n                      labelRowsPerPage={\"Số lượng hàng:\"}\r\n                      count={users.length}\r\n                      rowsPerPage={rowsPerPage}\r\n                      page={page}\r\n                      onPageChange={handleChangePage}\r\n                      onRowsPerPageChange={handleChangeRowsPerPage}\r\n                      SelectProps={{\r\n                        MenuProps: {\r\n                          sx: {\r\n                            \"&& .MuiTablePagination-menuItem\": {\r\n                              fontSize: \"12px\"\r\n                            }\r\n                          }\r\n                        }\r\n                      }}\r\n                    />\r\n                  </TableRow>\r\n                </TableBody>\r\n              ) : (\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                      <Typography variant=\"h6\" paragraph>\r\n                        Không tồn tại user\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"body2\">\r\n                        Không tìm thấy kết quả &nbsp;\r\n                        <strong>&quot;{filterName}&quot;</strong>.\r\n                      </Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              )}\r\n            </Table>\r\n          </TableContainer>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\NewTypeProduct.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UserForm.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\CreateTypeProduct.tsx",["988","989"],"import React from \"react\";\r\nimport { Box, Button, CircularProgress, Container, FormControl, FormLabel, TextField, Typography } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTypeProduct } from \"../../redux/actions/admin\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    placeholder: {\r\n        color: \"#aaa\"\r\n    },\r\n    selectStyle: {\r\n        fontSize: '13px',\r\n        marginBottom: '28px',\r\n        marginTop: 10,\r\n        width: 300,\r\n        \"& fieldset\": {\r\n            borderRadius: \"10px\",\r\n        },\r\n    },\r\n    btnLogin: {\r\n        '&.MuiButton-root:hover': {\r\n            backgroundColor: \"transparent\",\r\n        }\r\n    },\r\n}));\r\ntype Props = {\r\n    typeproduct: any;\r\n};\r\n\r\ninterface IInitialValues {\r\n    nameTypeProduct: string;\r\n}\r\n\r\nconst CreateTypeProduct: React.FC<Props> = ({ typeproduct }): JSX.Element => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const initialValues: IInitialValues = {\r\n        nameTypeProduct: typeproduct?.nameTypeProduct ?? \"\",\r\n    };\r\n\r\n\r\n    const onHandleSubmit = (\r\n        values: IInitialValues,\r\n        { setSubmitting }: any\r\n    ): Promise<void> =>\r\n        dispatch<any>(addTypeProduct(values, setSubmitting));\r\n\r\n    const validationSchema = Yup.object({\r\n        nameTypeProduct: Yup.string().required(\"required!\"),\r\n    });\r\n\r\n    return (\r\n        <Container style={{ maxWidth: 600 }}>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onHandleSubmit}\r\n            >\r\n                {({ values, handleChange, handleBlur, errors, touched, isSubmitting, handleSubmit }) => (\r\n                    <form noValidate onSubmit={handleSubmit}>\r\n                        <Box>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Tên Loại Sản Phẩm</FormLabel>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    name='nameTypeProduct'\r\n                                    value={values.nameTypeProduct}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập tên loại sản phẩm'\r\n                                    helperText={touched.nameTypeProduct ? errors.nameTypeProduct : \"\"}\r\n                                    error={touched.nameTypeProduct ? Boolean(errors.nameTypeProduct) : false}\r\n                                />\r\n                            </FormControl>\r\n                            <Box marginTop={2}>\r\n                                <Button\r\n                                    type='submit'\r\n                                    disabled={isSubmitting}\r\n                                    style={{\r\n                                        color: \"rgb(33, 43, 54)\",\r\n                                        height: \"34px\",\r\n                                        width: \"120px\",\r\n                                        fontSize: \"12px\",\r\n                                        borderRadius: \"4px\",\r\n                                        fontWeight: 500,\r\n                                        textTransform: \"capitalize\",\r\n                                        border: '1px solid rgb(33, 43, 54)',\r\n                                        marginRight: 10\r\n                                    }}\r\n                                >\r\n                                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Thêm Sản Phẩm\"}\r\n                                </Button>\r\n\r\n                                <Button style={{\r\n                                    color: \"#FF6969\",\r\n                                    height: \"34px\",\r\n                                    width: \"120px\",\r\n                                    fontSize: \"12px\",\r\n                                    fontWeight: 500,\r\n                                    borderRadius: \"4px\",\r\n                                    textTransform: \"capitalize\",\r\n                                    border: '1px solid #FF6969',\r\n\r\n                                }}\r\n                                    onClick={history.goBack}\r\n                                >Quay lại</Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CreateTypeProduct;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\CreateProduct.tsx",["990"],"import React from \"react\";\r\nimport { Box, Button, CircularProgress, Container, FormControl, FormLabel, TextField, Typography } from \"@mui/material\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addProduct } from \"../../redux/actions/admin\";\r\nimport FormTypeProduct from \"../../pages/auth/FormTypeProduct\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    placeholder: {\r\n        color: \"#aaa\"\r\n    },\r\n    selectStyle: {\r\n        fontSize: '13px',\r\n        marginBottom: '28px',\r\n        marginTop: 10,\r\n        width: 300,\r\n        \"& fieldset\": {\r\n            borderRadius: \"10px\",\r\n        },\r\n    },\r\n    btnLogin: {\r\n        '&.MuiButton-root:hover': {\r\n            backgroundColor: \"transparent\",\r\n        }\r\n    },\r\n}));\r\ntype Props = {\r\n    product: any;\r\n};\r\n\r\ninterface IInitialValues {\r\n    nameProduct: string;\r\n    typeProduct: any;\r\n    price: number;\r\n    productDetail: string;\r\n    productDescription: string;\r\n    image: string;\r\n}\r\n\r\nconst CreateProduct: React.FC<Props> = ({ product }): JSX.Element => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const initialValues: IInitialValues = {\r\n        nameProduct: product?.nameProduct ?? \"\",\r\n        typeProduct: product?.typeProduct ?? \"\",\r\n        price: product?.price ?? \"\",\r\n        productDetail: product?.productDetail ?? \"\",\r\n        productDescription: product?.productDescription ?? \"\",\r\n        image: product?.image ?? \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        nameProduct: Yup.string().required(\"required!\"),\r\n        price: Yup.string().required(\"required!\"),\r\n        productDetail: Yup.string().required(\"required!\"),\r\n        productDescription: Yup.string().required(\"required!\"),\r\n    });\r\n\r\n    return (\r\n        <Container style={{ maxWidth: 600 }}>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values: any, { setSubmitting }) => {\r\n                    let formData = new FormData();\r\n                    formData.append(\"nameProduct\", values.nameProduct);\r\n                    formData.append(\"typeProduct\", values.typeProduct);\r\n                    formData.append(\"price\", values.price);\r\n                    formData.append(\"productDetail\", values.productDetail);\r\n                    formData.append(\"image\", values.image);\r\n                    formData.append(\"productDescription\", values.productDescription);\r\n                    dispatch(addProduct(formData, setSubmitting));\r\n                }}\r\n            >\r\n                {({ values, handleChange, handleBlur, errors, touched, isSubmitting, handleSubmit, setFieldValue }) => (\r\n                    <form noValidate onSubmit={handleSubmit}>\r\n                        <Box>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Tên Sản Phẩm</FormLabel>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    name='nameProduct'\r\n                                    value={values.nameProduct}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập tên sản phẩm'\r\n                                    helperText={touched.nameProduct ? errors.nameProduct : \"\"}\r\n                                    error={touched.nameProduct ? Boolean(errors.nameProduct) : false}\r\n                                />\r\n                            </FormControl>\r\n                            <FormTypeProduct isTypeProduct={true} />\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Giá Tiền</FormLabel>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    name='price'\r\n                                    value={values.price}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập giá sản phẩm'\r\n                                    helperText={touched.price ? errors.price : \"\"}\r\n                                    error={touched.price ? Boolean(errors.price) : false}\r\n                                />\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Chi Tiết Sản Phẩm</FormLabel>\r\n                                <ReactQuill theme=\"snow\" value={values.productDetail} onChange={(e: any) => {\r\n                                    setFieldValue('productDetail', e);\r\n                                }} />\r\n                                {/* <TextField\r\n                                    fullWidth\r\n                                    name='productDetail'\r\n                                    value={values.productDetail}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập chi tiết sản phẩm'\r\n                                    helperText={touched.productDetail ? errors.productDetail : \"\"}\r\n                                    error={touched.productDetail ? Boolean(errors.productDetail) : false}\r\n                                /> */}\r\n                            </FormControl>\r\n                            <FormControl fullWidth className={classes.formControl}>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Mô Tả Sản Phẩm</FormLabel>\r\n                                <ReactQuill theme=\"snow\" value={values.productDetail} onChange={(e: any) => {\r\n                                    setFieldValue('productDescription', e);\r\n                                }} />\r\n                                {/* <TextField\r\n                                    fullWidth\r\n                                    name='productDescription'\r\n                                    value={values.productDescription}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập mô tả sản phẩm'\r\n                                    helperText={touched.productDescription ? errors.productDescription : \"\"}\r\n                                    error={touched.productDescription ? Boolean(errors.productDescription) : false}\r\n                                /> */}\r\n                            </FormControl>\r\n                            <FormControl>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Hình ảnh</FormLabel>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    name='image'\r\n                                    type='file'\r\n                                    onChange={(e: any) => {\r\n                                        setFieldValue('image', e.target.files[0]);\r\n                                    }}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                            </FormControl>\r\n                            <Box marginTop={2}>\r\n                                <Button\r\n                                    type='submit'\r\n                                    disabled={isSubmitting}\r\n                                    style={{\r\n                                        color: \"rgb(33, 43, 54)\",\r\n                                        height: \"34px\",\r\n                                        width: \"120px\",\r\n                                        fontSize: \"12px\",\r\n                                        borderRadius: \"4px\",\r\n                                        fontWeight: 500,\r\n                                        textTransform: \"capitalize\",\r\n                                        border: '1px solid rgb(33, 43, 54)',\r\n                                        marginRight: 10\r\n                                    }}\r\n                                >\r\n                                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Thêm Sản Phẩm\"}\r\n                                </Button>\r\n\r\n                                <Button style={{\r\n                                    color: \"#FF6969\",\r\n                                    height: \"34px\",\r\n                                    width: \"120px\",\r\n                                    fontSize: \"12px\",\r\n                                    fontWeight: 500,\r\n                                    borderRadius: \"4px\",\r\n                                    textTransform: \"capitalize\",\r\n                                    border: '1px solid #FF6969',\r\n\r\n                                }}\r\n                                    onClick={history.goBack}\r\n                                >Quay lại</Button>\r\n                            </Box>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CreateProduct;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UpdateTypeProduct.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormFieldRole.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormTypeProduct.tsx",["991"],"import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { FormControl, FormLabel, Select } from \"@mui/material\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nimport { getTypeProduct } from \"../../redux/actions/admin\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0, 0),\r\n        width: 302,\r\n    },\r\n    placeholder: {\r\n        color: \"#aaa\"\r\n    },\r\n    selectStyle: {\r\n        fontSize: '13px',\r\n        marginBottom: '28px',\r\n        marginTop: 10,\r\n        \"& fieldset\": {\r\n            borderRadius: \"10px\",\r\n        },\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    isTypeProduct?: boolean;\r\n};\r\n\r\ninterface IInitialValues {\r\n    typeProduct: any;\r\n}\r\n\r\n// const Placeholder = ({ children }: { children: any }) => {\r\n//     const classes = useStyles();\r\n//     return <div className={classes.placeholder}>{children}</div>;\r\n// };\r\n\r\nconst FormTypeProduct: React.FC<Props> = ({ isTypeProduct = false }): JSX.Element => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const { values, handleChange, handleBlur, touched, errors } =\r\n        useFormikContext<IInitialValues>();\r\n\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const TypeProduct = useSelector((state: RootState) => state.admin);\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => TypeProduct?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [TypeProduct]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {isTypeProduct ? (\r\n                <FormControl className={classes.formControl}>\r\n                    <Select\r\n                        name=\"typeProduct._id\"\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"handle-city\"\r\n                        value={values.typeProduct._id}\r\n                        className={classes.selectStyle}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={touched.typeProduct ? Boolean(errors.typeProduct) : false}\r\n                        variant={'outlined'}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    fontSize: 10,\r\n                                },\r\n                            },\r\n                        }}\r\n                    >\r\n                        {typeProducts?.map((typeProduct: any) => (\r\n                            <MenuItem value={typeProduct._id} key={typeProduct._id}>\r\n                                {typeProduct.nameTypeProduct}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            ) : null}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormTypeProduct;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormField.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UpdateProduct.tsx",["992"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateProduct } from \"../../redux/actions/admin\";\r\nimport { FormControl, FormLabel, TextField } from \"@mui/material\";\r\nimport FormTypeProduct from \"../../pages/auth/FormTypeProduct\";\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    btnLogin: {\r\n        '&.MuiButton-root:hover': {\r\n            backgroundColor: \"transparent\",\r\n        }\r\n    },\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(2, 0),\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    product: any;\r\n};\r\n\r\ninterface IInitialValues {\r\n    nameProduct: string;\r\n    price: number;\r\n    productDetail: string;\r\n    productDescription: string;\r\n    image: string;\r\n}\r\n\r\nconst UpdateProduct: React.FC<Props> = ({ product }): JSX.Element => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    const initialValues: IInitialValues = {\r\n        nameProduct: product?.nameProduct ?? \"\",\r\n        price: product?.price ?? \"\",\r\n        productDetail: product?.productDetail ?? \"\",\r\n        productDescription: product?.productDescription ?? \"\",\r\n        image: product?.image ?? \"\",\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        nameProduct: Yup.string().required(\"required!\"),\r\n        price: Yup.string().required(\"required!\"),\r\n        productDetail: Yup.string().required(\"required!\"),\r\n        productDescription: Yup.string().required(\"required!\"),\r\n    });\r\n\r\n    return (\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={initialValues}\r\n            validationSchema={validationSchema}\r\n            onSubmit={(values: any, { setSubmitting }) => {\r\n                let formData = new FormData();\r\n                formData.append(\"nameProduct\", values.nameProduct);\r\n                formData.append(\"price\", values.price);\r\n                formData.append(\"productDetail\", values.productDetail);\r\n                formData.append(\"image\", values.image);\r\n                formData.append(\"productDescription\", values.productDescription);\r\n                dispatch(updateProduct(formData, product._id, setSubmitting));\r\n            }}\r\n        >\r\n            {({ values, handleChange, handleBlur, errors, touched, isSubmitting, handleSubmit, setFieldValue }) => (\r\n                <form noValidate onSubmit={handleSubmit} encType=\"multipart/form-data\">\r\n                    <Box>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <FormLabel classes={{ root: classes.formLabel }}>Tên Sản Phẩm</FormLabel>\r\n                            <TextField\r\n                                fullWidth\r\n                                name='nameProduct'\r\n                                value={values.nameProduct}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                placeholder='Nhập tên sản phẩm'\r\n                                helperText={touched.nameProduct ? errors.nameProduct : \"\"}\r\n                                error={touched.nameProduct ? Boolean(errors.nameProduct) : false}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <FormLabel classes={{ root: classes.formLabel }}>Giá Tiền</FormLabel>\r\n                            <TextField\r\n                                fullWidth\r\n                                name='price'\r\n                                value={values.price}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                placeholder='Nhập giá sản phẩm'\r\n                                helperText={touched.price ? errors.price : \"\"}\r\n                                error={touched.price ? Boolean(errors.price) : false}\r\n                            />\r\n                        </FormControl>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <FormLabel classes={{ root: classes.formLabel }}>Chi Tiết Sản Phẩm</FormLabel>\r\n                            <ReactQuill theme=\"snow\" value={values.productDetail} onChange={(e: any) => {\r\n                                setFieldValue('productDetail', e);\r\n                            }} />\r\n                            {/* <TextField\r\n                                fullWidth\r\n                                name='productDetail'\r\n                                value={values.productDetail}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                placeholder='Nhập chi tiết sản phẩm'\r\n                                helperText={touched.productDetail ? errors.productDetail : \"\"}\r\n                                error={touched.productDetail ? Boolean(errors.productDetail) : false}\r\n                            /> */}\r\n                        </FormControl>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                            <FormLabel classes={{ root: classes.formLabel }}>Mô Tả Sản Phẩm</FormLabel>\r\n                            <ReactQuill theme=\"snow\" value={values.productDescription} onChange={(e: any) => {\r\n                                setFieldValue('productDescription', e);\r\n                            }} />\r\n                            {/* <TextField\r\n                                fullWidth\r\n                                name='productDescription'\r\n                                value={values.productDescription}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                placeholder='Nhập mô tả sản phẩm'\r\n                                helperText={touched.productDescription ? errors.productDescription : \"\"}\r\n                                error={touched.productDescription ? Boolean(errors.productDescription) : false}\r\n                            /> */}\r\n                        </FormControl>\r\n                        <FormControl fullWidth className={classes.formControl}>\r\n                                <FormLabel classes={{ root: classes.formLabel }}>Hình ảnh</FormLabel>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    name='image'\r\n                                    type='file'\r\n                                    onChange={(e: any) => {\r\n                                        setFieldValue('image', e.target.files[0]);\r\n                                    }}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                            </FormControl>\r\n                        <Button\r\n                            disableRipple\r\n                            style={{ backgroundColor: \"black\", color: \"white\" }}\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            size='small'\r\n                            className={classes.btnLogin}\r\n                            disabled={isSubmitting}\r\n                        >\r\n                            {isSubmitting ? <CircularProgress size='1rem' /> : \"Cập nhật sản phẩm\"}\r\n                        </Button>\r\n                    </Box>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\data.tsx",[],["993","994"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\LoaiSanPham1.tsx",["995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\LoaiSanPham2.tsx",["1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ImageData.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ImageSlider.tsx",["1023","1024","1025","1026","1027"],"import React, { useEffect, useState } from 'react';\r\nimport  './ImageSlider.css';\r\n\r\nconst ImageSlider = (props:any) => {\r\n    const SliderProperty = {\r\n        ImageNo: '',\r\n        ImageName: '',\r\n        ImageSrc: ''\r\n    }\r\n\r\n    const [sliderProperty, setSliderProperty] = useState(SliderProperty);\r\n\r\n    const { ImageNo, ImageName, ImageSrc } = sliderProperty;\r\n\r\n    const [count, setCount] = useState(0);\r\n\r\n\r\n    const [animationCls, setAnimationCls] = useState('displayBlock fade');\r\n\r\n    const PreClick = () => {\r\n\r\n        setAnimationCls(() => ('displayNone fade'));\r\n        const myTimeout = setTimeout(() => {\r\n            setAnimationCls('displayBlock fade')\r\n        }, 100);\r\n\r\n        if (count > 0) {\r\n            setCount((preCount) => preCount - 1);  \r\n        }\r\n\r\n        if (count === 0) {\r\n            setCount(props.ImageData.length-1);\r\n        }\r\n\r\n    };\r\n\r\n    const NextClick = () => {\r\n\r\n        setAnimationCls(() => ('displayNone fade'));\r\n        const myTimeout = setTimeout(() => {\r\n            setAnimationCls('displayBlock fade')\r\n        }, 100);\r\n\r\n        if (count <= props.ImageData.length - 2) {\r\n            setCount((preCount) => preCount + 1);           \r\n        }\r\n\r\n        if (count === props.ImageData.length-1) {\r\n            setCount(0);\r\n        }\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        setSliderProperty((previous) => ({ ...previous, ImageNo: props.ImageData[count].ImageNo, ImageName: props.ImageData[count].ImageName, ImageSrc: props.ImageData[count].ImageSrc }));\r\n\r\n    }, [count]);\r\n    return (\r\n        <>\r\n            <div className='slideshow-container '>\r\n\r\n\r\n                <div className={animationCls}>\r\n                    <img src={ImageSrc} style={{ width: '100%', height: '100%' }} alt=\"Img\" />\r\n                </div>\r\n\r\n                <button className=\"prev\" onClick={PreClick}>❮</button>\r\n                <button className=\"next\" onClick={NextClick}>❯</button>\r\n            </div>\r\n\r\n\r\n            </>\r\n\r\n        );\r\n};\r\n\r\nexport default ImageSlider;","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\DetailSanPham.tsx",["1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\City.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\AddCity.tsx",["1046"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ICity } from \"../../redux/types/city\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\n\r\nimport { addCity, getCity } from \"../../redux/actions/admin\";\r\n\r\nimport { Box, Container, FormControl, FormLabel, TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n    },\r\n    btnRegister: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    checkboxWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1.5, 0),\r\n        textAlign: 'left',\r\n        fontSize: '13px',\r\n        \"& .MuiInputBase-root\": {\r\n            \"& fieldset\": {\r\n                borderRadius: \"10px\",\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\ninterface IInitialValues {\r\n    nameCity: string;\r\n}\r\n\r\nconst AddCity: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ADMIN = \"640cbf0573094a5e2e001859\";\r\n\r\n    const [cities, setCities] = React.useState<ICity[]>([]);\r\n    const City = useSelector((state: RootState) => state.admin);\r\n\r\n    const initialValues: IInitialValues = {\r\n        nameCity: \"\",\r\n    };\r\n\r\n    const onHandleSubmit = (values: IInitialValues, { setSubmitting }: any) => {\r\n        dispatch(addCity({ ...values, role: ADMIN }, setSubmitting))\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        nameCity: Yup.string().required(\"Invalid nameCity!\"),\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getCity());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setCities(() => City?.cities?.filter((city: any) => city.nameCity));\r\n    }, [City]);\r\n\r\n    return (\r\n        <Container style={{ maxWidth: 600 }}>\r\n\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onHandleSubmit}\r\n            >\r\n                {({ isSubmitting, handleSubmit, values, handleChange, handleBlur, errors, touched }) => (\r\n                    <form noValidate onSubmit={handleSubmit}>\r\n                        <Box display={\"flex\"}\r\n                            flexDirection={'column'}\r\n                            justifyContent={'center'}\r\n                            alignItems={'center'}\r\n                            style={{ backgroundColor: 'white', padding: '40px 0px', borderRadius: '20px' }}>\r\n\r\n                            <Typography style={{ fontWeight: \"bold\", fontSize: \"18px\", margin: 20 }} >\r\n                                Thêm thành phố\r\n                            </Typography>\r\n\r\n                            <FormControl style={{ marginTop: 2 }} >\r\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: 2 }}>\r\n                                    Tên thành phố\r\n                                </FormLabel>\r\n                                <TextField\r\n                                    style={{ width: 300, }}\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    variant={'outlined'}\r\n                                    name='nameCity'\r\n                                    value={values.nameCity}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập tên thành phố muốn thêm'\r\n                                    inputProps={{\r\n                                        style: {\r\n                                            fontSize: '12px',\r\n                                        }\r\n                                    }}\r\n                                    helperText={touched.nameCity ? errors.nameCity : \"\"}\r\n                                    error={touched.nameCity ? Boolean(errors.nameCity) : false} />\r\n\r\n                            </FormControl>\r\n                            <Box marginTop={2}>\r\n                                <Button\r\n                                    type='submit'\r\n                                    disabled={isSubmitting}\r\n                                    style={{\r\n                                        color: \"rgb(33, 43, 54)\",\r\n                                        height: \"34px\",\r\n                                        width: \"120px\",\r\n                                        fontSize: \"12px\",\r\n                                        borderRadius: \"4px\",\r\n                                        fontWeight: 500,\r\n                                        textTransform: \"capitalize\",\r\n                                        border: '1px solid rgb(33, 43, 54)',\r\n                                        marginRight: 10\r\n                                    }}\r\n                                >\r\n                                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Thêm Thành Phố\"}\r\n                                </Button>\r\n\r\n                                <Button style={{\r\n                                    color: \"#FF6969\",\r\n                                    height: \"34px\",\r\n                                    width: \"120px\",\r\n                                    fontSize: \"12px\",\r\n                                    fontWeight: 500,\r\n                                    borderRadius: \"4px\",\r\n                                    textTransform: \"capitalize\",\r\n                                    border: '1px solid #FF6969',\r\n\r\n                                }}\r\n                                    onClick={history.goBack}\r\n                                >Quay lại</Button>\r\n                            </Box>\r\n\r\n\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n\r\n\r\n\r\n\r\n        </Container >\r\n\r\n    );\r\n};\r\n\r\nexport default AddCity;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\UpdateCity.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Order.tsx",["1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Cart.tsx",["1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormCity.tsx",["1079"],"import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { FormControl, FormLabel, Select } from \"@mui/material\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nimport { getCity } from \"../../redux/actions/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { ICity } from \"../../redux/types/city\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0, 0),\r\n        width: 500,\r\n        height: 60,\r\n    },\r\n    placeholder: {\r\n        color: \"#aaa\"\r\n    },\r\n    selectStyle: {\r\n        fontSize: '13px',\r\n        marginBottom: '28px',\r\n        marginTop: 10,\r\n        \"& fieldset\": {\r\n            borderRadius: \"10px\",\r\n        },\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    isCity?: boolean;\r\n};\r\n\r\ninterface IInitialValues {\r\n    city: any;\r\n}\r\n\r\n// const Placeholder = ({ children }: { children: any }) => {\r\n//     const classes = useStyles();\r\n//     return <div className={classes.placeholder}>{children}</div>;\r\n// };\r\n\r\nconst FormCity: React.FC<Props> = ({ isCity = false }): JSX.Element => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const { values, handleChange, handleBlur, touched, errors } =\r\n        useFormikContext<IInitialValues>();\r\n\r\n    const [cities, setCities] = React.useState<ICity[]>([]);\r\n    const City = useSelector((state: RootState) => state.user);\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getCity());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setCities(() => City?.cities?.filter((city: any) => city.nameCity));\r\n    }, [City]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {isCity ? (\r\n                <FormControl className={classes.formControl}>\r\n                    <Select\r\n                        name=\"city._id\"\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"handle-city\"\r\n                        value={values.city._id}\r\n                        defaultValue={'64a67186e2b288d3b57ee1c0'}\r\n                        className={classes.selectStyle}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={touched.city ? Boolean(errors.city) : false}\r\n                        variant={'outlined'}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    fontSize: 10,\r\n                                    height:\"200px\"\r\n                                },\r\n                            },\r\n                        }}\r\n                    >\r\n                        {cities?.map((city: any) => (\r\n                            <MenuItem value={city._id} key={city._id}>\r\n                                {city.nameCity}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            ) : null}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormCity;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\reducers\\user.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\components\\routing\\PrivateRoute.tsx",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\redux\\actions\\user.ts",[],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\admin\\OrderCart.tsx",["1080","1081"],"import * as React from \"react\";\r\nimport { styled, alpha } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCart, deleteCart } from \"../../redux/actions/admin\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { ICart } from \"../../redux/types/cart\";\r\nimport { Box, TableSortLabel, Toolbar, OutlinedInput, InputAdornment, Card, Container, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography, Divider, Button } from \"@mui/material\";\r\n// @mui\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\r\nimport { visuallyHidden } from '@mui/utils';\r\n\r\nconst StyledRoot = styled(Toolbar)(({ theme }) => ({\r\n    height: 96,\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    padding: theme.spacing(0, 1, 0, 3),\r\n}));\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    transition: theme.transitions.create(['box-shadow', 'width'], {\r\n        easing: theme.transitions.easing.easeInOut,\r\n        duration: theme.transitions.duration.shorter,\r\n    }),\r\n    '&.Mui-focused': {\r\n        width: 320,\r\n    },\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n    },\r\n}));\r\n\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getComparator<Key extends keyof any>(\r\n    order: Order,\r\n    orderBy: Key,\r\n): (\r\n    a: { [key in Key]: number | string },\r\n    b: { [key in Key]: number | string },\r\n) => number {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) {\r\n            return order;\r\n        }\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\ninterface DataUser {\r\n    _id: keyof ICart;\r\n    date: keyof ICart;\r\n    fullName: keyof ICart;\r\n    nameCompany: keyof ICart;\r\n    address: keyof ICart;\r\n    city: keyof ICart;\r\n    sdt: keyof ICart;\r\n    email: keyof ICart;\r\n    note: keyof ICart;\r\n    product: keyof ICart;\r\n    delete: keyof ICart;\r\n}\r\n\r\ninterface HeadCell {\r\n    _id: keyof DataUser;\r\n    label: string;\r\n    numeric: boolean;\r\n}\r\n\r\nconst headCells: HeadCell[] = [\r\n    {\r\n        _id: 'date',\r\n        numeric: false,\r\n        label: 'Ngày Đặt Hàng',\r\n    },\r\n    {\r\n        _id: 'fullName',\r\n        numeric: false,\r\n        label: 'Tên Khách Hàng',\r\n    },\r\n    {\r\n        _id: 'nameCompany',\r\n        numeric: false,\r\n        label: 'Tên Công Ty',\r\n    },\r\n    {\r\n        _id: 'address',\r\n        numeric: false,\r\n        label: 'Địa Chỉ',\r\n    },\r\n    {\r\n        _id: 'city',\r\n        numeric: false,\r\n        label: 'Thành Phố',\r\n    },\r\n    {\r\n        _id: 'sdt',\r\n        numeric: false,\r\n        label: 'SĐT',\r\n    },\r\n    {\r\n        _id: 'email',\r\n        numeric: false,\r\n        label: 'Email',\r\n    },\r\n    {\r\n        _id: 'note',\r\n        numeric: false,\r\n        label: 'Ghi Chú',\r\n    },\r\n    {\r\n        _id: 'product',\r\n        numeric: false,\r\n        label: 'Sản Phẩm',\r\n    },\r\n    {\r\n        _id: 'delete',\r\n        numeric: false,\r\n        label: '',\r\n    },\r\n];\r\n\r\n\r\ninterface EnhancedTableProps {\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof DataUser) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const { order, orderBy, onRequestSort } =\r\n        props;\r\n    const createSortHandler =\r\n        (property: keyof DataUser) => (event: React.MouseEvent<unknown>) => {\r\n            onRequestSort(event, property);\r\n        };\r\n    return (\r\n        <TableHead style={{ backgroundColor: \"#f4f5f5\" }}\r\n            sx={{\r\n                '& th:first-child': {\r\n                    borderRadius: '1em 0 0 0'\r\n                },\r\n                '& th:last-child': {\r\n                    borderRadius: '0 1em 0 0'\r\n                }\r\n            }}>\r\n            <TableRow>\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell._id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        style={{ fontSize: '13px' }}\r\n                        sortDirection={orderBy === headCell._id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell._id}\r\n                            direction={orderBy === headCell._id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell._id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell._id ? (\r\n                                <Box component=\"span\" sx={visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </Box>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nconst OrderCart: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [carts, setCarts] = React.useState<ICart[]>([]);\r\n    const admin = useSelector((state: RootState) => state.admin);\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState([null]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<keyof DataUser>('date');\r\n\r\n\r\n\r\n    const handleRequestSort = (\r\n        event: React.MouseEvent<unknown>,\r\n        property: keyof DataUser,\r\n    ) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: any) => {\r\n        setPage(0);\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n    };\r\n\r\n    const handleChangePage = (event: any, newPage: any) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        setPage(0);\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = admin?.carts?.filter((cart: any) => {\r\n                return cart.city.nameCity.toLowerCase().startsWith(keyword.toLowerCase()) || cart.nameCompany.toLowerCase().startsWith(keyword.toLowerCase()) || cart.fullName.toLowerCase().startsWith(keyword.toLowerCase()) ;\r\n            });\r\n            setCarts(results);\r\n        } else {\r\n            setCarts(() => admin?.carts?.filter((cart: any) => cart.nameCompany));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    const sortCart = stableSort(carts, getComparator(order, orderBy));\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getCart());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setCarts(() => admin?.carts?.filter((cart: any) => cart.nameCompany));\r\n    }, [admin]);\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Khách Hàng\";\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <>\r\n            <Container>\r\n                <Card style={{ padding: \"20px\", marginTop: \"20px\", paddingBottom: \"40px\", borderRadius: \"22px\" }}>\r\n                    <StyledRoot\r\n                        style={{ display: \"flex\", flexDirection: \"row\" }}\r\n                        sx={{\r\n                            color: 'primary.main',\r\n                            bgcolor: 'primary.lighter',\r\n                        }}\r\n                    >\r\n                        <Box>\r\n                            <Typography gutterBottom style={{ color: \"black\", fontSize: \"22px\" }}>\r\n                                Danh Sách Khách Hàng\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box style={{ display: \"flex\", flexDirection: \"row\" }} >\r\n                            <Box style={{ marginRight: \"14px\" }}>\r\n                                <StyledSearch\r\n                                    style={{ borderRadius: '30px', fontSize: '13px', height: \"48px\" }}\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" sx={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'text.disabled' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                    <TableContainer>\r\n                        <Table >\r\n                            <EnhancedTableHead\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                            />\r\n                            {carts && carts.length > 0 ? (\r\n                                <TableBody>\r\n                                    {sortCart.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((cart: any, index) =>\r\n                                        <TableRow key={cart._id}>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.date}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.fullName}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.nameCompany}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.address}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.city.nameCity}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.sdt}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.email}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.note}\r\n                                            </TableCell>\r\n                                            <TableCell align=\"left\" sx={{ fontSize: '12px' }}>\r\n                                                {cart.product.map((product: any) =>\r\n                                                    <Box>\r\n                                                        <Box>\r\n                                                            <Typography style={{ fontWeight: \"bold\", fontSize: \"14px\" }}>Tên sản phẩm: </Typography>{product.nameProduct}\r\n                                                        </Box>\r\n                                                        <Box>\r\n                                                            <Typography style={{ fontWeight: \"bold\", fontSize: \"14px\" }}>Loại sản phẩm: </Typography> {product.nameTypeProduct}\r\n                                                        </Box>\r\n                                                        <Box>\r\n                                                            <Typography style={{ fontWeight: \"bold\", fontSize: \"14px\" }}>Đơn giá: </Typography> {new Intl.NumberFormat('de-DE').format(product.price)} VNĐ\r\n                                                        </Box>\r\n                                                        <Box>\r\n                                                            <Typography style={{ fontWeight: \"bold\", fontSize: \"14px\" }}>Số lượng: </Typography> {product.quantity}\r\n                                                        </Box>\r\n                                                        <Box>\r\n                                                            <Typography style={{ fontWeight: \"bold\", fontSize: \"14px\" }}>Thành tiền: </Typography> {new Intl.NumberFormat('de-DE').format(product.total)} VNĐ\r\n                                                        </Box>\r\n                                                        <Divider style={{backgroundColor:\"black\", height:\"2px\"}} />\r\n                                                    </Box>\r\n                                                )}\r\n                                                <Box display={'flex'} flexDirection={'row'} sx={{marginTop:\"10px\"}}>\r\n                                                    <Box sx={{ fontWeight: \"bold\", fontSize: \"14px\", color:\"#0066BF\" }}>Tổng tiền: </Box> \r\n                                                    <Box flexGrow={1}/>\r\n                                                    <Box sx={{marginTop:\"2px\", fontWeight: \"bold\"}}>\r\n                                                         {new Intl.NumberFormat('de-DE').format(cart.product.map((product: any) => product.total).reduce((a: any, b: any) => a + b))} VNĐ\r\n                                                    </Box>\r\n                                                </Box>\r\n                                            </TableCell>\r\n                                            <TableCell >\r\n                                                <Button style={{ color: \"red\" }} onClick={(e) => dispatch(deleteCart(cart._id))} >\r\n                                                    <DeleteForeverIcon style={{ width: \"16px\" }} />\r\n                                                </Button>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )}\r\n\r\n                                    <TableRow>\r\n                                        <TablePagination\r\n                                            style={{ fontSize: \"12px\" }}\r\n                                            sx={{\r\n                                                '& .MuiTablePagination-selectLabel': {\r\n                                                    fontSize: \"12px\"\r\n                                                },\r\n                                                '& .MuiTablePagination-selectIcon': {\r\n                                                    width: \"16px\"\r\n                                                },\r\n                                                '& .MuiInputBase-root': {\r\n                                                    fontSize: \"12px\"\r\n                                                },\r\n                                                '& .MuiTablePagination-displayedRows': {\r\n                                                    fontSize: \"12px\"\r\n                                                },\r\n                                                '& .MuiSvgIcon-root': {\r\n                                                    fontSize: \"16px\"\r\n                                                },\r\n                                            }}\r\n                                            rowsPerPageOptions={[5, 10, 25, 70]}\r\n                                            labelRowsPerPage={\"Số lượng hàng:\"}\r\n                                            count={carts.length}\r\n                                            rowsPerPage={rowsPerPage}\r\n                                            page={page}\r\n                                            onPageChange={handleChangePage}\r\n                                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                                            SelectProps={{\r\n                                                MenuProps: {\r\n                                                    sx: {\r\n                                                        \"&& .MuiTablePagination-menuItem\": {\r\n                                                            fontSize: \"12px\"\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            ) : (\r\n                                <TableBody>\r\n                                    <TableRow>\r\n                                        <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                                            <Typography variant=\"h6\" paragraph>\r\n                                                Không tồn tại khách hàng\r\n                                            </Typography>\r\n\r\n                                            <Typography variant=\"body2\">\r\n                                                Không tìm thấy kết quả &nbsp;\r\n                                                <strong>&quot;{filterName}&quot;</strong>.\r\n                                            </Typography>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                </TableBody>\r\n                            )}\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderCart;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\LoaiSanPham.tsx",["1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachThanhToan.tsx",["1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104","1105","1106","1107","1108"],"import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textfield: {\r\n        '& .MuiSelect-select': {\r\n            color: 'black', fontSize: '12px'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '20px', paddingRight: '2px'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderRadius: '20px',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: \"1px solid black\",\r\n            }\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& fieldset': {\r\n            borderRadius: '30px',\r\n            height: \"46px\"\r\n        },\r\n\r\n    },\r\n    hoverDetail: {\r\n        '&: hover': {\r\n            color: 'green',\r\n        },\r\n    },\r\n    typeProduct: {\r\n        border: \"2px solid #0066BF\"\r\n    },\r\n    nameTypeProduct: {\r\n        backgroundColor: \"#0066BF\",\r\n        fontSize: \"16px\",\r\n        fontFamily: \"Roboto\",\r\n        color: \"white\",\r\n        padding: \"10px 0px\"\r\n    },\r\n}))\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst ChinhSachThanhToan: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const classes = useStyles();\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách thanh toán\";\r\n    }, []);\r\n\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0\" }}>CHÍNH SÁCH THANH TOÁN</Box>\r\n                            <Box>\r\n                                <Box sx={{ lineHeight: 1.5 }}>\r\n                                    <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> được xây dựng nhằm hỗ trợ tối đa cho khách hàng có nhu cầu đặt hàng hoá trực tuyến. Không chỉ cung cấp đầy đủ thông tin sản phẩm khách hàng quan tâm, <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> còn tư vấn thêm nhiều lựa chọn sản phẩm phù hợp nhu cầu khách hàng.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    Khi có nhu cầu mua hàng trên <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span>, khách hàng nên thực hiện theo các bước sau đây:\r\n                                </Box>\r\n                                <Box>\r\n                                    1. Tìm kiếm, tham khảo thông tin sản phẩm, giá, chính sách hỗ trợ khách hàng của các sản phẩm do <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> cung cấp, lựa chọn sản phẩm thích hợp để mua sản phẩm.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    2. Sau khi chọn được sản phẩm phù hợp nhu cầu, khách hàng điền thông tin vào phần cung cấp thông tin liên lạc và thông tin hàng hóa sau đó nhấn nút gửi thông tin.\r\n                                </Box>\r\n                                <Box>\r\n                                    3. Dựa trên thông tin khách hàng cu cấp khi đặt hàng trên <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span>, nhân viên sẽ liên hệ với khách hàng để xác minh, giải thích, làm rõ thông tin yêu cầu.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    4. Khách hàng lựa chọn phương thức thanh toán giá trị sản phẩm (Mua trực tiếp, chuyển khoản hoặc thanh toán qua ngân hàng, hoặc thanh toán sau khi nhận hàng).\r\n                                </Box>\r\n                                <Box>\r\n                                    5. Khách hàng nhận sản phẩm.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    6. Thắc mắc, khiếu nại.\r\n                                </Box>\r\n                                <Box>\r\n                                    - Khách hàng ở Tp. Hồ Chí Minh có thể đến tận nơi mua hàng, hoặc cung cấp địa chỉ để nhân viên giao hàng tận nơi.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Đối với các khách hàng ở xa, chỉ cần cung cấp địa chỉ, cửa hàng sẽ giao hàng tận tay quý khách qua đường bưu điện hoặc dịch vụ chuyển phát.\r\n                                </Box>\r\n                                <Box sx={{ lineHeight: 1.5, marginBottom:\"30px\" }}>\r\n                                    - Người mua nên đặt mua hàng tại website chính thức <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> để đảm bảo an toàn cũng như bảo vệ quyền lợi của mình. Giao dịch trên website bán hàng, <span>Nangluongbinhminh.vn</span> tôn trọng và nghiêm túc thực hiện các quy định của pháp luật về bảo vệ quyền lợi của người tiêu dùng. Vì vậy, các sản phẩm đăng bán trên <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> phải được cung cấp thông tin một cách đầy đủ, chính xác, trung thực và chi tiết. Các thông tin liên quan đến sản phẩm hàng hóa, dịch vụ, hậu mãi phải được cung cấp cho khách hàng hiểu rõ khi đặt mua hàng.\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHÍNH SÁCH THANH TOÁN</Box>\r\n                    <Box>\r\n                        <Box sx={{ lineHeight: 1.5 }}>\r\n                            <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> được xây dựng nhằm hỗ trợ tối đa cho khách hàng có nhu cầu đặt hàng hoá trực tuyến. Không chỉ cung cấp đầy đủ thông tin sản phẩm khách hàng quan tâm, <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> còn tư vấn thêm nhiều lựa chọn sản phẩm phù hợp nhu cầu khách hàng.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            Khi có nhu cầu mua hàng trên <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span>, khách hàng nên thực hiện theo các bước sau đây:\r\n                        </Box>\r\n                        <Box>\r\n                            1. Tìm kiếm, tham khảo thông tin sản phẩm, giá, chính sách hỗ trợ khách hàng của các sản phẩm do <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> cung cấp, lựa chọn sản phẩm thích hợp để mua sản phẩm.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            2. Sau khi chọn được sản phẩm phù hợp nhu cầu, khách hàng điền thông tin vào phần cung cấp thông tin liên lạc và thông tin hàng hóa sau đó nhấn nút gửi thông tin.\r\n                        </Box>\r\n                        <Box>\r\n                            3. Dựa trên thông tin khách hàng cu cấp khi đặt hàng trên <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span>, nhân viên sẽ liên hệ với khách hàng để xác minh, giải thích, làm rõ thông tin yêu cầu.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            4. Khách hàng lựa chọn phương thức thanh toán giá trị sản phẩm (Mua trực tiếp, chuyển khoản hoặc thanh toán qua ngân hàng, hoặc thanh toán sau khi nhận hàng).\r\n                        </Box>\r\n                        <Box>\r\n                            5. Khách hàng nhận sản phẩm.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            6. Thắc mắc, khiếu nại.\r\n                        </Box>\r\n                        <Box>\r\n                            - Khách hàng ở Tp. Hồ Chí Minh có thể đến tận nơi mua hàng, hoặc cung cấp địa chỉ để nhân viên giao hàng tận nơi.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Đối với các khách hàng ở xa, chỉ cần cung cấp địa chỉ, cửa hàng sẽ giao hàng tận tay quý khách qua đường bưu điện hoặc dịch vụ chuyển phát.\r\n                        </Box>\r\n                        <Box sx={{ lineHeight: 1.5 }}>\r\n                            - Người mua nên đặt mua hàng tại website chính thức <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> để đảm bảo an toàn cũng như bảo vệ quyền lợi của mình. Giao dịch trên website bán hàng, <span>Nangluongbinhminh.vn</span> tôn trọng và nghiêm túc thực hiện các quy định của pháp luật về bảo vệ quyền lợi của người tiêu dùng. Vì vậy, các sản phẩm đăng bán trên <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> phải được cung cấp thông tin một cách đầy đủ, chính xác, trung thực và chi tiết. Các thông tin liên quan đến sản phẩm hàng hóa, dịch vụ, hậu mãi phải được cung cấp cho khách hàng hiểu rõ khi đặt mua hàng.\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChinhSachThanhToan;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachGiaoHang.tsx",["1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123"],"import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst ChinhSachGiaoHang: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách giao hàng\";\r\n    }, []);\r\n\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0\" }}>CHÍNH SÁCH GIAO HÀNG</Box>\r\n                            <Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    <span style={{ fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> cung cấp dịch vụ giao hàng toàn quốc.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                                    1. Thời gian và khung giờ giao hàng:\r\n                                </Box>\r\n                                <Box>\r\n                                    Thời gian giao hàng: <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> hỗ trợ giao hàng từ thứ 2 đến thứ 7 hàng tuần.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    Khung giờ giao hàng: từ 8:00 đến 17:00.\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    2. Nhận hàng\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    Các trường hợp sau đây nằm ngoài phạm vi cam kết của <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> về giao hàng không đúng hẹn:\r\n                                </Box>\r\n                                <Box>\r\n                                    + Quý khách không cung cấp chính xác và đầy đủ thông tin trong quá trình đặt hàng.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                                    + Nangluongbinhminh.vn nhiều lần liên hệ Quý khách bằng điện thoại hoặc email nhưng không nhận được phản hồi.\r\n                                </Box>\r\n                                <Box>\r\n                                    + Thời gian giao đến địa chỉ giao hàng đã được ấn định trước với Quý khách nhưng không sẵn sàng nhận hàng.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    + Những trường hợp bất khả kháng như thiên tai, lũ lụt, tai nạn giao thông… hoặc nhưng sự cố xảy ra ảnh hưởng đến quá trình giao nhận\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    2. Phí vận chuyển:\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    Đối với những đơn hàng có phát sinh phí vận chuyển, phí này sẽ phụ thuộc vào trọng lượng và thể tích khối của từng sản phẩm.\r\n                                </Box>\r\n                                <Box sx={{marginBottom:\"30px\"}}>\r\n                                    Đối với các đơn hàng yêu cầu vận chuyển hỏa tốc, chi phí thêm vào được tính theo cước vận chuyển của đại lý.\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHÍNH SÁCH GIAO HÀNG</Box>\r\n                    <Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            <span style={{ fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> cung cấp dịch vụ giao hàng toàn quốc.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                            1. Thời gian và khung giờ giao hàng:\r\n                        </Box>\r\n                        <Box>\r\n                            Thời gian giao hàng: <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> hỗ trợ giao hàng từ thứ 2 đến thứ 7 hàng tuần.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            Khung giờ giao hàng: từ 8:00 đến 17:00.\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            2. Nhận hàng\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            Các trường hợp sau đây nằm ngoài phạm vi cam kết của <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> về giao hàng không đúng hẹn:\r\n                        </Box>\r\n                        <Box>\r\n                            + Quý khách không cung cấp chính xác và đầy đủ thông tin trong quá trình đặt hàng.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                            + Nangluongbinhminh.vn nhiều lần liên hệ Quý khách bằng điện thoại hoặc email nhưng không nhận được phản hồi.\r\n                        </Box>\r\n                        <Box>\r\n                            + Thời gian giao đến địa chỉ giao hàng đã được ấn định trước với Quý khách nhưng không sẵn sàng nhận hàng.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            + Những trường hợp bất khả kháng như thiên tai, lũ lụt, tai nạn giao thông… hoặc nhưng sự cố xảy ra ảnh hưởng đến quá trình giao nhận\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            2. Phí vận chuyển:\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            Đối với những đơn hàng có phát sinh phí vận chuyển, phí này sẽ phụ thuộc vào trọng lượng và thể tích khối của từng sản phẩm.\r\n                        </Box>\r\n                        <Box>\r\n                            Đối với các đơn hàng yêu cầu vận chuyển hỏa tốc, chi phí thêm vào được tính theo cước vận chuyển của đại lý.\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChinhSachGiaoHang;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachBaoHanh.tsx",["1124","1125","1126","1127","1128","1129","1130","1131","1132","1133","1134","1135","1136"],"import React from 'react';\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst ChinhSachBaoHanh: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách bảo hành\";\r\n    }, []);\r\n\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0\" }}>CHÍNH SÁCH BẢO HÀNH</Box>\r\n                            <Box>\r\n                                <Box sx={{ lineHeight: 1.5 }}>\r\n                                    Trong thời gian sử dụng nếu gặp bất kỳ trục trặc nào hoặc lỗi do người sử dụng, khách hàng có thể liên lạc trực tiếp với bộ phận Chăm sóc khách hàng của <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> để được trợ giúp.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                                    I/ Bảo hành:\r\n                                </Box>\r\n                                <Box>\r\n                                    Bảo hành sản phẩm là: khắc phục những lỗi hỏng hóc, sự cố kỹ thuật xảy ra do lỗi của nhà sản xuất.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                                    II/ Quy định về bảo hành:\r\n                                </Box>\r\n                                <Box>\r\n                                    - Sản phẩm được bảo hành miễn phí nếu sản phẩm đó còn thời hạn bảo hành được tính kể từ ngày giao hàng.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Thời hạn bảo hành được ghi trên Phiếu Bảo hành và theo quy định của từng hãng sản xuất đối với tất cả các sự cố về mặt kỹ thuật.\r\n                                </Box>\r\n                                <Box>\r\n                                    - Có phiếu bảo hành và tem bảo hành của công ty trên sản phẩm.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                                    III/ Những trường hợp không được bảo hành:\r\n                                </Box>\r\n                                <Box>\r\n                                    - Sản phẩm đã quá thời hạn bảo hành ghi trên phiếu hoặc mất Phiếu Bảo hành.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Tem niêm phong bảo hành bị rách, vỡ, bị dán đè hoặc bị sửa đổi.\r\n                                </Box>\r\n                                <Box sx={{ lineHeight: 1.5 }}>\r\n                                    - Phiếu bảo hành không ghi rõ số Serial và ngày mua hàng.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Số máy trên sản phẩm không xác định được hoặc sai so với số máy được ghi trên phiếu bảo hành.\r\n                                </Box>\r\n                                <Box>\r\n                                    - Sản phẩm bị hư hỏng do tác động cơ học làm rơi, vỡ, va đập, trầy xước, móp méo, ẩm ướt, hoen rỉ, chảy nước hoặc do hỏa hoạn, thiên tai gây nên.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Sản phẩm có dấu hiệu hư hỏng do chuột bọ hoặc côn trùng xâm nhập.\r\n                                </Box>\r\n                                <Box>\r\n                                    - Sử dụng không đúng sách hướng dẫn, sử dụng sai điện áp quy định.\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Chưa thanh toán đầy đủ theo quy định\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    IV/ Bảo trì:\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0 30px 0\" }}>\r\n                                    Bảo trì, bảo dưỡng bao gồm: Bảo dưỡng sản phẩm định kỳ, thổi bụi lưới lọc, quét bụi bên trong, lau chùi sản phẩm, sửa chữa những hỏng hóc nhỏ có thể sửa được (không bao gồm thay thế thiết bị).Thời gian bảo trì bảo dưỡng tùy thuộc vào sự thỏa thuận giữa <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> và khách hàng.\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHÍNH SÁCH BẢO HÀNH</Box>\r\n                    <Box>\r\n                        <Box sx={{ lineHeight: 1.5 }}>\r\n                            Trong thời gian sử dụng nếu gặp bất kỳ trục trặc nào hoặc lỗi do người sử dụng, khách hàng có thể liên lạc trực tiếp với bộ phận Chăm sóc khách hàng của <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> để được trợ giúp.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                            I/ Bảo hành:\r\n                        </Box>\r\n                        <Box>\r\n                            Bảo hành sản phẩm là: khắc phục những lỗi hỏng hóc, sự cố kỹ thuật xảy ra do lỗi của nhà sản xuất.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                            II/ Quy định về bảo hành:\r\n                        </Box>\r\n                        <Box>\r\n                            - Sản phẩm được bảo hành miễn phí nếu sản phẩm đó còn thời hạn bảo hành được tính kể từ ngày giao hàng.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Thời hạn bảo hành được ghi trên Phiếu Bảo hành và theo quy định của từng hãng sản xuất đối với tất cả các sự cố về mặt kỹ thuật.\r\n                        </Box>\r\n                        <Box>\r\n                            - Có phiếu bảo hành và tem bảo hành của công ty trên sản phẩm.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}>\r\n                            III/ Những trường hợp không được bảo hành:\r\n                        </Box>\r\n                        <Box>\r\n                            - Sản phẩm đã quá thời hạn bảo hành ghi trên phiếu hoặc mất Phiếu Bảo hành.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Tem niêm phong bảo hành bị rách, vỡ, bị dán đè hoặc bị sửa đổi.\r\n                        </Box>\r\n                        <Box sx={{ lineHeight: 1.5 }}>\r\n                            - Phiếu bảo hành không ghi rõ số Serial và ngày mua hàng.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Số máy trên sản phẩm không xác định được hoặc sai so với số máy được ghi trên phiếu bảo hành.\r\n                        </Box>\r\n                        <Box>\r\n                            - Sản phẩm bị hư hỏng do tác động cơ học làm rơi, vỡ, va đập, trầy xước, móp méo, ẩm ướt, hoen rỉ, chảy nước hoặc do hỏa hoạn, thiên tai gây nên.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Sản phẩm có dấu hiệu hư hỏng do chuột bọ hoặc côn trùng xâm nhập.\r\n                        </Box>\r\n                        <Box>\r\n                            - Sử dụng không đúng sách hướng dẫn, sử dụng sai điện áp quy định.\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Chưa thanh toán đầy đủ theo quy định\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            IV/ Bảo trì:\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0 0 0\" }}>\r\n                            Bảo trì, bảo dưỡng bao gồm: Bảo dưỡng sản phẩm định kỳ, thổi bụi lưới lọc, quét bụi bên trong, lau chùi sản phẩm, sửa chữa những hỏng hóc nhỏ có thể sửa được (không bao gồm thay thế thiết bị).Thời gian bảo trì bảo dưỡng tùy thuộc vào sự thỏa thuận giữa <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> và khách hàng.\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChinhSachBaoHanh;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\ChinhSachBaoMat.tsx",["1137","1138","1139","1140","1141","1142","1143","1144","1145","1146","1147","1148","1149","1150"],"import React from 'react';\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst ChinhSachBaoMat: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    const handleClick = (id: any, index: any) => {\r\n        mapProductList.splice(index, 1);\r\n        localStorage.setItem('productList', JSON.stringify(mapProductList));\r\n        setLocalItems(() => mapProductList.filter((product: any) => product.id != id));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách bảo mật\";\r\n    }, []);\r\n\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0\" }}>CHÍNH SÁCH BẢO MẬT THÔNG TIN</Box>\r\n                            <Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    a) Mục đích thu thập thông tin cá nhân;\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Dùng để giao dịch, giao hàng với Khách hàng\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    b) Phạm vi sử dụng thông tin;\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Thông tin cá nhân thu thập được sẽ chỉ được sử dụng trong nội bộ công ty. <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> có thể công bố các thông tin cá nhân thu thập từ khách hàng cho bên thứ ba, như các đại lý của chúng tôi, các nhà cung cấp dịch vụ khác nhằm cung cấp dịch vụ tốt nhất cho khách hàng.\r\n                                </Box>\r\n                                <Box>\r\n                                    - Khi cần thiết, chúng tôi có thể sử dụng những thông tin này để liên hệ trực tiếp với khách hàng dưới các hình thức như: gửi thư ngỏ, đơn đặt hàng, thư cảm ơn, thông tin về khuyến mãi và dịch vụ mới…\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> sẽ nỗ lực để đảm bảo rằng các nhân viên, cán bộ, đại lý, tư vấn hoặc bên thứ ba nào được đề cập ở trên có liên quan đến việc thu thập và xử lý thông tin khách hàng sẽ nhận thức và thấu hiểu Chính sách bảo mật này.\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    c) Thời gian lưu trữ thông tin;\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - 1 năm\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    d) Những người hoặc tổ chức có thể được tiếp cận với thông tin đó;\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Bộ phận đóng hàng, giao hàng.\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    2. Phí vận chuyển:\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\" }}>\r\n                                    - Cơ quan chức năng khi có yêu cầu\r\n                                </Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>\r\n                                    đ) Địa chỉ của đơn vị thu thập và quản lý thông tin, bao gồm cách thức liên lạc để người tiêu dùng có thể hỏi về hoạt động thu thập, xử lý thông tin liên quan đến cá nhân mình;\r\n                                </Box>\r\n                                <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}> NĂNG LƯỢNG BÌNH MINH KHU VỰC PHÍA NAM</Box>\r\n                                <Box sx={{ fontWeight: \"bold\" }}>Điện thoại: 079.177.960</Box>\r\n                                <Box sx={{ fontWeight: \"bold\", marginBottom:\"30px\" }}>Email:nangluongbinhminh369@gmail.com</Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHÍNH SÁCH BẢO MẬT THÔNG TIN</Box>\r\n                    <Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            a) Mục đích thu thập thông tin cá nhân;\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Dùng để giao dịch, giao hàng với Khách hàng\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            b) Phạm vi sử dụng thông tin;\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Thông tin cá nhân thu thập được sẽ chỉ được sử dụng trong nội bộ công ty. <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> có thể công bố các thông tin cá nhân thu thập từ khách hàng cho bên thứ ba, như các đại lý của chúng tôi, các nhà cung cấp dịch vụ khác nhằm cung cấp dịch vụ tốt nhất cho khách hàng.\r\n                        </Box>\r\n                        <Box>\r\n                            - Khi cần thiết, chúng tôi có thể sử dụng những thông tin này để liên hệ trực tiếp với khách hàng dưới các hình thức như: gửi thư ngỏ, đơn đặt hàng, thư cảm ơn, thông tin về khuyến mãi và dịch vụ mới…\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - <span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Nangluongbinhminh.vn</span> sẽ nỗ lực để đảm bảo rằng các nhân viên, cán bộ, đại lý, tư vấn hoặc bên thứ ba nào được đề cập ở trên có liên quan đến việc thu thập và xử lý thông tin khách hàng sẽ nhận thức và thấu hiểu Chính sách bảo mật này.\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            c) Thời gian lưu trữ thông tin;\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - 1 năm\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            d) Những người hoặc tổ chức có thể được tiếp cận với thông tin đó;\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Bộ phận đóng hàng, giao hàng.\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            2. Phí vận chuyển:\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\" }}>\r\n                            - Cơ quan chức năng khi có yêu cầu\r\n                        </Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>\r\n                            đ) Địa chỉ của đơn vị thu thập và quản lý thông tin, bao gồm cách thức liên lạc để người tiêu dùng có thể hỏi về hoạt động thu thập, xử lý thông tin liên quan đến cá nhân mình;\r\n                        </Box>\r\n                        <Box sx={{ margin: \"15px 0\", fontWeight: \"bold\" }}> NĂNG LƯỢNG BÌNH MINH KHU VỰC PHÍA NAM</Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>Điện thoại: 079.177.960</Box>\r\n                        <Box sx={{ fontWeight: \"bold\" }}>Email:nangluongbinhminh369@gmail.com</Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ChinhSachBaoMat;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New1.tsx",["1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163"],"import React from 'react';\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst New1: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách thanh toán\";\r\n    }, []);\r\n\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0 40px 0\" }}>MÁY NƯỚC NÓNG NĂNG LƯỢNG MẶT TRỜI BÌNH MINH CÓ TỐT KHÔNG?</Box>\r\n                            <Box display={'flex'} margin={'auto'}>\r\n                                <img src=\"/new1.jpg\" style={{ width: \"360px\" }} alt=\"Ảnh NLMT\" />\r\n                            </Box>\r\n                            <Box sx={{ fontSize: 14, margin: \"25px 0\", lineHeight: 1.5 }}>\r\n                                Để lựa chọn bình năng lượng mặt trời Bình Minh có tốt tốt và hiệu quả là điều không dễ dàng chút nào. Với loại máy sử dụng nhiệt năng chuyển đổi thành điện năng để tạo ra nước nóng, giúp cung cấp nước ấm cho các nhằm mục đích thương mại hoặc phục vụ sinh hoạt gia đình, thì các tiêu chí dưới đây sẽ giúp bạn chọn ra máy năng lượng mặt trời lên hay không lên nhé.\r\n                            </Box>\r\n                            <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                                Máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                            </Box>\r\n                            <Box sx={{ margin: \"10px 0 25px 15px\" }}>\r\n                                <li>Máy nước nóng năng lượng mặt trời BÌNH MINH được  sản xuất trên dây chuyền công nghệ, máy móc thiết bị hiện đại của Nhật Bản.</li>\r\n                                <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Với dây chuyền sản xuất khép kín và hiện đại hàng đầu Việt Nam và hơn 10 năm kinh nghiệm trong việc nghiên cứu, luôn nỗ lực sáng tạo, đổi mới công nghệ sản xuất nhằm mang lại các sản phẩm và dịch vụ hiện đại, thân thiện với môi trường.</li>\r\n                                <li>Luôn cung cấp ra thị trường các sản phẩm chất lượng cao, giá thành cạnh tranh - Với tiêu chí: hàng Việt Nam chất lượng cao. Người Việt Nam dùng hàng Việt Nam.</li>\r\n                                <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Máy nước nóng năng lượng mặt trời BÌNH MINH sản xuất tại Việt Nam của công ty BÌNH MINH đã đạt nhiều chứng nhận và giải thưởng cao quý trong nước như : Hàng Việt Nam chất lượng cao, Cúp vàng ngành xây dựng, Thương hiệu uy tín chất lượng, … .</li>\r\n                                <li style={{ lineHeight: 1.5 }}>Ngoài các sản phẩm máy nước nóng năng lượng mặt trời dạng ống thủy tinh sản xuất tại Việt Nam –  và nhập khẩu và phân phối sản phẩm dạng máy nước nóng tấm phẳng được nhập khẩu từ Nhật Bản phù hợp cho các nhà biệt thự, sử dụng bơm chịu áp…  </li>\r\n                            </Box>\r\n                            <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                                Đánh giá linh kiện máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Chất liệu bồn bảo ôn Bình Minh</Box>\r\n                            <Box sx={{ marginLeft: \"15px\" }}>\r\n                                <li style={{ lineHeight: 1.5 }}>Đây là lớp bảo vệ bên ngoài thường xuyên phải chịu những tác động xấu của khí hậu nên đòi hỏi nó phải có chất lượng tốt, độ bền cao, không bị oxy hóa…chỉ như thế thì nó mới có thể chống chịu lại được những ảnh hưởng lớn mà thời tiết gây ra.</li>\r\n                                <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Do đó chất liệu mà vỏ bồn bảo ôn đang sử dụng cũng được quan tâm rất lớn, chất liệu được đánh giá là cao cấp nhất hiện nay chính là inox 304 hoặc hợp kim nhôm có phủ một lớp sơn tĩnh điện. Đây là 2 chất liệu cứng cáp có khả năng chống chịu va đập và ăn mòn cực tốt.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Lõi bồn bảo ôn Bình Minh</Box>\r\n                            <Box sx={{ marginLeft: \"15px\" }}>\r\n                                <li style={{ lineHeight: 1.5 }}>Cũng giống như lớp vỏ bồn bảo ôn thì lõi bồn bảo ôn cũng là bộ phận rất quan trọng, vì là bộ phận tiếp xúc trực tiếp với nước nên để đảm bảo an toàn cho sức khỏe người sử dụng thì bắt buộc phải sử dụng các chất liệu cao cấp, bền bỉ, không bị oxy hóa hay gỉ sét.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Lớp cách nhiệt Polyurethane Bình Minh</Box>\r\n                            <Box sx={{ marginLeft: \"15px\" }}>\r\n                                <li style={{ lineHeight: 1.5 }}>Đây là lớp cách nhiệt có nhiệm vụ chính là duy trì nhiệt độ nước nóng có bên trong bồn bảo ôn, lớp cách nhiệt này muốn hoạt động tốt thì yêu cầu tối thiểu độ dày phải là 5cm, có độ cứng lớn, bề mặt phải trơn mịn và không bị khuyết những lỗ nhỏ.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Ống thu nhiệt của Bình Minh</Box>\r\n                            <Box sx={{ marginLeft: \"15px\", lineHeight: 1.5 }}>\r\n                                <li >Khả năng hấp thụ nhiệt mạnh hay yếu của máy nước nóng năng lượng mặt trời đều phụ thuộc vào bộ phận ống thu nhiệt này. Ống thu nhiệt có hiệu suất hấp thụ nhiệt cao thì sẽ nâng cao tuổi thọ và độ bền cho máy.</li>\r\n                                <li style={{ margin: \"10px 0 25px 0\" }}>Nếu bạn tìm hiểu trên thị trường thì bạn sẽ thấy có 2 loại ống thu nhiệt phổ biến là ống lõi titan và ống lõi dầu, trong đó ống lõi titan được ưa chuộng nhiều hơn cả do có chất lượng ổn định và giá thành cũng khá rẻ.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                                Thông số kĩ thuật máy nước nóng năng lượng Bình Minh\r\n                            </Box>\r\n                            <Box sx={{ lineHeight: 1.5 }}>\r\n                                <li style={{ margin: \"10px 0\" }}>Võ bồn chứa làm bằng Inox 304-2B theo tiêu chuẩn an toàn vệ sinh thực phẩm.</li>\r\n                                <li>Ruột bồn là bằng Inox 304/BA.</li>\r\n                                <li style={{ margin: \"10px 0\" }}>Bồn chứa nước nóng được cách nhiệt với môi trường bên ngoài bởi lớp polymethane dày 5,5cm giữ nhiệt trong thời gian 96 giờ.</li>\r\n                                <li>Chân bồn được làm bằng Inox 201.</li>\r\n                                <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Hệ thống ống thu nhiệt 5 lớp colector (chân Không tím ) ϕ 58mm x 1800mm lõi đỏ được thiết kế đặc biệt để chuyển hóa quang năng thành nhiệt năng làm nóng nước trong bình đồng thời không làm thất thoát nhiệt ra ngoài.</li>\r\n                                <li>Nhiệt độ làm nóng nước trung bình 35-80ºC . Máy nước nóng có thể làm nóng nước trên 90ºC trong điều kiện thời gian hấp thụ nhiệt kéo dài.</li>\r\n                                <li style={{ margin: \"10px 0 25px 0\" }}> Trong điều kiện ít nắng, mưa nhiều thì nhiệt độ của nước được máy đun nóng khoảng 40ºC (theo khảo sát thí nghiệm ở khu vực phía nam) .</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                                Chế độ bảo hành bình nước nóng mặt trời có tốt không?\r\n                            </Box>\r\n                            <Box sx={{ lineHeight: 1.5 }}>\r\n                                <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Điểm mà mình đánh giá cao ở các dòng máy nước nóng năng lượng mặt trời bình minh chính là thời gian bảo hành lâu dài, hầu hết các sản phẩm đều có thời gian bảo hành trung bình từ 7 – 10 năm, một số thương hiệu cao cấp, máy còn có thời gian bảo hành lên đến 20 năm.</li>\r\n                                <li style={{ marginBottom: \"25px\", lineHeight: 1.5 }}>Với những thiết bị có thời gian bảo hành càng dài thì càng chứng minh được rằng nhà sản xuất máy nước nóng năng lượng mặt trời đang tự tin vào những sản phẩm mà họ bán ra trên thị trường. Từ đó, người tiêu dùng cũng hoàn toàn yên tâm về chất lượng cũng như độ bền của máy.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                                Giá máy nước nóng năng lượng mặt trời Bình Minh có ưu đãi tốt không?\r\n                            </Box>\r\n                            <Box sx={{ margin: \"10px 0\", lineHeight: 1.5 }}>\r\n                                Về phần giá của máy nước nóng năng lượng mặt trời Bình Minh hiện nay trên thị trường có mức giá tương đối cao, dao động từ 3 - 80 triệu đồng/máy. Dưới đây là mức giá cụ thể hơn của từng loại máy:\r\n                            </Box>\r\n                            <Box sx={{ lineHeight: 1.5 }}>\r\n                                <li style={{ margin: \"10px 0\" }}>Máy nước nóng năng lượng mặt trời ống dẫn chân không: Mức giá từ 5 - 10 triệu đồng. Đây cũng là loại máy nước nóng năng lượng mặt trời được người tiêu dùng ưa chuộng nhiều nhất.</li>\r\n                                <li>Máy nước nóng năng lượng mặt trời dạng ống dầu: Giá từ 8 - 20 triệu đồng</li>\r\n                                <li style={{ margin: \"10px 0\" }}>Máy nước nóng năng lượng mặt trời tấm phẳng (loại cao cấp): Giá dao động trong khoảng từ 20 - 80 triệu đồng.</li>\r\n                                <li style={{ marginBottom: \"25px\" }}>Tùy thuộc vào nhu cầu sử dụng và điều kiện tài chính của gia đình mà bạn quyết định xem đâu là sản phẩm phù hợp nhất với gia đình của bạn.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                                Có nên chọn máy nước nóng năng lượng mặt trời Bình Minh hay không?\r\n                            </Box>\r\n                            <Box sx={{ lineHeight: 1.5, listStyle: \"none\" }}>\r\n                                <li style={{ margin: \"10px 0\" }}>Đánh giá người tiêu dùng: 4 sao. Đây là sản phẩm được những nhà ven biển ưa chuộng, bởi chúng được làm từ vật liệu Inox 304 chống oxy hoá cao của khí hậu biển, bền lâu và không bị gỉ sét.</li>\r\n                                <li>Giá cả máy nước nóng Bình minh cực kỳ ưu đãi và cạnh tranh nhất hiện nay, với hàng trăm hệ thống phân phối ở các tỉnh thành cả nước..</li>\r\n                                <li style={{ margin: \"10px 0 30px 0\" }}>Bài viết trên đã cung cấp ngắn gọn thông tin về các dòng máy nước nóng năng lượng mặt trời Bình Minh tốt nhất, và uy tín trên thị trường hiện nay. Hy vọng bài viết này sẽ giúp bạn lựa chọn được một sản phẩm máy nước nóng năng lượng mặt trời loại nào tốt nhất và giá cả phải chăng nhé! </li>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        backgroundColor: \"white\",\r\n                                        color: \"#0066bf\", padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\", color: \"white\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>MÁY NƯỚC NÓNG NĂNG LƯỢNG MẶT TRỜI BÌNH MINH CÓ TỐT KHÔNG?</Box>\r\n                    <Box display={'flex'} margin={'auto'}>\r\n                        <img src=\"/new1.jpg\" style={{ width: \"726px\" }} alt=\"Ảnh NLMT\" />\r\n                    </Box>\r\n                    <Box sx={{ fontSize: 14, margin: \"25px 0\", lineHeight: 1.5 }}>\r\n                        Để lựa chọn bình năng lượng mặt trời Bình Minh có tốt tốt và hiệu quả là điều không dễ dàng chút nào. Với loại máy sử dụng nhiệt năng chuyển đổi thành điện năng để tạo ra nước nóng, giúp cung cấp nước ấm cho các nhằm mục đích thương mại hoặc phục vụ sinh hoạt gia đình, thì các tiêu chí dưới đây sẽ giúp bạn chọn ra máy năng lượng mặt trời lên hay không lên nhé.\r\n                    </Box>\r\n                    <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                        Máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                    </Box>\r\n                    <Box sx={{ margin: \"10px 0 25px 15px\" }}>\r\n                        <li>Máy nước nóng năng lượng mặt trời BÌNH MINH được  sản xuất trên dây chuyền công nghệ, máy móc thiết bị hiện đại của Nhật Bản.</li>\r\n                        <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Với dây chuyền sản xuất khép kín và hiện đại hàng đầu Việt Nam và hơn 10 năm kinh nghiệm trong việc nghiên cứu, luôn nỗ lực sáng tạo, đổi mới công nghệ sản xuất nhằm mang lại các sản phẩm và dịch vụ hiện đại, thân thiện với môi trường.</li>\r\n                        <li>Luôn cung cấp ra thị trường các sản phẩm chất lượng cao, giá thành cạnh tranh - Với tiêu chí: hàng Việt Nam chất lượng cao. Người Việt Nam dùng hàng Việt Nam.</li>\r\n                        <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Máy nước nóng năng lượng mặt trời BÌNH MINH sản xuất tại Việt Nam của công ty BÌNH MINH đã đạt nhiều chứng nhận và giải thưởng cao quý trong nước như : Hàng Việt Nam chất lượng cao, Cúp vàng ngành xây dựng, Thương hiệu uy tín chất lượng, … .</li>\r\n                        <li style={{ lineHeight: 1.5 }}>Ngoài các sản phẩm máy nước nóng năng lượng mặt trời dạng ống thủy tinh sản xuất tại Việt Nam –  và nhập khẩu và phân phối sản phẩm dạng máy nước nóng tấm phẳng được nhập khẩu từ Nhật Bản phù hợp cho các nhà biệt thự, sử dụng bơm chịu áp…  </li>\r\n                    </Box>\r\n                    <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                        Đánh giá linh kiện máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Chất liệu bồn bảo ôn Bình Minh</Box>\r\n                    <Box sx={{ marginLeft: \"15px\" }}>\r\n                        <li style={{ lineHeight: 1.5 }}>Đây là lớp bảo vệ bên ngoài thường xuyên phải chịu những tác động xấu của khí hậu nên đòi hỏi nó phải có chất lượng tốt, độ bền cao, không bị oxy hóa…chỉ như thế thì nó mới có thể chống chịu lại được những ảnh hưởng lớn mà thời tiết gây ra.</li>\r\n                        <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Do đó chất liệu mà vỏ bồn bảo ôn đang sử dụng cũng được quan tâm rất lớn, chất liệu được đánh giá là cao cấp nhất hiện nay chính là inox 304 hoặc hợp kim nhôm có phủ một lớp sơn tĩnh điện. Đây là 2 chất liệu cứng cáp có khả năng chống chịu va đập và ăn mòn cực tốt.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Lõi bồn bảo ôn Bình Minh</Box>\r\n                    <Box sx={{ marginLeft: \"15px\" }}>\r\n                        <li style={{ lineHeight: 1.5 }}>Cũng giống như lớp vỏ bồn bảo ôn thì lõi bồn bảo ôn cũng là bộ phận rất quan trọng, vì là bộ phận tiếp xúc trực tiếp với nước nên để đảm bảo an toàn cho sức khỏe người sử dụng thì bắt buộc phải sử dụng các chất liệu cao cấp, bền bỉ, không bị oxy hóa hay gỉ sét.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Lớp cách nhiệt Polyurethane Bình Minh</Box>\r\n                    <Box sx={{ marginLeft: \"15px\" }}>\r\n                        <li style={{ lineHeight: 1.5 }}>Đây là lớp cách nhiệt có nhiệm vụ chính là duy trì nhiệt độ nước nóng có bên trong bồn bảo ôn, lớp cách nhiệt này muốn hoạt động tốt thì yêu cầu tối thiểu độ dày phải là 5cm, có độ cứng lớn, bề mặt phải trơn mịn và không bị khuyết những lỗ nhỏ.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>Ống thu nhiệt của Bình Minh</Box>\r\n                    <Box sx={{ marginLeft: \"15px\", lineHeight: 1.5 }}>\r\n                        <li >Khả năng hấp thụ nhiệt mạnh hay yếu của máy nước nóng năng lượng mặt trời đều phụ thuộc vào bộ phận ống thu nhiệt này. Ống thu nhiệt có hiệu suất hấp thụ nhiệt cao thì sẽ nâng cao tuổi thọ và độ bền cho máy.</li>\r\n                        <li style={{ margin: \"10px 0 25px 0\" }}>Nếu bạn tìm hiểu trên thị trường thì bạn sẽ thấy có 2 loại ống thu nhiệt phổ biến là ống lõi titan và ống lõi dầu, trong đó ống lõi titan được ưa chuộng nhiều hơn cả do có chất lượng ổn định và giá thành cũng khá rẻ.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                        Thông số kĩ thuật máy nước nóng năng lượng Bình Minh\r\n                    </Box>\r\n                    <Box sx={{ lineHeight: 1.5 }}>\r\n                        <li style={{ margin: \"10px 0\" }}>Võ bồn chứa làm bằng Inox 304-2B theo tiêu chuẩn an toàn vệ sinh thực phẩm.</li>\r\n                        <li>Ruột bồn là bằng Inox 304/BA.</li>\r\n                        <li style={{ margin: \"10px 0\" }}>Bồn chứa nước nóng được cách nhiệt với môi trường bên ngoài bởi lớp polymethane dày 5,5cm giữ nhiệt trong thời gian 96 giờ.</li>\r\n                        <li>Chân bồn được làm bằng Inox 201.</li>\r\n                        <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Hệ thống ống thu nhiệt 5 lớp colector (chân Không tím ) ϕ 58mm x 1800mm lõi đỏ được thiết kế đặc biệt để chuyển hóa quang năng thành nhiệt năng làm nóng nước trong bình đồng thời không làm thất thoát nhiệt ra ngoài.</li>\r\n                        <li>Nhiệt độ làm nóng nước trung bình 35-80ºC . Máy nước nóng có thể làm nóng nước trên 90ºC trong điều kiện thời gian hấp thụ nhiệt kéo dài.</li>\r\n                        <li style={{ margin: \"10px 0 25px 0\" }}> Trong điều kiện ít nắng, mưa nhiều thì nhiệt độ của nước được máy đun nóng khoảng 40ºC (theo khảo sát thí nghiệm ở khu vực phía nam) .</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                        Chế độ bảo hành bình nước nóng mặt trời có tốt không?\r\n                    </Box>\r\n                    <Box sx={{ lineHeight: 1.5 }}>\r\n                        <li style={{ margin: \"10px 0\", lineHeight: 1.5 }}>Điểm mà mình đánh giá cao ở các dòng máy nước nóng năng lượng mặt trời bình minh chính là thời gian bảo hành lâu dài, hầu hết các sản phẩm đều có thời gian bảo hành trung bình từ 7 – 10 năm, một số thương hiệu cao cấp, máy còn có thời gian bảo hành lên đến 20 năm.</li>\r\n                        <li style={{ marginBottom: \"25px\", lineHeight: 1.5 }}>Với những thiết bị có thời gian bảo hành càng dài thì càng chứng minh được rằng nhà sản xuất máy nước nóng năng lượng mặt trời đang tự tin vào những sản phẩm mà họ bán ra trên thị trường. Từ đó, người tiêu dùng cũng hoàn toàn yên tâm về chất lượng cũng như độ bền của máy.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                        Giá máy nước nóng năng lượng mặt trời Bình Minh có ưu đãi tốt không?\r\n                    </Box>\r\n                    <Box sx={{ margin: \"10px 0\", lineHeight: 1.5 }}>\r\n                        Về phần giá của máy nước nóng năng lượng mặt trời Bình Minh hiện nay trên thị trường có mức giá tương đối cao, dao động từ 3 - 80 triệu đồng/máy. Dưới đây là mức giá cụ thể hơn của từng loại máy:\r\n                    </Box>\r\n                    <Box sx={{ lineHeight: 1.5 }}>\r\n                        <li style={{ margin: \"10px 0\" }}>Máy nước nóng năng lượng mặt trời ống dẫn chân không: Mức giá từ 5 - 10 triệu đồng. Đây cũng là loại máy nước nóng năng lượng mặt trời được người tiêu dùng ưa chuộng nhiều nhất.</li>\r\n                        <li>Máy nước nóng năng lượng mặt trời dạng ống dầu: Giá từ 8 - 20 triệu đồng</li>\r\n                        <li style={{ margin: \"10px 0\" }}>Máy nước nóng năng lượng mặt trời tấm phẳng (loại cao cấp): Giá dao động trong khoảng từ 20 - 80 triệu đồng.</li>\r\n                        <li style={{ marginBottom: \"25px\" }}>Tùy thuộc vào nhu cầu sử dụng và điều kiện tài chính của gia đình mà bạn quyết định xem đâu là sản phẩm phù hợp nhất với gia đình của bạn.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", fontSize: \"30px\" }}>\r\n                        Có nên chọn máy nước nóng năng lượng mặt trời Bình Minh hay không?\r\n                    </Box>\r\n                    <Box sx={{ lineHeight: 1.5, listStyle: \"none\" }}>\r\n                        <li style={{ margin: \"10px 0\" }}>Đánh giá người tiêu dùng: 4 sao. Đây là sản phẩm được những nhà ven biển ưa chuộng, bởi chúng được làm từ vật liệu Inox 304 chống oxy hoá cao của khí hậu biển, bền lâu và không bị gỉ sét.</li>\r\n                        <li>Giá cả máy nước nóng Bình minh cực kỳ ưu đãi và cạnh tranh nhất hiện nay, với hàng trăm hệ thống phân phối ở các tỉnh thành cả nước..</li>\r\n                        <li style={{ margin: \"10px 0\" }}>Bài viết trên đã cung cấp ngắn gọn thông tin về các dòng máy nước nóng năng lượng mặt trời Bình Minh tốt nhất, và uy tín trên thị trường hiện nay. Hy vọng bài viết này sẽ giúp bạn lựa chọn được một sản phẩm máy nước nóng năng lượng mặt trời loại nào tốt nhất và giá cả phải chăng nhé! </li>\r\n                    </Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default New1;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New2.tsx",["1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179"],"import React from 'react';\r\nimport { useContext } from 'react';\r\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    textfield: {\r\n        '& .MuiSelect-select': {\r\n            color: 'black', fontSize: '12px'\r\n        },\r\n        '& .MuiSvgIcon-root': {\r\n            fontSize: '20px', paddingRight: '2px'\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n                borderRadius: '20px',\r\n            },\r\n            '&.Mui-focused fieldset': {\r\n                border: \"1px solid black\",\r\n            }\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: 'black',\r\n        },\r\n        '& fieldset': {\r\n            borderRadius: '30px',\r\n            height: \"46px\"\r\n        },\r\n\r\n    },\r\n    hoverDetail: {\r\n        '&: hover': {\r\n            color: 'green',\r\n        },\r\n    },\r\n    typeProduct: {\r\n        border: \"2px solid #0066BF\"\r\n    },\r\n    nameTypeProduct: {\r\n        backgroundColor: \"#0066BF\",\r\n        fontSize: \"16px\",\r\n        fontFamily: \"Roboto\",\r\n        color: \"white\",\r\n        padding: \"10px 0px\"\r\n    },\r\n}))\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst New2: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const productMap = mapProductList.map((product: any) => product.total)\r\n    const classes = useStyles();\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách thanh toán\";\r\n    }, []);\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0 40px 0\" }}>NHỮNG ĐIỀU CẦN BIẾT KHI CHỌN MUA MÁY NƯỚC NÓNG NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                            <Box display={'flex'} margin={'auto'}>\r\n                                <img src=\"/new2.jpg\" style={{ width: \"360px\" }} alt=\"Ảnh NLMT\" />\r\n                            </Box>\r\n                            <Box sx={{ fontSize: 14, margin: \"25px 0\", lineHeight: 1.5 }}>\r\n                                Được xem là sản phẩm thân thiện với môi trường và tiết kiệm điện, tuy nhiên việc lựa chọn và lắp đặt máy nước nóng năng lượng mặt trời sai nguyên tắc sẽ không mang lại được những tiện ích và công dụng như mong muốn. Dưới đây là những điều bạn cần lưu ý:\r\n                            </Box>\r\n                            <Box sx={{ fontWeight: \"bold\" }}>\r\n                                Ưu điểm của máy nước nóng năng lượng mặt trời\r\n                            </Box>\r\n                            <Box sx={{ margin: \"10px 0 15px 15px\", lineHeight: 1.5, listStyle: \"none\" }}>\r\n                                <li>1. Máy nước nóng năng lượng mặt trời là sản phẩm thân thiện với môi trường và không phải sử dụng điện năng để làm nóng nước. Máy lợi dụng sức nóng của mặt trời để tạo thành nhiệt lượng làm nóng nguồn nước cung cấp nước ấm cho gia đình sử dụng.</li>\r\n                                <li style={{ margin: \"10px 0\" }}>2. Ngoài lợi ích tiết kiệm điện, máy nước nóng còn có độ bền cao, không gây tiếng ồn và chi phí bảo trì thấp vừa bảo vệ môi trường.</li>\r\n                                <li>3. Tiết kiệm chi phí cho gia đình: trên thực tế một máy nước nóng năng lượng mặt trời có giá cao gấp 5 lần máy nước nóng bằng điện. Tuy nhiên tính về lâu dài thì có lợi hơn vì nó giúp tiết kiệm một khoản chi phí không nhỏ cho cả gia đình, nhất là khi nhà bạn có từ 2 máy nước nóng trở lên.</li>\r\n                                <li>4. Máy nước nóng năng lượng mặt trời có thể giữ được nhiệt ngay cả ban đêm thậm chí đến sáng hôm sau. Riêng ở khu vực thành phố Hồ Chí Minh có thể sử dụng bình năng lượng mặt trời suốt 365 ngày, ở Hà Nội và các tỉnh miền Trung sử dụng được trong vòng 300 ngày/năm.</li>\r\n                            </Box>\r\n                            <Box sx={{ fontWeight: \"bold\" }}>\r\n                                Những lưu ý khi lựa chọn máy nước nóng năng lượng mặt trời\r\n                            </Box>\r\n                            <Box sx={{ marginTop: \"15px\" }}>1. Kiểm tra số lượng ống chân không: Nên lựa chọn ống chân không loại phi 58 – 1,8m với các thông số theo quy định chuẩn của các nhà sản xuất như sau:</Box>\r\n                            <img style={{ width: \"360px\" }} src=\"/table_new2.jpg\" alt=\"Ảnh bảng dung tích - quy cách - số lượng ống\" />\r\n                            <Box sx={{ margin: \"15px 0\", lineHeight: 1.5 }}>2. Không nên quá coi trọng thương hiệu, nguồn gốc xuất xứ hoặc những nhà sản xuất được quảng cáo rầm rộ trên các phương tiện truyền thông đại chúng mà tốt nhất nên tìm hiểu chất lượng của Inox, ống chân không, lớp vỏ cách nhiệt và công nghệ sản xuất mới là điều quan trọng hàng đầu. Và tốt nhất nên tham vấn ý kiến của các nhà chuyên môn hoặc những người có kinh nghiệm.</Box>\r\n                            <Box>Thái Dương Năng Sơn Hà là một lựa chọn phù hợp</Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>\r\n                                Hướng dẫn cách sử dụng máy nước nóng năng lượng mặt trời\r\n                            </Box>\r\n                            <Box>Nguyên lý hoạt động của máy nước nóng năng lượng mặt trời Thái dương năng</Box>\r\n                            <Box sx={{ lineHeight: 1.5, listStyle: \"none\", marginTop: \"15px\" }}>\r\n                                <li>- Máy vừa lắp đặt, bạn phải bơm nước sạch vào buổi sáng trước khi mặt trời mọc hoặc sau khi mặt trời lặn. Hoặc nếu có thể che ống chân không để nhiệt độ giảm bớt nhiệt, sau đó mới cho nước lạnh vào bình, tránh thay đổi nhiệt độ đột ngột sẽ làm vỡ ông chân không.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Nên lắp đường ống theo sơ đồ hướng dẫn, khi bơm nước mở đồng thời van I và van II. Sau đó đóng van II chỉ mở van I để điều tiết nước nóng ở vòi lấy nước cuối cùng.</li>\r\n                                <li>- Thường xuyên vệ sinh và làm sạch máy nhằm tăng hiệu quả sử dụng.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Nên kiểm tra độ nóng của nước trước khi dùng.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", marginBottom: \"15px\" }}>\r\n                                Những điều cần lưu ý khi lắp đặt máy nước nóng năng lượng mặt trời\r\n                            </Box>\r\n                            <Box>Cách lắp đặt Thái dương năng đúng cách</Box>\r\n                            <Box sx={{ lineHeight: 1.5, listStyle: \"none\", margin: \"15px 0\" }}>\r\n                                <li>- Vị trí lắp máy năng lượng mặt trời phải luôn có ánh nắng mặt trời chiếu vào, không bị che khuất bởi những ngôi nhà xung quanh. Nếu nhà bạn nằm giữa những tòa cao ốc hoặc sống ở chung cư thì không nên lắp máy nước nóng năng lượng mặt trời mà nên chọn máy nước nóng bằng điện. Nếu nhà bạn cao hơn hoặc bằng so với các nhà hàng xóm xung quanh, nhà bạn có vị trí sân hoặc mái thoáng đãng không bị khuất nắng là đây là nơi lý tưởng nhất.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Nguồn cung cấp nước phải ổn định vì loại máy này chỉ hoạt động khi nguồn nước được cung cấp đều đặn và liên tục. Nước máy phải lên được mái nhà hoặc bồn chứa nước phải cao hơn mái nhà.</li>\r\n                                <li>- Chi phí lắp đặt cao, đối với những ngôi nhà 4 tầng trở lên chi phí đường ống dẫn nước gần bằng tiền mua máy. Vì thế bạn nên bố trí ống dẫn nước càng ngắn càng tiết kiệm và ít bị rò rỉ. Nếu trong nhà có hộp kỹ thuật không bị bít kín hoặc có giếng trời trong nhà có không gian thoáng bên ngoài tiếp sát tường nhà đều có thể bố trí đường ống chạy suốt từ trên xuống dưới.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Ống dẫn nước nóng chỉ có thể dùng ống nhựa PPR hoặc ống kim loại.</li>\r\n                                <li>- Với những khu vực nước ô nhiễm nặng thì không nên lắp máy năng lượng mặt trời. Vì ở nhiệt độ cao tính ăn mòn của nước tăng mạnh có thể ăn mòn và hư hại bồn inox. Nếu muốn sử dụng cần thêm bộ lọc phèn.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Nên chọn máy có bộ phận thu nhiệt được làm bằng ống đồng vì loại máy này có hiệu suất thu nhiệt cao hơn ống thu nhiệt thủy tinh, nhựa tuy nhiên giá thành theo đó cũng cao gấp nhiều lần so với ống thu nhiệt chân không thủy tinh và nhựa.</li>\r\n                                <li>- Nếu vị trí đặt bình thái dương năng bị hạn chế về thời gian thu nhận nắng trong ngày thì tùy thuộc vào mức độ sẽ làm giảm khả năng làm nước nóng tương ứng. Thông thường nếu vị trí đặt bình thái dương năng dự kiến có thể thu nhận từ 3-4h chiếu sáng/ngày là bạn đã có lượng nước nóng thoải mái cho cả gia đình dùng.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Đối với nhà cũ, ngoài những yếu tố về vị trí mặt bằng lắp đặt thái dương năng bạn cũng cần phải đảm bảo lưu ý đến những giải pháp đấu, nối bổ sung đường ông nước nóng ghép với hệ thống ống nước cũ.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontWeight: \"bold\", marginTop: \"15px\" }}>\r\n                                Cách lựa chọn bình nước nóng sao cho phù hợp với gia đình bạn:\r\n                            </Box>\r\n                            <Box sx={{ lineHeight: 1.5, listStyle: \"none\", margin: \"15px 0\" }}>\r\n                                <li>- Với gia đình có từ 2-3 người : Nên dùng loại máy nước nóng năng lượng mặt trời Thái dương năng 140 lít.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Với những gia đình có từ 3-4 người : Nên sử dụng máy nước nóng năng lượng mặt trời Thái dương năng 160 lít.</li>\r\n                                <li>- Với gia đình có từ 4-5 người : Nên chọn sử dụng máy nước nóng năng lượng mặt trời Thái dương năng 180 lít.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Với gia đình có từ 6-8  người : Nên sử dụng máy nước nóng năng lượng mặt trời Thái dương năng 200 - 300 lít .</li>\r\n                                <li>- Với gia đình có trên 10 người có thể sử dụng các bộ dân dụng mắc nối tiếp.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>- Với cơ quan, doanh nghiệp có thể sử dụng giàn nối tiếp hoặc giàn năng lượng mặt trời công nghiệp có dung tích mỗi máy là 500l.</li>\r\n                            </Box>\r\n\r\n                            <Box sx={{ lineHeight: 1.5, marginBottom:\"30px\" }}>Qua những lưu ý trên hy vọng khách hàng sẽ có được cái nhìn rõ hơn về sản phẩm máy nước nóng năng lượng mặt trời và qua đó chọn lựa được sản phẩm máy nước nóng năng lượng mặt trời phù hợp với gia đình mình.</Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        backgroundColor: \"white\",\r\n                                        color: \"#0066bf\", padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\", color: \"white\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>NHỮNG ĐIỀU CẦN BIẾT KHI CHỌN MUA MÁY NƯỚC NÓNG NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                    <Box display={'flex'} margin={'auto'}>\r\n                        <img src=\"/new2.jpg\" style={{ width: \"726px\" }} alt=\"Ảnh NLMT\" />\r\n                    </Box>\r\n                    <Box sx={{ fontSize: 14, margin: \"25px 0\", lineHeight: 1.5 }}>\r\n                        Được xem là sản phẩm thân thiện với môi trường và tiết kiệm điện, tuy nhiên việc lựa chọn và lắp đặt máy nước nóng năng lượng mặt trời sai nguyên tắc sẽ không mang lại được những tiện ích và công dụng như mong muốn. Dưới đây là những điều bạn cần lưu ý:\r\n                    </Box>\r\n                    <Box sx={{ fontWeight: \"bold\" }}>\r\n                        Ưu điểm của máy nước nóng năng lượng mặt trời\r\n                    </Box>\r\n                    <Box sx={{ margin: \"10px 0 15px 15px\", lineHeight: 1.5, listStyle: \"none\" }}>\r\n                        <li>1. Máy nước nóng năng lượng mặt trời là sản phẩm thân thiện với môi trường và không phải sử dụng điện năng để làm nóng nước. Máy lợi dụng sức nóng của mặt trời để tạo thành nhiệt lượng làm nóng nguồn nước cung cấp nước ấm cho gia đình sử dụng.</li>\r\n                        <li style={{ margin: \"10px 0\" }}>2. Ngoài lợi ích tiết kiệm điện, máy nước nóng còn có độ bền cao, không gây tiếng ồn và chi phí bảo trì thấp vừa bảo vệ môi trường.</li>\r\n                        <li>3. Tiết kiệm chi phí cho gia đình: trên thực tế một máy nước nóng năng lượng mặt trời có giá cao gấp 5 lần máy nước nóng bằng điện. Tuy nhiên tính về lâu dài thì có lợi hơn vì nó giúp tiết kiệm một khoản chi phí không nhỏ cho cả gia đình, nhất là khi nhà bạn có từ 2 máy nước nóng trở lên.</li>\r\n                        <li>4. Máy nước nóng năng lượng mặt trời có thể giữ được nhiệt ngay cả ban đêm thậm chí đến sáng hôm sau. Riêng ở khu vực thành phố Hồ Chí Minh có thể sử dụng bình năng lượng mặt trời suốt 365 ngày, ở Hà Nội và các tỉnh miền Trung sử dụng được trong vòng 300 ngày/năm.</li>\r\n                    </Box>\r\n                    <Box sx={{ fontWeight: \"bold\" }}>\r\n                        Những lưu ý khi lựa chọn máy nước nóng năng lượng mặt trời\r\n                    </Box>\r\n                    <Box sx={{ marginTop: \"15px\" }}>1. Kiểm tra số lượng ống chân không: Nên lựa chọn ống chân không loại phi 58 – 1,8m với các thông số theo quy định chuẩn của các nhà sản xuất như sau:</Box>\r\n                    <img style={{ width: \"600px\" }} src=\"/table_new2.jpg\" alt=\"Ảnh bảng dung tích - quy cách - số lượng ống\" />\r\n                    <Box sx={{ margin: \"15px 0\", lineHeight: 1.5 }}>2. Không nên quá coi trọng thương hiệu, nguồn gốc xuất xứ hoặc những nhà sản xuất được quảng cáo rầm rộ trên các phương tiện truyền thông đại chúng mà tốt nhất nên tìm hiểu chất lượng của Inox, ống chân không, lớp vỏ cách nhiệt và công nghệ sản xuất mới là điều quan trọng hàng đầu. Và tốt nhất nên tham vấn ý kiến của các nhà chuyên môn hoặc những người có kinh nghiệm.</Box>\r\n                    <Box>Thái Dương Năng Sơn Hà là một lựa chọn phù hợp</Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", margin: \"15px 0\" }}>\r\n                        Hướng dẫn cách sử dụng máy nước nóng năng lượng mặt trời\r\n                    </Box>\r\n                    <Box>Nguyên lý hoạt động của máy nước nóng năng lượng mặt trời Thái dương năng</Box>\r\n                    <Box sx={{ lineHeight: 1.5, listStyle: \"none\", marginTop: \"15px\" }}>\r\n                        <li>- Máy vừa lắp đặt, bạn phải bơm nước sạch vào buổi sáng trước khi mặt trời mọc hoặc sau khi mặt trời lặn. Hoặc nếu có thể che ống chân không để nhiệt độ giảm bớt nhiệt, sau đó mới cho nước lạnh vào bình, tránh thay đổi nhiệt độ đột ngột sẽ làm vỡ ông chân không.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Nên lắp đường ống theo sơ đồ hướng dẫn, khi bơm nước mở đồng thời van I và van II. Sau đó đóng van II chỉ mở van I để điều tiết nước nóng ở vòi lấy nước cuối cùng.</li>\r\n                        <li>- Thường xuyên vệ sinh và làm sạch máy nhằm tăng hiệu quả sử dụng.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Nên kiểm tra độ nóng của nước trước khi dùng.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", marginBottom: \"15px\" }}>\r\n                        Những điều cần lưu ý khi lắp đặt máy nước nóng năng lượng mặt trời\r\n                    </Box>\r\n                    <Box>Cách lắp đặt Thái dương năng đúng cách</Box>\r\n                    <Box sx={{ lineHeight: 1.5, listStyle: \"none\", margin: \"15px 0\" }}>\r\n                        <li>- Vị trí lắp máy năng lượng mặt trời phải luôn có ánh nắng mặt trời chiếu vào, không bị che khuất bởi những ngôi nhà xung quanh. Nếu nhà bạn nằm giữa những tòa cao ốc hoặc sống ở chung cư thì không nên lắp máy nước nóng năng lượng mặt trời mà nên chọn máy nước nóng bằng điện. Nếu nhà bạn cao hơn hoặc bằng so với các nhà hàng xóm xung quanh, nhà bạn có vị trí sân hoặc mái thoáng đãng không bị khuất nắng là đây là nơi lý tưởng nhất.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Nguồn cung cấp nước phải ổn định vì loại máy này chỉ hoạt động khi nguồn nước được cung cấp đều đặn và liên tục. Nước máy phải lên được mái nhà hoặc bồn chứa nước phải cao hơn mái nhà.</li>\r\n                        <li>- Chi phí lắp đặt cao, đối với những ngôi nhà 4 tầng trở lên chi phí đường ống dẫn nước gần bằng tiền mua máy. Vì thế bạn nên bố trí ống dẫn nước càng ngắn càng tiết kiệm và ít bị rò rỉ. Nếu trong nhà có hộp kỹ thuật không bị bít kín hoặc có giếng trời trong nhà có không gian thoáng bên ngoài tiếp sát tường nhà đều có thể bố trí đường ống chạy suốt từ trên xuống dưới.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Ống dẫn nước nóng chỉ có thể dùng ống nhựa PPR hoặc ống kim loại.</li>\r\n                        <li>- Với những khu vực nước ô nhiễm nặng thì không nên lắp máy năng lượng mặt trời. Vì ở nhiệt độ cao tính ăn mòn của nước tăng mạnh có thể ăn mòn và hư hại bồn inox. Nếu muốn sử dụng cần thêm bộ lọc phèn.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Nên chọn máy có bộ phận thu nhiệt được làm bằng ống đồng vì loại máy này có hiệu suất thu nhiệt cao hơn ống thu nhiệt thủy tinh, nhựa tuy nhiên giá thành theo đó cũng cao gấp nhiều lần so với ống thu nhiệt chân không thủy tinh và nhựa.</li>\r\n                        <li>- Nếu vị trí đặt bình thái dương năng bị hạn chế về thời gian thu nhận nắng trong ngày thì tùy thuộc vào mức độ sẽ làm giảm khả năng làm nước nóng tương ứng. Thông thường nếu vị trí đặt bình thái dương năng dự kiến có thể thu nhận từ 3-4h chiếu sáng/ngày là bạn đã có lượng nước nóng thoải mái cho cả gia đình dùng.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Đối với nhà cũ, ngoài những yếu tố về vị trí mặt bằng lắp đặt thái dương năng bạn cũng cần phải đảm bảo lưu ý đến những giải pháp đấu, nối bổ sung đường ông nước nóng ghép với hệ thống ống nước cũ.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ fontWeight: \"bold\", marginTop: \"15px\" }}>\r\n                        Cách lựa chọn bình nước nóng sao cho phù hợp với gia đình bạn:\r\n                    </Box>\r\n                    <Box sx={{ lineHeight: 1.5, listStyle: \"none\", margin: \"15px 0\" }}>\r\n                        <li>- Với gia đình có từ 2-3 người : Nên dùng loại máy nước nóng năng lượng mặt trời Thái dương năng 140 lít.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Với những gia đình có từ 3-4 người : Nên sử dụng máy nước nóng năng lượng mặt trời Thái dương năng 160 lít.</li>\r\n                        <li>- Với gia đình có từ 4-5 người : Nên chọn sử dụng máy nước nóng năng lượng mặt trời Thái dương năng 180 lít.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Với gia đình có từ 6-8  người : Nên sử dụng máy nước nóng năng lượng mặt trời Thái dương năng 200 - 300 lít .</li>\r\n                        <li>- Với gia đình có trên 10 người có thể sử dụng các bộ dân dụng mắc nối tiếp.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>- Với cơ quan, doanh nghiệp có thể sử dụng giàn nối tiếp hoặc giàn năng lượng mặt trời công nghiệp có dung tích mỗi máy là 500l.</li>\r\n                    </Box>\r\n\r\n                    <Box sx={{ lineHeight: 1.5 }}>Qua những lưu ý trên hy vọng khách hàng sẽ có được cái nhìn rõ hơn về sản phẩm máy nước nóng năng lượng mặt trời và qua đó chọn lựa được sản phẩm máy nước nóng năng lượng mặt trời phù hợp với gia đình mình.</Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default New2;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New3.tsx",["1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193"],"import React from 'react';\r\nimport { styled, makeStyles } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst New3: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách thanh toán\";\r\n    }, []);\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isMobile = viewPort.width <= 1024;\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"20px 0 40px 0\" }}>NHỮNG ĐIỀU CẦN BIẾT KHI CHỌN MUA MÁY NƯỚC NÓNG NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                            <Box display={'flex'} margin={'auto'}>\r\n                                <img src=\"/new3.jpg\" style={{ width: \"360px\" }} alt=\"Ảnh NLMT\" />\r\n                            </Box>\r\n                            <Box sx={{ lineHeight: 1.5, fontSize: \"14px\", listStyle: \"none\", margin: \"15px 0 30px 0\" }}>\r\n                                <li>Ngày nay tốc độ xây dựng nhà ở ngày càng tăng, kéo theo đó nhu cầu dự trữ nước tăng cao khiến thị trường bồn chứa nước, đặc biệt là bồn inox càng trở nên tấp nập hơn bao giờ hết.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>Do đó mà tình trạng hàng nhái, hàng giả trà trộn là không ít..Vậy làm thế nào để <b>nhận biết được bồn nước inox Bình Minh đúng chất lượng</b> đang là vấn đế được quan tâm khi chọn mua sản phẩm.</li>\r\n                                <li>Với chất lượng tốt, đảm bảo an toàn nguồn nước, giá cả phù hợp với gia đình, tốc độ giao hàng nhanh chóng, đội ngũ nhân viên tư vấn chăm sóc khách hàng chuyên nghiệp, tận tình…<span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Bồn nước Inox Bình Minh</span> luôn được sự tin tưởng lựa chọn của người tiêu dùng.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>Chính vì vậy mà tình trạng các doanh nghiệp sản xuất bồn nhái, dán nhãn mác Sơn Hà là không thể tránh khỏi, bài viết này Bình Minh sẽ đưa ra một số lưu ý để giúp Qúy Khách Hàng <b>nhận biết Bồn nước Inox chính hãng Bình Minh</b>.</li>\r\n                                <li>Bồn nước inox Bình Minh được sản xuất từ <b>inox SUS 304</b> nên luôn sáng bóng. Bạn có thể dùng nam châm để kiểm chứng chất lượng. Bồn giả, bồn nhái thường thì lượng inox thấp và có pha trộn thép nên nam châm sẽ hút mạnh còn <b>bồn chính hãng Bình Minh</b> thì nam châm sẽ không hút.</li>\r\n                                <li style={{ margin: \"15px 0\" }}>Từ bài viết trên hi vọng Qúy Khách Hàng có thể hoàn toàn yên tâm khi chọn mua bồn inox Bình Minh chính hãng . Để chọn sản phẩm đúng chất lượng với giá hợp lý Quý khách hàng có thể Truy cập vào mục sản phẩm trên website.</li>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        backgroundColor: \"white\",\r\n                                        color: \"#0066bf\", padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\", color: \"white\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CÁCH ĐỂ NHẬN BIẾT VÀ LỰA CHỌN BỒN NƯỚC INOX BÌNH MINH CHÍNH HÃNG</Box>\r\n                    <Box display={'flex'} margin={'auto'}>\r\n                        <img src=\"/new3.jpg\" style={{ width: \"700px\" }} alt=\"Ảnh NLMT\" />\r\n                    </Box>\r\n                    <Box sx={{ lineHeight: 1.5, fontSize: \"14px\", listStyle: \"none\", marginTop: \"15px\" }}>\r\n                        <li>Ngày nay tốc độ xây dựng nhà ở ngày càng tăng, kéo theo đó nhu cầu dự trữ nước tăng cao khiến thị trường bồn chứa nước, đặc biệt là bồn inox càng trở nên tấp nập hơn bao giờ hết.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>Do đó mà tình trạng hàng nhái, hàng giả trà trộn là không ít..Vậy làm thế nào để <b>nhận biết được bồn nước inox Bình Minh đúng chất lượng</b> đang là vấn đế được quan tâm khi chọn mua sản phẩm.</li>\r\n                        <li>Với chất lượng tốt, đảm bảo an toàn nguồn nước, giá cả phù hợp với gia đình, tốc độ giao hàng nhanh chóng, đội ngũ nhân viên tư vấn chăm sóc khách hàng chuyên nghiệp, tận tình…<span style={{ fontWeight: \"bold\", fontStyle: \"italic\" }}>Bồn nước Inox Bình Minh</span> luôn được sự tin tưởng lựa chọn của người tiêu dùng.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>Chính vì vậy mà tình trạng các doanh nghiệp sản xuất bồn nhái, dán nhãn mác Sơn Hà là không thể tránh khỏi, bài viết này Bình Minh sẽ đưa ra một số lưu ý để giúp Qúy Khách Hàng <b>nhận biết Bồn nước Inox chính hãng Bình Minh</b>.</li>\r\n                        <li>Bồn nước inox Bình Minh được sản xuất từ <b>inox SUS 304</b> nên luôn sáng bóng. Bạn có thể dùng nam châm để kiểm chứng chất lượng. Bồn giả, bồn nhái thường thì lượng inox thấp và có pha trộn thép nên nam châm sẽ hút mạnh còn <b>bồn chính hãng Bình Minh</b> thì nam châm sẽ không hút.</li>\r\n                        <li style={{ margin: \"15px 0\" }}>Từ bài viết trên hi vọng Qúy Khách Hàng có thể hoàn toàn yên tâm khi chọn mua bồn inox Bình Minh chính hãng . Để chọn sản phẩm đúng chất lượng với giá hợp lý Quý khách hàng có thể Truy cập vào mục sản phẩm trên website.</li>\r\n                    </Box>\r\n                </Box >\r\n            </Box>\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default New3;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\New.tsx",["1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1204","1205","1206","1207"],"import React from 'react';\r\nimport { styled } from \"@material-ui/core/styles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct, getTypeProduct } from \"../../redux/actions/user\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { AppBar, Box, Badge, Toolbar, Typography, InputAdornment, OutlinedInput, Button, TextField, Divider, List, ListItem, ListItemText, ListItemButton, IconButton } from '@mui/material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./SlideShow.css\";\r\n\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ShoppingCartIcon from \"@mui/icons-material/ShoppingCart\";\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\r\n\r\n\r\nconst StyledSearch = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 240,\r\n    borderRadius: '20px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    marginRight: '16px',\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        // borderColor: `${alpha(theme.palette.grey[500], 0.32)} !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledSearchMobile = styled(OutlinedInput)(({ theme }) => ({\r\n    width: 340,\r\n    borderRadius: '0px',\r\n    fontSize: '13px',\r\n    height: \"42px\",\r\n    backgroundColor: \"white\",\r\n    marginTop: \"4px\",\r\n    '& fieldset': {\r\n        borderWidth: `1px !important`,\r\n        borderColor: '#rgba(0, 0, 0, 0.87)'\r\n    },\r\n}));\r\n\r\nconst StyledRoot = styled(AppBar)(() => ({\r\n    boxShadow: 'none',\r\n    width: '100%',\r\n    backgroundColor: 'white',\r\n    fontWeight: 'bold',\r\n}));\r\n\r\nconst New: React.FC = (): JSX.Element => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [localItems, setLocalItems] = React.useState(JSON.parse(localStorage.getItem(\"productList\")!) || []);\r\n    const mapProductList = localItems.flatMap((arr: any) => arr)\r\n    const [filterName, setFilterName] = React.useState('');\r\n\r\n    const [products, setProducts] = React.useState<IProduct[]>([]);\r\n    const [typeProducts, setTypeProducts] = React.useState<ITypeProduct[]>([]);\r\n    const user = useSelector((state: RootState) => state.user);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getTypeProduct());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setProducts(() =>\r\n            user?.products?.filter((product: any) =>\r\n                product.nameProduct\r\n            ));\r\n    }, [user]);\r\n    React.useEffect(() => {\r\n        setTypeProducts(() => user?.typeproducts?.filter((typeproduct: any) => typeproduct.nameTypeProduct));\r\n    }, [user]);\r\n\r\n    const handleFilterByName = (event: any) => {\r\n        const keyword = event.target.value;\r\n\r\n        if (keyword !== '') {\r\n            const results = user?.products?.filter((product: any) => {\r\n                return product.nameProduct.toLowerCase().startsWith(keyword.toLowerCase());\r\n                // Use the toLowerCase() method to make it case-insensitive\r\n            });\r\n            setProducts(results);\r\n        } else {\r\n            setProducts(() => user?.products?.filter((product: any) => product.nameProduct));\r\n        }\r\n\r\n        setFilterName(keyword);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        document.title = \"Chính sách thanh toán\";\r\n    }, []);\r\n\r\n    const useViewport = () => {\r\n        const [width, setWidth] = React.useState(window.innerWidth);\r\n\r\n        React.useEffect(() => {\r\n            const handleWindowResize = () => setWidth(window.innerWidth);\r\n            window.addEventListener(\"resize\", handleWindowResize);\r\n            return () => window.removeEventListener(\"resize\", handleWindowResize);\r\n        }, []);\r\n\r\n        return { width };\r\n    };\r\n    const viewPort = useViewport();\r\n    const isIpad = viewPort.width <= 1024 && viewPort.width > 420;\r\n    const isMobile = viewPort.width <= 420\r\n\r\n    const [showNavbar, setShowNavbar] = React.useState(false)\r\n\r\n    const handleShowNavbar = () => {\r\n        setShowNavbar(!showNavbar)\r\n    }\r\n\r\n    const [showProduct, setShowProduct] = React.useState(false)\r\n\r\n    const handleShowProduct = () => {\r\n        setShowProduct(!showProduct)\r\n    }\r\n\r\n    const menuProduct = !showProduct ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-products  ${showProduct && 'active'}`}>\r\n            {typeProducts.map((typeProduct: any) =>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\" }} to={`/loaiSP1/${typeProduct._id}`}>\r\n                        <Box sx={{ color: \"white\", fontWeight: 400, fontSize: 13, fontFamily: \"Roboto\", display: \"flex\", flexDirection: \"row\", margin: \"15px 0\" }}>\r\n                            <Box sx={{ width: \"9px\", height: \"9px\", borderRadius: \"50%\", border: \"1px solid white\", margin: \"3px 5px 0 0\" }} />{typeProduct.nameTypeProduct}\r\n                        </Box>\r\n                    </Link>\r\n\r\n                </li>\r\n            )}\r\n        </Box>\r\n    )\r\n\r\n    const menuProductArrow = !showProduct ? (\r\n        <KeyboardArrowDownIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    ) : (\r\n        <ExpandLessIcon onClick={handleShowProduct} style={{ color: \"white\", margin: \"-2px 19px 0 0\" }} />\r\n    )\r\n\r\n    const menu = showNavbar ? (\r\n        <Box sx={{ height: 0, transition: \"all 0.5s ease-in-out\" }} />\r\n    ) : (\r\n        <Box className={`nav-elements  ${showNavbar && 'active'}`}>\r\n            <Divider style={{ height: 1 }} />\r\n            <ul style={{ marginLeft: \"-20px\" }}>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/\">TRANG CHỦ</Link>\r\n                </li>\r\n                <li style={{ margin: \"23px 0\" }}>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/LoaiSP\">SẢN PHẨM</Link>\r\n                        <Box flexGrow={1} />\r\n                        {menuProductArrow}\r\n                    </Box>\r\n                    {menuProduct}\r\n                </li>\r\n                <li>\r\n                    <Link style={{ textDecoration: \"none\", fontWeight: \"bold\", color: \"white\" }} to=\"/tintuc\">TIN TỨC</Link>\r\n                </li>\r\n            </ul>\r\n        </Box>\r\n    )\r\n\r\n    if (isIpad) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 15px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHUYÊN MỤC: TIN TỨC</Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={Link} to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'}>\r\n                                    <img style={{ width: \"240px\" }} src=\"/new1.jpg\" alt=\"Ảnh MNLMT\" />\r\n                                </Box>\r\n                                <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                                    <Box component={Link} to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'} sx={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                        Máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                                    </Box>\r\n                                    <Box sx={{ fontSize: \"14px\", lineHeight: 1.5 }}>\r\n                                        Ngày nay tốc độ xây dựng nhà ở ngày càng tăng, kéo theo đó nhu cầu dự trữ nước tăng cao khiến thị trường bồn chứa nước […]\r\n                                    </Box>\r\n                                    <Link to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'}>\r\n                                        <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", marginTop: \"5px\" }}>\r\n                                            Xem thêm\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"50px 0\" }}>\r\n                                <Box component={Link} to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'}>\r\n                                    <img style={{ width: \"240px\" }} src=\"/new2.jpg\" alt=\"Ảnh MNLMT\" />\r\n                                </Box>\r\n                                <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                                    <Box component={Link} to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'} sx={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                        Những điều cần biết khi chọn mua máy nước nóng năng lượng mặt trời\r\n                                    </Box>\r\n                                    <Box sx={{ fontSize: \"14px\", lineHeight: 1.5 }}>\r\n                                        Được xem là sản phẩm thân thiện với môi trường và tiết kiệm điện, tuy nhiên việc lựa chọn và lắp đặt máy nước nóng năng lượng mặt trời sai nguyên tắc sẽ không mang lại được những tiện ích […]\r\n                                    </Box>\r\n                                    <Link to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'}>\r\n                                        <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", marginTop: \"24px\" }}>\r\n                                            Xem thêm\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{marginBottom:\"30px\"}}>\r\n                                <Box component={Link} to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'}>\r\n                                    <img style={{ width: \"240px\" }} src=\"/new3.jpg\" alt=\"Ảnh MNLMT\" />\r\n                                </Box>\r\n                                <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                                    <Box component={Link} to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'} sx={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                        Cách để nhận biết và lựa chọn Bồn nước Inox Bình Minh chính hãng\r\n                                    </Box>\r\n                                    <Box sx={{ fontSize: \"14px\", lineHeight: 1.5 }}>\r\n                                        Ngày nay tốc độ xây dựng nhà ở ngày càng tăng, kéo theo đó nhu cầu dự trữ nước tăng cao khiến thị trường bồn chứa nước […]\r\n                                    </Box>\r\n                                    <Link to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'}>\r\n                                        <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", marginTop: \"48px\" }}>\r\n                                            Xem thêm\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    if (isMobile) {\r\n        return (\r\n            <Box >\r\n                <Box>\r\n                    <Box>\r\n                        <Box sx={{ backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"234px\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                            <Link style={{ textDecoration: 'none', margin: \"10px auto\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box sx={{ fontSize: \"30px\", fontWeight: \"bold\", color: \"red\", textAlign: \"center\" }}>BÌNH MINH GLOBAL</Box>\r\n                            <Box sx={{ fontSize: \"19px\", fontWeight: \"bold\", color: \"#0066BF\", textAlign: \"center\" }}> NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI</Box>\r\n                        </Box>\r\n                        <Box sx={{ backgroundColor: \"#0066BF\", maxHeight: \"600px\", display: \"flex\", flexDirection: \"column\" }}>\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"15px 20px\" }} >\r\n                                <MenuIcon onClick={handleShowNavbar} style={{ color: \"white\" }} />\r\n                                <Box flexGrow={1} />\r\n                                <Box component={Link} to={\"/order\"} >\r\n                                    <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                        <ShoppingCartIcon style={{ color: \"white\" }} />{\" \"}\r\n                                    </Badge>\r\n                                </Box>\r\n                            </Box>\r\n                            {menu}\r\n                            <Box display={'flex'} justifyContent={'center'}>\r\n                                <StyledSearchMobile\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 15px\" }}>\r\n                            <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHUYÊN MỤC: TIN TỨC</Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={Link} to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'}>\r\n                                    <img style={{ width: \"120px\" }} src=\"/new1.jpg\" alt=\"Ảnh MNLMT\" />\r\n                                </Box>\r\n                                <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                                    <Box component={Link} to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'} sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                        Máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                                    </Box>\r\n                                    <Link to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'}>\r\n                                        <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", height:\"27px\", marginTop: \"5px\" }}>\r\n                                            Xem thêm\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"50px 0\" }}>\r\n                                <Box component={Link} to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'}>\r\n                                    <img style={{ width: \"120px\" }} src=\"/new2.jpg\" alt=\"Ảnh MNLMT\" />\r\n                                </Box>\r\n                                <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                                    <Box component={Link} to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'} sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                        Những điều cần biết khi chọn mua máy nước nóng năng lượng mặt trời\r\n                                    </Box>\r\n                                    <Link to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'}>\r\n                                        <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", height:\"27px\", marginTop: \"5px\" }}>\r\n                                            Xem thêm\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n\r\n                            <Box display={'flex'} flexDirection={'row'} sx={{marginBottom:\"30px\"}}>\r\n                                <Box component={Link} to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'}>\r\n                                    <img style={{ width: \"120px\" }} src=\"/new3.jpg\" alt=\"Ảnh MNLMT\" />\r\n                                </Box>\r\n                                <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                                    <Box component={Link} to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'} sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                        Cách để nhận biết và lựa chọn Bồn nước Inox Bình Minh chính hãng\r\n                                    </Box>\r\n                                    <Link to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'}>\r\n                                        <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", height:\"27px\",marginTop: \"5px\" }}>\r\n                                            Xem thêm\r\n                                        </Button>\r\n                                    </Link>\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box className=\"footer\">\r\n                        <Box sx={{ display: \"flex\", flexDirection: \"column\", margin: \"0 10px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                THÔNG TIN LIÊN HỆ\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5, marginTop: \"20px\" }}>\r\n                                Hệ Thống Chi Nhánh Bình Minh Solar\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                            </Box>\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                ĐƯỜNG DẪN NHANH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                TRANG CHỦ\r\n                            </Box>\r\n                            <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                SẢN PHẨM\r\n                            </Box>\r\n                            <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                TIN TỨC\r\n                            </Box>\r\n                            <img src='/BoCongThuong.png' style={{ width: \"200px\", height: \"76px\" }} />\r\n\r\n                            <Box sx={{ fontSize: \"16px\", fontWeight: \"bold\", color: \"white\", margin: \"20px 0\" }}>\r\n                                CHÍNH SÁCH\r\n                            </Box>\r\n                            <Divider style={{ height: 1, backgroundColor: \"white\" }} />\r\n                            <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách thanh toán\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách giao hàng\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo hành\r\n                            </Box>\r\n                            <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", margin: \"0 0 20px -2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                Chính sách bảo mật thông tin\r\n                            </Box>\r\n                        </Box>\r\n                    </Box>\r\n                    <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                        <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                            <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                            <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                            <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                            <span>0799177960</span>\r\n                        </div>\r\n                    </a>\r\n                </Box>\r\n            </Box>\r\n        )\r\n    }\r\n    return (\r\n        <Box>\r\n            <Box>\r\n                <Box>\r\n                    <StyledRoot style={{ boxShadow: \"none\", overflowX: \"hidden\", backgroundImage: \"url(/backgroundHeader.jpg)\", height: \"110px\" }}>\r\n                        <Toolbar>\r\n                            <Link style={{ textDecoration: 'none', marginTop: \"10px\" }} to={'/'}>\r\n                                <img src=\"/logoBM.png\" style={{ height: \"90px\", width: \"90px\" }}></img>\r\n                            </Link>\r\n                            <Box textAlign={\"center\"} display={'flex'} flexDirection={'column'} flexGrow={1}>\r\n                                <Typography style={{ color: \"#dd3333\", fontWeight: 700, fontStyle: \"normal\", fontSize: \"30px\" }}>\r\n                                    BÌNH MINH GLOBAL\r\n                                </Typography>\r\n                                <Typography style={{ color: \"#0066bf\", fontSize: \"19px\", fontWeight: 700, fontStyle: \"normal\" }}>\r\n                                    NHÀ CUNG CẤP SỐ 1 VỀ BỒN NƯỚC VÀ NĂNG LƯỢNG MẶT TRỜI\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box display={'flex'} flexDirection={'row'}>\r\n                                <Box component={\"img\"} src=\"/call.gif\" style={{ width: \"58px\", height: \"45px\", paddingRight: \"15px\" }} />\r\n                                <Box display={'flex'} flexDirection={'column'}>\r\n                                    <Typography style={{ fontSize: \"14px\", color: \"black\", fontWeight: \"bold\" }}>\r\n                                        Hotline:\r\n                                    </Typography>\r\n                                    <Typography style={{ fontSize: \"16px\", color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                                        0362.526.678\r\n                                    </Typography>\r\n                                </Box>\r\n                            </Box>\r\n                        </Toolbar>\r\n                    </StyledRoot>\r\n                    <StyledRoot style={{ backgroundColor: \"#0066bf\", marginTop: \"110px\", height: \"50px\" }}>\r\n                        <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"0px 170px\" }}>\r\n                            <Box flexGrow={1}>\r\n                                <ul id=\"nav\">\r\n                                    <li><Link style={{\r\n                                        padding: \"0 24px\",\r\n                                    }} to=\"/\">TRANG CHỦ</Link></li>\r\n                                    <li>\r\n                                        <Link to=\"/loaiSP\" style={{ padding: \"0 24px\", }}>\r\n                                            SẢN PHẨM\r\n                                        </Link>\r\n                                        <Box className=\"subnav\">\r\n                                            {typeProducts.map((typeProduct: any) =>\r\n                                                <li>\r\n                                                    <Link to={`/loaiSP1/${typeProduct._id}`}>\r\n                                                        <Box className=\"boxA\" sx={{ color: \"#333333\", fontWeight: 400, fontSize: 14, fontFamily: \"Roboto\" }}>\r\n                                                            {typeProduct.nameTypeProduct}\r\n                                                        </Box>\r\n                                                    </Link>\r\n\r\n                                                </li>\r\n                                            )}\r\n                                        </Box>\r\n                                    </li>\r\n                                    <li><Link to={'/tintuc'} style={{\r\n                                        backgroundColor: \"white\",\r\n                                        color: \"#0066bf\", padding: \"0 24px\",\r\n                                    }}>TIN TỨC</Link></li>\r\n                                </ul>\r\n                            </Box>\r\n                            <Box>\r\n                                <StyledSearch\r\n                                    value={filterName}\r\n                                    onChange={handleFilterByName}\r\n                                    placeholder=\"Tìm kiếm sản phẩm...\"\r\n                                    startAdornment={\r\n                                        <InputAdornment position=\"start\" style={{ paddingLeft: 1.3 }}>\r\n                                            <SearchIcon style={{ width: '16px' }} sx={{ color: 'rgba(0, 0, 0, 0.87)' }} />\r\n                                        </InputAdornment>\r\n                                    }\r\n                                />\r\n                            </Box>\r\n                            <Box component={Link} to={\"/order\"} sx={{ padding: \"12px 0px\", marginLeft: \"20px\", color: \"white\" }}>\r\n                                <Badge color=\"error\" badgeContent={mapProductList.length}>\r\n                                    <ShoppingCartIcon />{\" \"}\r\n                                </Badge>\r\n                            </Box>\r\n                        </Box>\r\n                    </StyledRoot>\r\n                </Box>\r\n                <Box display={'flex'} flexDirection={'column'} sx={{ margin: \"0 auto\", width: \"1200px\" }}>\r\n                    <Box sx={{ fontSize: \"25px\", fontWeight: \"bold\", margin: \"80px 0 40px 0\" }}>CHUYÊN MỤC: TIN TỨC</Box>\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Box component={Link} to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'}>\r\n                            <img style={{ width: \"240px\" }} src=\"/new1.jpg\" alt=\"Ảnh MNLMT\" />\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                            <Box component={Link} to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'} sx={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                Máy nước nóng năng lượng mặt trời Bình Minh có tốt không?\r\n                            </Box>\r\n                            <Box sx={{ fontSize: \"14px\", lineHeight: 1.5 }}>\r\n                                Ngày nay tốc độ xây dựng nhà ở ngày càng tăng, kéo theo đó nhu cầu dự trữ nước tăng cao khiến thị trường bồn chứa nước, đặc biệt là bồn inox càng trở nên tấp nập hơn bao giờ hết. Do đó mà tình trạng hàng nhái, hàng giả trà trộn là không ít..Vậy […]\r\n                            </Box>\r\n                            <Link to={'/may-nuoc-nong-nang-luong-mat-troi-binh-minh-co-tot-khong'}>\r\n                                <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", marginTop: \"25px\" }}>\r\n                                    Xem thêm\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ margin: \"50px 0\" }}>\r\n                        <Box component={Link} to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'}>\r\n                            <img style={{ width: \"240px\" }} src=\"/new2.jpg\" alt=\"Ảnh MNLMT\" />\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                            <Box component={Link} to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'} sx={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                Những điều cần biết khi chọn mua máy nước nóng năng lượng mặt trời\r\n                            </Box>\r\n                            <Box sx={{ fontSize: \"14px\", lineHeight: 1.5 }}>\r\n                                Được xem là sản phẩm thân thiện với môi trường và tiết kiệm điện, tuy nhiên việc lựa chọn và lắp đặt máy nước nóng năng lượng mặt trời sai nguyên tắc sẽ không mang lại được những tiện ích và công dụng như mong muốn. Dưới đây là những điều bạn cần lưu ý: Ưu […]\r\n                            </Box>\r\n                            <Link to={'/nhung-dieu-can-biet-khi-chon-mua-may-nuoc-nong-nang-luong-mat-troi'}>\r\n                                <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", marginTop: \"68px\" }}>\r\n                                    Xem thêm\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <Box display={'flex'} flexDirection={'row'}>\r\n                        <Box component={Link} to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'}>\r\n                            <img style={{ width: \"240px\" }} src=\"/new3.jpg\" alt=\"Ảnh MNLMT\" />\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ marginLeft: \"25px\" }}>\r\n                            <Box component={Link} to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'} sx={{ fontSize: \"20px\", fontWeight: \"bold\", color: \"black\", textDecoration: \"none\", '&:hover': { color: \"#0066BF\" } }}>\r\n                                Cách để nhận biết và lựa chọn Bồn nước Inox Bình Minh chính hãng\r\n                            </Box>\r\n                            <Box sx={{ fontSize: \"14px\", lineHeight: 1.5 }}>\r\n                                Ngày nay tốc độ xây dựng nhà ở ngày càng tăng, kéo theo đó nhu cầu dự trữ nước tăng cao khiến thị trường bồn chứa nước, đặc biệt là bồn inox càng trở nên tấp nập hơn bao giờ hết. Do đó mà tình trạng hàng nhái, hàng giả trà trộn là không ít..Vậy […]\r\n                            </Box>\r\n                            <Link to={'/cach-de-nhan-biet-va-lua-chon-bon-nuoc-inox-binh-minh-chinh-hang'}>\r\n                                <Button style={{ backgroundColor: \"#0066BF\", color: \"white\", textTransform: \"inherit\", width: \"100px\", marginTop: \"71px\" }}>\r\n                                    Xem thêm\r\n                                </Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </Box >\r\n            <Box>\r\n                <Box sx={{ marginTop: \"100px\" }} className=\"footer\" display={'flex'} alignItems={'center'} justifyContent={'center'}>\r\n                    <Box display={'flex'} flexDirection={'row'} sx={{ padding: \"30px 160px 0px 160px\" }}>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>THÔNG TIN LIÊN HỆ</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box display={'flex'} flexDirection={'column'} sx={{ marginTop: \"20px\", fontFamily: \"Roboto\", float: \"left\" }}>\r\n                                <Box style={{ fontWeight: \"bold\", fontSize: \"14px\", float: \"left\", letterSpacing: 0.5 }}>\r\n                                    Hệ Thống Chi Nhánh Bình Minh Solar\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 1: 369C Tân Thới Hiệp 21, P. Tân Thới Hiệp, Q.12, Tp. Hồ Chí Minh\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 2: 196 Nguyễn Tri Phương, Thành phố Biên Hòa, Đồng Nai\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"10px 0px\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 3: Mỹ Phước Tân Vạn, TP. Thủ Dầu Một, Bình Dương\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, lineHeight: 1.8 }}>\r\n                                    Chi Nhánh 4: KCN Đức Hòa – Long An\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'} sx={{ padding: \"0px 240px\" }}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>ĐƯỜNG DẪN NHANH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    TRANG CHỦ\r\n                                </Box>\r\n                                <Box component={Link} to={'/LoaiSP'} style={{ fontSize: \"14px\", float: \"left\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    SẢN PHẨM\r\n                                </Box>\r\n                                <Box style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5 }}>\r\n                                    TIN TỨC\r\n                                </Box>\r\n                                <img src='/BoCongThuong.png' style={{ marginTop: \"50px\", width: \"200px\", height: \"76px\" }} />\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display={'flex'} flexDirection={'column'}>\r\n                            <Box sx={{ fontSize: \"16px\", fontFamily: \"Roboto\", fontWeight: \"bold\", color: \"white\", float: \"left\" }}>CHÍNH SÁCH</Box>\r\n                            <Divider style={{ border: \"1px solid white\", marginTop: \"20px\", width: \"370px\", float: \"left\" }} />\r\n                            <Box sx={{ fontFamily: \"Roboto\", float: \"left\", display: \"flex\", flexDirection: \"column\" }}>\r\n                                <Box component={Link} to={'/chinh-sach-thanh-toan'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách thanh toán\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-giao-hang'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách giao hàng\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-hanh'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", margin: \"20px 0px\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo hành\r\n                                </Box>\r\n                                <Box component={Link} to={'/chinh-sach-bao-mat-thong-tin'} style={{ fontSize: \"14px\", float: \"left\", marginLeft: \"-2px\", textAlign: \"left\", letterSpacing: 0.5, textDecoration: \"none\", color: \"white\" }}>\r\n                                    Chính sách bảo mật thông tin\r\n                                </Box>\r\n                            </Box>\r\n                        </Box>\r\n                        <a href=\"tel:0799177960\" className=\"hotlinemp all\" rel=\"nofollow\">\r\n                            <div className=\"mypage-alo-phone\" style={{ left: \"0px\" }}>\r\n                                <div className=\"animated infinite zoomIn mypage-alo-ph-circle\"></div>\r\n                                <div className=\"animated infinite pulse mypage-alo-ph-circle-fill\"></div>\r\n                                <div className=\"animated infinite tada mypage-alo-ph-img-circle\" style={{ backgroundColor: \"red\" }}></div>\r\n                                <span>0799177960</span>\r\n                            </div>\r\n                        </a>\r\n                    </Box>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default New;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\guest\\Pagination.js",["1208"],"import React, { useState } from \"react\";\r\n\r\nfunction usePagination(products, itemsPerPage) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = Math.ceil(products.length / itemsPerPage);\r\n\r\n  function currentData() {\r\n    const begin = (currentPage - 1) * itemsPerPage;\r\n    const end = begin + itemsPerPage;\r\n    return products.slice(begin, end);\r\n  }\r\n\r\n  function next() {\r\n    setCurrentPage(currentPage => Math.min(currentPage + 1, maxPage));\r\n  }\r\n\r\n  function prev() {\r\n    setCurrentPage(currentPage => Math.max(currentPage - 1, 1));\r\n  }\r\n\r\n  function jump(page) {\r\n    const pageNumber = Math.max(1, page);\r\n    setCurrentPage(currentPage => Math.min(pageNumber, maxPage));\r\n  }\r\n\r\n  return { next, prev, jump, currentData, currentPage, maxPage };\r\n}\r\n\r\nexport default usePagination;\r\n",["1209","1210"],"D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormCityIpad.tsx",["1211"],"import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { FormControl, FormLabel, Select } from \"@mui/material\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nimport { getCity } from \"../../redux/actions/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { ICity } from \"../../redux/types/city\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0, 0),\r\n        width: 770,\r\n        height: 60,\r\n    },\r\n    placeholder: {\r\n        color: \"#aaa\"\r\n    },\r\n    selectStyle: {\r\n        fontSize: '13px',\r\n        marginBottom: '28px',\r\n        marginTop: 10,\r\n        \"& fieldset\": {\r\n            borderRadius: \"10px\",\r\n        },\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    isCity?: boolean;\r\n};\r\n\r\ninterface IInitialValues {\r\n    city: any;\r\n}\r\n\r\n// const Placeholder = ({ children }: { children: any }) => {\r\n//     const classes = useStyles();\r\n//     return <div className={classes.placeholder}>{children}</div>;\r\n// };\r\n\r\nconst FormCity: React.FC<Props> = ({ isCity = false }): JSX.Element => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const { values, handleChange, handleBlur, touched, errors } =\r\n        useFormikContext<IInitialValues>();\r\n\r\n    const [cities, setCities] = React.useState<ICity[]>([]);\r\n    const City = useSelector((state: RootState) => state.user);\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getCity());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setCities(() => City?.cities?.filter((city: any) => city.nameCity));\r\n    }, [City]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {isCity ? (\r\n                <FormControl className={classes.formControl}>\r\n                    <Select\r\n                        name=\"city._id\"\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"handle-city\"\r\n                        value={values.city._id}\r\n                        defaultValue={'64a67186e2b288d3b57ee1c0'}\r\n                        className={classes.selectStyle}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={touched.city ? Boolean(errors.city) : false}\r\n                        variant={'outlined'}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    fontSize: 10,\r\n                                    height:\"200px\"\r\n                                },\r\n                            },\r\n                        }}\r\n                    >\r\n                        {cities?.map((city: any) => (\r\n                            <MenuItem value={city._id} key={city._id}>\r\n                                {city.nameCity}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            ) : null}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormCity;\r\n","D:\\WORKSPACE\\Project\\BinhMinhGlobal\\frontend\\src\\pages\\auth\\FormCityMobile.tsx",["1212"],"import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { useFormikContext } from \"formik\";\r\nimport { FormControl, FormLabel, Select } from \"@mui/material\";\r\n\r\nimport { MenuItem } from \"@material-ui/core\";\r\n\r\nimport { getCity } from \"../../redux/actions/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\nimport { ICity } from \"../../redux/types/city\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formLabel: {\r\n        fontWeight: 600,\r\n        marginBottom: theme.spacing(1.5),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(0, 0),\r\n        width: 365,\r\n        height: 60,\r\n    },\r\n    placeholder: {\r\n        color: \"#aaa\"\r\n    },\r\n    selectStyle: {\r\n        fontSize: '13px',\r\n        marginBottom: '28px',\r\n        marginTop: 10,\r\n        \"& fieldset\": {\r\n            borderRadius: \"10px\",\r\n        },\r\n    },\r\n}));\r\n\r\ntype Props = {\r\n    isCity?: boolean;\r\n};\r\n\r\ninterface IInitialValues {\r\n    city: any;\r\n}\r\n\r\n// const Placeholder = ({ children }: { children: any }) => {\r\n//     const classes = useStyles();\r\n//     return <div className={classes.placeholder}>{children}</div>;\r\n// };\r\n\r\nconst FormCity: React.FC<Props> = ({ isCity = false }): JSX.Element => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const { values, handleChange, handleBlur, touched, errors } =\r\n        useFormikContext<IInitialValues>();\r\n\r\n    const [cities, setCities] = React.useState<ICity[]>([]);\r\n    const City = useSelector((state: RootState) => state.user);\r\n\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getCity());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setCities(() => City?.cities?.filter((city: any) => city.nameCity));\r\n    }, [City]);\r\n\r\n    return (\r\n        <>\r\n\r\n            {isCity ? (\r\n                <FormControl className={classes.formControl}>\r\n                    <Select\r\n                        name=\"city._id\"\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"handle-city\"\r\n                        value={values.city._id}\r\n                        defaultValue={'64a67186e2b288d3b57ee1c0'}\r\n                        className={classes.selectStyle}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={touched.city ? Boolean(errors.city) : false}\r\n                        variant={'outlined'}\r\n                        MenuProps={{\r\n                            PaperProps: {\r\n                                style: {\r\n                                    fontSize: 10,\r\n                                    height:\"200px\"\r\n                                },\r\n                            },\r\n                        }}\r\n                    >\r\n                        {cities?.map((city: any) => (\r\n                            <MenuItem value={city._id} key={city._id}>\r\n                                {city.nameCity}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            ) : null}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FormCity;\r\n",{"ruleId":"1213","replacedBy":"1214"},{"ruleId":"1215","replacedBy":"1216"},{"ruleId":"1217","severity":1,"message":"1218","line":34,"column":43,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":45},{"ruleId":"1217","severity":1,"message":"1218","line":34,"column":97,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":99},{"ruleId":"1217","severity":1,"message":"1221","line":34,"column":97,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":99},{"ruleId":"1217","severity":1,"message":"1221","line":34,"column":121,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":123},{"ruleId":"1217","severity":1,"message":"1221","line":34,"column":171,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":173},{"ruleId":"1217","severity":1,"message":"1221","line":34,"column":195,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":197},{"ruleId":"1217","severity":1,"message":"1221","line":34,"column":244,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":246},{"ruleId":"1217","severity":1,"message":"1221","line":34,"column":268,"nodeType":"1219","messageId":"1220","endLine":34,"endColumn":270},{"ruleId":"1222","severity":1,"message":"1223","line":38,"column":11,"nodeType":"1224","endLine":38,"endColumn":81},{"ruleId":"1225","severity":1,"message":"1226","line":7,"column":8,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1229","line":8,"column":8,"nodeType":"1227","messageId":"1228","endLine":8,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1230","line":2,"column":18,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1231","line":7,"column":94,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":106},{"ruleId":"1225","severity":1,"message":"1232","line":18,"column":10,"nodeType":"1227","messageId":"1228","endLine":18,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1233","line":21,"column":19,"nodeType":"1227","messageId":"1228","endLine":21,"endColumn":32},{"ruleId":"1234","severity":1,"message":"1235","line":114,"column":27,"nodeType":"1236","messageId":"1237","endLine":114,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1239","line":116,"column":8,"nodeType":"1240","endLine":116,"endColumn":14,"suggestions":"1241"},{"ruleId":"1217","severity":1,"message":"1221","line":150,"column":109,"nodeType":"1219","messageId":"1220","endLine":150,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":150,"column":197,"nodeType":"1219","messageId":"1220","endLine":150,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":171,"column":29,"nodeType":"1224","endLine":171,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":340,"column":33,"nodeType":"1224","endLine":340,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1230","line":2,"column":18,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1231","line":7,"column":94,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":106},{"ruleId":"1225","severity":1,"message":"1232","line":18,"column":10,"nodeType":"1227","messageId":"1228","endLine":18,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1233","line":21,"column":18,"nodeType":"1227","messageId":"1228","endLine":21,"endColumn":31},{"ruleId":"1234","severity":1,"message":"1235","line":107,"column":23,"nodeType":"1236","messageId":"1237","endLine":107,"endColumn":25},{"ruleId":"1238","severity":1,"message":"1239","line":109,"column":8,"nodeType":"1240","endLine":109,"endColumn":14,"suggestions":"1242"},{"ruleId":"1217","severity":1,"message":"1221","line":143,"column":109,"nodeType":"1219","messageId":"1220","endLine":143,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":143,"column":197,"nodeType":"1219","messageId":"1220","endLine":143,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":164,"column":29,"nodeType":"1224","endLine":164,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":327,"column":33,"nodeType":"1224","endLine":327,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1230","line":2,"column":18,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1231","line":7,"column":94,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":106},{"ruleId":"1225","severity":1,"message":"1232","line":18,"column":10,"nodeType":"1227","messageId":"1228","endLine":18,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1233","line":21,"column":18,"nodeType":"1227","messageId":"1228","endLine":21,"endColumn":31},{"ruleId":"1234","severity":1,"message":"1235","line":114,"column":27,"nodeType":"1236","messageId":"1237","endLine":114,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1239","line":116,"column":8,"nodeType":"1240","endLine":116,"endColumn":14,"suggestions":"1243"},{"ruleId":"1217","severity":1,"message":"1221","line":150,"column":109,"nodeType":"1219","messageId":"1220","endLine":150,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":150,"column":197,"nodeType":"1219","messageId":"1220","endLine":150,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":171,"column":29,"nodeType":"1224","endLine":171,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":340,"column":33,"nodeType":"1224","endLine":340,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1244","line":4,"column":22,"nodeType":"1227","messageId":"1228","endLine":4,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1245","line":4,"column":33,"nodeType":"1227","messageId":"1228","endLine":4,"endColumn":44},{"ruleId":"1225","severity":1,"message":"1246","line":7,"column":123,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1247","line":7,"column":162,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":169},{"ruleId":"1225","severity":1,"message":"1248","line":49,"column":10,"nodeType":"1227","messageId":"1228","endLine":49,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1249","line":61,"column":10,"nodeType":"1227","messageId":"1228","endLine":61,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1250","line":83,"column":12,"nodeType":"1227","messageId":"1228","endLine":83,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1251","line":83,"column":22,"nodeType":"1227","messageId":"1228","endLine":83,"endColumn":33},{"ruleId":"1225","severity":1,"message":"1252","line":87,"column":25,"nodeType":"1227","messageId":"1228","endLine":87,"endColumn":39},{"ruleId":"1234","severity":1,"message":"1235","line":108,"column":78,"nodeType":"1236","messageId":"1237","endLine":108,"endColumn":80},{"ruleId":"1238","severity":1,"message":"1253","line":116,"column":8,"nodeType":"1240","endLine":116,"endColumn":17,"suggestions":"1254"},{"ruleId":"1222","severity":1,"message":"1223","line":164,"column":37,"nodeType":"1224","endLine":164,"endColumn":95},{"ruleId":"1234","severity":1,"message":"1235","line":270,"column":76,"nodeType":"1236","messageId":"1237","endLine":270,"endColumn":78},{"ruleId":"1238","severity":1,"message":"1253","line":278,"column":6,"nodeType":"1240","endLine":278,"endColumn":15,"suggestions":"1255"},{"ruleId":"1225","severity":1,"message":"1246","line":8,"column":139,"nodeType":"1227","messageId":"1228","endLine":8,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1256","line":132,"column":10,"nodeType":"1227","messageId":"1228","endLine":132,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1252","line":190,"column":25,"nodeType":"1227","messageId":"1228","endLine":190,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1257","line":193,"column":19,"nodeType":"1227","messageId":"1228","endLine":193,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1258","line":194,"column":21,"nodeType":"1227","messageId":"1228","endLine":194,"endColumn":31},{"ruleId":"1234","severity":1,"message":"1235","line":235,"column":78,"nodeType":"1236","messageId":"1237","endLine":235,"endColumn":80},{"ruleId":"1238","severity":1,"message":"1253","line":243,"column":8,"nodeType":"1240","endLine":243,"endColumn":17,"suggestions":"1259"},{"ruleId":"1222","severity":1,"message":"1223","line":291,"column":37,"nodeType":"1224","endLine":291,"endColumn":96},{"ruleId":"1234","severity":1,"message":"1235","line":262,"column":71,"nodeType":"1236","messageId":"1237","endLine":262,"endColumn":73},{"ruleId":"1238","severity":1,"message":"1239","line":263,"column":6,"nodeType":"1240","endLine":263,"endColumn":15,"suggestions":"1260"},{"ruleId":"1225","severity":1,"message":"1261","line":15,"column":100,"nodeType":"1227","messageId":"1228","endLine":15,"endColumn":109},{"ruleId":"1225","severity":1,"message":"1262","line":16,"column":10,"nodeType":"1227","messageId":"1228","endLine":16,"endColumn":16},{"ruleId":"1263","severity":1,"message":"1264","line":203,"column":59,"nodeType":"1265","messageId":"1266","endLine":203,"endColumn":61},{"ruleId":"1225","severity":1,"message":"1267","line":58,"column":10,"nodeType":"1227","messageId":"1228","endLine":58,"endColumn":21},{"ruleId":"1263","severity":1,"message":"1264","line":216,"column":56,"nodeType":"1265","messageId":"1266","endLine":216,"endColumn":58},{"ruleId":"1234","severity":1,"message":"1235","line":270,"column":93,"nodeType":"1236","messageId":"1237","endLine":270,"endColumn":95},{"ruleId":"1238","severity":1,"message":"1239","line":271,"column":8,"nodeType":"1240","endLine":271,"endColumn":17,"suggestions":"1268"},{"ruleId":"1225","severity":1,"message":"1269","line":209,"column":33,"nodeType":"1227","messageId":"1228","endLine":209,"endColumn":39},{"ruleId":"1225","severity":1,"message":"1270","line":221,"column":10,"nodeType":"1227","messageId":"1228","endLine":221,"endColumn":18},{"ruleId":"1222","severity":1,"message":"1223","line":330,"column":11,"nodeType":"1224","endLine":330,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1271","line":7,"column":10,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1272","line":9,"column":8,"nodeType":"1227","messageId":"1228","endLine":9,"endColumn":17},{"ruleId":"1225","severity":1,"message":"1273","line":12,"column":52,"nodeType":"1227","messageId":"1228","endLine":12,"endColumn":56},{"ruleId":"1225","severity":1,"message":"1274","line":16,"column":66,"nodeType":"1227","messageId":"1228","endLine":16,"endColumn":74},{"ruleId":"1225","severity":1,"message":"1275","line":16,"column":76,"nodeType":"1227","messageId":"1228","endLine":16,"endColumn":82},{"ruleId":"1225","severity":1,"message":"1276","line":81,"column":9,"nodeType":"1227","messageId":"1228","endLine":81,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1277","line":104,"column":9,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1275","line":5,"column":10,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1274","line":5,"column":18,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1270","line":16,"column":10,"nodeType":"1227","messageId":"1228","endLine":16,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1267","line":115,"column":10,"nodeType":"1227","messageId":"1228","endLine":115,"endColumn":21},{"ruleId":"1222","severity":1,"message":"1223","line":159,"column":11,"nodeType":"1224","endLine":159,"endColumn":35},{"ruleId":"1225","severity":1,"message":"1274","line":6,"column":177,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":185},{"ruleId":"1234","severity":1,"message":"1235","line":111,"column":27,"nodeType":"1236","messageId":"1237","endLine":111,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1239","line":113,"column":8,"nodeType":"1240","endLine":113,"endColumn":14,"suggestions":"1278"},{"ruleId":"1217","severity":1,"message":"1221","line":147,"column":109,"nodeType":"1219","messageId":"1220","endLine":147,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":147,"column":197,"nodeType":"1219","messageId":"1220","endLine":147,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":168,"column":29,"nodeType":"1224","endLine":168,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":319,"column":33,"nodeType":"1224","endLine":319,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1274","line":6,"column":177,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":185},{"ruleId":"1234","severity":1,"message":"1235","line":111,"column":27,"nodeType":"1236","messageId":"1237","endLine":111,"endColumn":29},{"ruleId":"1238","severity":1,"message":"1239","line":113,"column":8,"nodeType":"1240","endLine":113,"endColumn":14,"suggestions":"1279"},{"ruleId":"1217","severity":1,"message":"1221","line":147,"column":109,"nodeType":"1219","messageId":"1220","endLine":147,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":147,"column":197,"nodeType":"1219","messageId":"1220","endLine":147,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":168,"column":29,"nodeType":"1224","endLine":168,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":319,"column":33,"nodeType":"1224","endLine":319,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1280","line":6,"column":10,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1281","line":6,"column":83,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":93},{"ruleId":"1225","severity":1,"message":"1282","line":9,"column":10,"nodeType":"1227","messageId":"1228","endLine":9,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1283","line":10,"column":10,"nodeType":"1227","messageId":"1228","endLine":10,"endColumn":17},{"ruleId":"1225","severity":1,"message":"1284","line":19,"column":10,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1285","line":19,"column":18,"nodeType":"1227","messageId":"1228","endLine":19,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1286","line":75,"column":11,"nodeType":"1227","messageId":"1228","endLine":75,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1287","line":76,"column":11,"nodeType":"1227","messageId":"1228","endLine":76,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1288","line":79,"column":11,"nodeType":"1227","messageId":"1228","endLine":79,"endColumn":26},{"ruleId":"1234","severity":1,"message":"1235","line":110,"column":33,"nodeType":"1236","messageId":"1237","endLine":110,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1289","line":112,"column":8,"nodeType":"1240","endLine":112,"endColumn":14,"suggestions":"1290"},{"ruleId":"1217","severity":1,"message":"1221","line":146,"column":109,"nodeType":"1219","messageId":"1220","endLine":146,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":146,"column":197,"nodeType":"1219","messageId":"1220","endLine":146,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":167,"column":29,"nodeType":"1224","endLine":167,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":255,"column":33,"nodeType":"1224","endLine":255,"endColumn":121},{"ruleId":"1225","severity":1,"message":"1291","line":3,"column":71,"nodeType":"1227","messageId":"1228","endLine":3,"endColumn":80},{"ruleId":"1225","severity":1,"message":"1292","line":5,"column":13,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1293","line":107,"column":19,"nodeType":"1227","messageId":"1228","endLine":107,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1293","line":99,"column":19,"nodeType":"1227","messageId":"1228","endLine":99,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1294","line":9,"column":10,"nodeType":"1227","messageId":"1228","endLine":9,"endColumn":22},{"ruleId":"1225","severity":1,"message":"1295","line":9,"column":24,"nodeType":"1227","messageId":"1228","endLine":9,"endColumn":38},{"ruleId":"1225","severity":1,"message":"1296","line":103,"column":11,"nodeType":"1227","messageId":"1228","endLine":103,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1293","line":104,"column":19,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":27},{"ruleId":"1234","severity":1,"message":"1235","line":110,"column":155,"nodeType":"1236","messageId":"1237","endLine":110,"endColumn":157},{"ruleId":"1234","severity":1,"message":"1235","line":132,"column":67,"nodeType":"1236","messageId":"1237","endLine":132,"endColumn":69},{"ruleId":"1234","severity":1,"message":"1235","line":136,"column":70,"nodeType":"1236","messageId":"1237","endLine":136,"endColumn":72},{"ruleId":"1234","severity":1,"message":"1235","line":140,"column":70,"nodeType":"1236","messageId":"1237","endLine":140,"endColumn":72},{"ruleId":"1225","severity":1,"message":"1297","line":3,"column":76,"nodeType":"1227","messageId":"1228","endLine":3,"endColumn":86},{"ruleId":"1225","severity":1,"message":"1298","line":106,"column":11,"nodeType":"1227","messageId":"1228","endLine":106,"endColumn":15},{"ruleId":"1225","severity":1,"message":"1293","line":107,"column":19,"nodeType":"1227","messageId":"1228","endLine":107,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1299","line":109,"column":14,"nodeType":"1227","messageId":"1228","endLine":109,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1300","line":113,"column":14,"nodeType":"1227","messageId":"1228","endLine":113,"endColumn":34},{"ruleId":"1225","severity":1,"message":"1296","line":95,"column":11,"nodeType":"1227","messageId":"1228","endLine":95,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1298","line":96,"column":11,"nodeType":"1227","messageId":"1228","endLine":96,"endColumn":15},{"ruleId":"1225","severity":1,"message":"1293","line":97,"column":19,"nodeType":"1227","messageId":"1228","endLine":97,"endColumn":27},{"ruleId":"1225","severity":1,"message":"1291","line":3,"column":71,"nodeType":"1227","messageId":"1228","endLine":3,"endColumn":80},{"ruleId":"1225","severity":1,"message":"1301","line":3,"column":82,"nodeType":"1227","messageId":"1228","endLine":3,"endColumn":98},{"ruleId":"1225","severity":1,"message":"1293","line":104,"column":19,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":27},{"ruleId":"1234","severity":1,"message":"1235","line":136,"column":63,"nodeType":"1236","messageId":"1237","endLine":136,"endColumn":65},{"ruleId":"1234","severity":1,"message":"1235","line":140,"column":66,"nodeType":"1236","messageId":"1237","endLine":140,"endColumn":68},{"ruleId":"1234","severity":1,"message":"1235","line":144,"column":66,"nodeType":"1236","messageId":"1237","endLine":144,"endColumn":68},{"ruleId":"1234","severity":1,"message":"1235","line":180,"column":72,"nodeType":"1236","messageId":"1237","endLine":180,"endColumn":74},{"ruleId":"1217","severity":1,"message":"1218","line":180,"column":98,"nodeType":"1219","messageId":"1220","endLine":180,"endColumn":100},{"ruleId":"1234","severity":1,"message":"1235","line":180,"column":118,"nodeType":"1236","messageId":"1237","endLine":180,"endColumn":120},{"ruleId":"1217","severity":1,"message":"1218","line":180,"column":137,"nodeType":"1219","messageId":"1220","endLine":180,"endColumn":139},{"ruleId":"1217","severity":1,"message":"1221","line":180,"column":137,"nodeType":"1219","messageId":"1220","endLine":180,"endColumn":139},{"ruleId":"1234","severity":1,"message":"1235","line":180,"column":159,"nodeType":"1236","messageId":"1237","endLine":180,"endColumn":161},{"ruleId":"1217","severity":1,"message":"1221","line":180,"column":185,"nodeType":"1219","messageId":"1220","endLine":180,"endColumn":187},{"ruleId":"1234","severity":1,"message":"1235","line":180,"column":205,"nodeType":"1236","messageId":"1237","endLine":180,"endColumn":207},{"ruleId":"1225","severity":1,"message":"1293","line":104,"column":19,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":27},{"ruleId":"1234","severity":1,"message":"1235","line":185,"column":126,"nodeType":"1236","messageId":"1237","endLine":185,"endColumn":128},{"ruleId":"1225","severity":1,"message":"1233","line":20,"column":18,"nodeType":"1227","messageId":"1228","endLine":20,"endColumn":31},{"ruleId":"1234","severity":1,"message":"1235","line":111,"column":33,"nodeType":"1236","messageId":"1237","endLine":111,"endColumn":35},{"ruleId":"1238","severity":1,"message":"1289","line":113,"column":8,"nodeType":"1240","endLine":113,"endColumn":14,"suggestions":"1302"},{"ruleId":"1217","severity":1,"message":"1221","line":147,"column":109,"nodeType":"1219","messageId":"1220","endLine":147,"endColumn":111},{"ruleId":"1217","severity":1,"message":"1221","line":147,"column":197,"nodeType":"1219","messageId":"1220","endLine":147,"endColumn":199},{"ruleId":"1222","severity":1,"message":"1223","line":168,"column":29,"nodeType":"1224","endLine":168,"endColumn":99},{"ruleId":"1222","severity":1,"message":"1223","line":337,"column":33,"nodeType":"1224","endLine":337,"endColumn":121},{"ruleId":"1225","severity":1,"message":"1303","line":6,"column":8,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1304","line":8,"column":8,"nodeType":"1227","messageId":"1228","endLine":8,"endColumn":17},{"ruleId":"1225","severity":1,"message":"1305","line":9,"column":8,"nodeType":"1227","messageId":"1228","endLine":9,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1306","line":10,"column":8,"nodeType":"1227","messageId":"1228","endLine":10,"endColumn":15},{"ruleId":"1225","severity":1,"message":"1307","line":12,"column":10,"nodeType":"1227","messageId":"1228","endLine":12,"endColumn":14},{"ruleId":"1225","severity":1,"message":"1308","line":12,"column":16,"nodeType":"1227","messageId":"1228","endLine":12,"endColumn":23},{"ruleId":"1225","severity":1,"message":"1280","line":14,"column":10,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":16},{"ruleId":"1225","severity":1,"message":"1309","line":14,"column":47,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":58},{"ruleId":"1225","severity":1,"message":"1247","line":14,"column":76,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":83},{"ruleId":"1225","severity":1,"message":"1261","line":14,"column":100,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":109},{"ruleId":"1225","severity":1,"message":"1310","line":14,"column":133,"nodeType":"1227","messageId":"1228","endLine":14,"endColumn":140},{"ruleId":"1225","severity":1,"message":"1311","line":16,"column":10,"nodeType":"1227","messageId":"1228","endLine":16,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1282","line":17,"column":10,"nodeType":"1227","messageId":"1228","endLine":17,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1287","line":36,"column":11,"nodeType":"1227","messageId":"1228","endLine":36,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1288","line":44,"column":11,"nodeType":"1227","messageId":"1228","endLine":44,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1312","line":64,"column":11,"nodeType":"1227","messageId":"1228","endLine":64,"endColumn":25},{"ruleId":"1225","severity":1,"message":"1313","line":73,"column":11,"nodeType":"1227","messageId":"1228","endLine":73,"endColumn":26},{"ruleId":"1225","severity":1,"message":"1314","line":5,"column":33,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":42},{"ruleId":"1225","severity":1,"message":"1315","line":5,"column":52,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":55},{"ruleId":"1213","replacedBy":"1316"},{"ruleId":"1215","replacedBy":"1317"},{"ruleId":"1225","severity":1,"message":"1318","line":16,"column":10,"nodeType":"1227","messageId":"1228","endLine":16,"endColumn":19},{"ruleId":"1225","severity":1,"message":"1319","line":28,"column":7,"nodeType":"1227","messageId":"1228","endLine":28,"endColumn":21},{"ruleId":"1217","severity":1,"message":"1218","line":19,"column":62,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":64},{"ruleId":"1217","severity":1,"message":"1218","line":19,"column":108,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":110},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":108,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":110},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":170,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":172},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":216,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":218},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":278,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":280},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":327,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":329},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":389,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":391},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":438,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":440},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":500,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":502},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":552,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":554},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":614,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":616},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":667,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":669},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":729,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":731},{"ruleId":"1217","severity":1,"message":"1218","line":46,"column":45,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":47},{"ruleId":"1217","severity":1,"message":"1218","line":46,"column":91,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":93},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":91,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":93},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":116,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":118},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":162,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":164},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":187,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":189},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":236,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":238},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":261,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":263},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":310,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":312},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":335,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":337},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":387,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":389},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":412,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":414},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":465,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":467},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":490,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":492},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":546,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":548},{"ruleId":"1217","severity":1,"message":"1221","line":46,"column":571,"nodeType":"1219","messageId":"1220","endLine":46,"endColumn":573},{"ruleId":"1217","severity":1,"message":"1218","line":62,"column":41,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":43},{"ruleId":"1217","severity":1,"message":"1218","line":62,"column":87,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":89},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":87,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":89},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":112,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":114},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":158,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":160},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":183,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":185},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":232,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":234},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":257,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":259},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":306,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":308},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":331,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":333},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":383,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":385},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":408,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":410},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":461,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":463},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":486,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":488},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":542,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":544},{"ruleId":"1217","severity":1,"message":"1221","line":62,"column":567,"nodeType":"1219","messageId":"1220","endLine":62,"endColumn":569},{"ruleId":"1217","severity":1,"message":"1218","line":19,"column":78,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":80},{"ruleId":"1217","severity":1,"message":"1218","line":19,"column":124,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":126},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":124,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":126},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":186,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":188},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":232,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":234},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":294,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":296},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":343,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":345},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":405,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":407},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":454,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":456},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":516,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":518},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":568,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":570},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":630,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":632},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":683,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":685},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":745,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":747},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":801,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":803},{"ruleId":"1217","severity":1,"message":"1221","line":19,"column":863,"nodeType":"1219","messageId":"1220","endLine":19,"endColumn":865},{"ruleId":"1225","severity":1,"message":"1320","line":2,"column":10,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1321","line":7,"column":90,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":7,"column":110,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":7,"column":116,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":7,"column":126,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":7,"column":140,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":154},{"ruleId":"1234","severity":1,"message":"1235","line":161,"column":92,"nodeType":"1236","messageId":"1237","endLine":161,"endColumn":94},{"ruleId":"1234","severity":1,"message":"1235","line":162,"column":89,"nodeType":"1236","messageId":"1237","endLine":162,"endColumn":91},{"ruleId":"1222","severity":1,"message":"1223","line":308,"column":33,"nodeType":"1224","endLine":308,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":351,"column":49,"nodeType":"1224","endLine":351,"endColumn":140},{"ruleId":"1222","severity":1,"message":"1223","line":363,"column":49,"nodeType":"1224","endLine":363,"endColumn":143},{"ruleId":"1222","severity":1,"message":"1223","line":375,"column":49,"nodeType":"1224","endLine":375,"endColumn":142},{"ruleId":"1222","severity":1,"message":"1223","line":387,"column":49,"nodeType":"1224","endLine":387,"endColumn":140},{"ruleId":"1222","severity":1,"message":"1223","line":409,"column":49,"nodeType":"1224","endLine":409,"endColumn":141},{"ruleId":"1217","severity":1,"message":"1218","line":440,"column":164,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":166},{"ruleId":"1217","severity":1,"message":"1218","line":440,"column":242,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":244},{"ruleId":"1217","severity":1,"message":"1221","line":440,"column":242,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":244},{"ruleId":"1217","severity":1,"message":"1221","line":440,"column":337,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":339},{"ruleId":"1217","severity":1,"message":"1221","line":440,"column":415,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":417},{"ruleId":"1217","severity":1,"message":"1221","line":440,"column":510,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":512},{"ruleId":"1217","severity":1,"message":"1221","line":440,"column":588,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":590},{"ruleId":"1217","severity":1,"message":"1221","line":440,"column":683,"nodeType":"1219","messageId":"1220","endLine":440,"endColumn":685},{"ruleId":"1222","severity":1,"message":"1223","line":443,"column":49,"nodeType":"1224","endLine":443,"endColumn":141},{"ruleId":"1217","severity":1,"message":"1218","line":474,"column":163,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":165},{"ruleId":"1217","severity":1,"message":"1218","line":474,"column":250,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":252},{"ruleId":"1217","severity":1,"message":"1221","line":474,"column":250,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":252},{"ruleId":"1217","severity":1,"message":"1221","line":474,"column":344,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":346},{"ruleId":"1217","severity":1,"message":"1221","line":474,"column":431,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":433},{"ruleId":"1217","severity":1,"message":"1221","line":474,"column":525,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":527},{"ruleId":"1217","severity":1,"message":"1221","line":474,"column":612,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":614},{"ruleId":"1217","severity":1,"message":"1221","line":474,"column":706,"nodeType":"1219","messageId":"1220","endLine":474,"endColumn":708},{"ruleId":"1222","severity":1,"message":"1223","line":477,"column":49,"nodeType":"1224","endLine":477,"endColumn":141},{"ruleId":"1222","severity":1,"message":"1223","line":510,"column":49,"nodeType":"1224","endLine":510,"endColumn":141},{"ruleId":"1222","severity":1,"message":"1223","line":544,"column":49,"nodeType":"1224","endLine":544,"endColumn":141},{"ruleId":"1222","severity":1,"message":"1223","line":603,"column":29,"nodeType":"1224","endLine":603,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":642,"column":33,"nodeType":"1224","endLine":642,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":682,"column":49,"nodeType":"1224","endLine":682,"endColumn":140},{"ruleId":"1222","severity":1,"message":"1223","line":694,"column":49,"nodeType":"1224","endLine":694,"endColumn":143},{"ruleId":"1222","severity":1,"message":"1223","line":706,"column":49,"nodeType":"1224","endLine":706,"endColumn":142},{"ruleId":"1222","severity":1,"message":"1223","line":718,"column":49,"nodeType":"1224","endLine":718,"endColumn":140},{"ruleId":"1222","severity":1,"message":"1223","line":740,"column":45,"nodeType":"1224","endLine":740,"endColumn":137},{"ruleId":"1217","severity":1,"message":"1218","line":771,"column":160,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":162},{"ruleId":"1217","severity":1,"message":"1218","line":771,"column":238,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":240},{"ruleId":"1217","severity":1,"message":"1221","line":771,"column":238,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":240},{"ruleId":"1217","severity":1,"message":"1221","line":771,"column":333,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":335},{"ruleId":"1217","severity":1,"message":"1221","line":771,"column":411,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":413},{"ruleId":"1217","severity":1,"message":"1221","line":771,"column":506,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":508},{"ruleId":"1217","severity":1,"message":"1221","line":771,"column":584,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":586},{"ruleId":"1217","severity":1,"message":"1221","line":771,"column":679,"nodeType":"1219","messageId":"1220","endLine":771,"endColumn":681},{"ruleId":"1222","severity":1,"message":"1223","line":774,"column":45,"nodeType":"1224","endLine":774,"endColumn":137},{"ruleId":"1217","severity":1,"message":"1218","line":805,"column":159,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":161},{"ruleId":"1217","severity":1,"message":"1218","line":805,"column":246,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":248},{"ruleId":"1217","severity":1,"message":"1221","line":805,"column":246,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":248},{"ruleId":"1217","severity":1,"message":"1221","line":805,"column":340,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":342},{"ruleId":"1217","severity":1,"message":"1221","line":805,"column":427,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":429},{"ruleId":"1217","severity":1,"message":"1221","line":805,"column":521,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":523},{"ruleId":"1217","severity":1,"message":"1221","line":805,"column":608,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":610},{"ruleId":"1217","severity":1,"message":"1221","line":805,"column":702,"nodeType":"1219","messageId":"1220","endLine":805,"endColumn":704},{"ruleId":"1222","severity":1,"message":"1223","line":808,"column":45,"nodeType":"1224","endLine":808,"endColumn":137},{"ruleId":"1222","severity":1,"message":"1223","line":841,"column":45,"nodeType":"1224","endLine":841,"endColumn":137},{"ruleId":"1222","severity":1,"message":"1223","line":875,"column":45,"nodeType":"1224","endLine":875,"endColumn":137},{"ruleId":"1222","severity":1,"message":"1223","line":933,"column":29,"nodeType":"1224","endLine":933,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":972,"column":33,"nodeType":"1224","endLine":972,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":1060,"column":45,"nodeType":"1224","endLine":1060,"endColumn":136},{"ruleId":"1222","severity":1,"message":"1223","line":1072,"column":45,"nodeType":"1224","endLine":1072,"endColumn":139},{"ruleId":"1222","severity":1,"message":"1223","line":1084,"column":45,"nodeType":"1224","endLine":1084,"endColumn":138},{"ruleId":"1222","severity":1,"message":"1223","line":1096,"column":45,"nodeType":"1224","endLine":1096,"endColumn":136},{"ruleId":"1222","severity":1,"message":"1223","line":1108,"column":45,"nodeType":"1224","endLine":1108,"endColumn":135},{"ruleId":"1222","severity":1,"message":"1223","line":1132,"column":37,"nodeType":"1224","endLine":1132,"endColumn":129},{"ruleId":"1217","severity":1,"message":"1218","line":1163,"column":152,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":154},{"ruleId":"1217","severity":1,"message":"1218","line":1163,"column":230,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":232},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":230,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":232},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":325,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":327},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":403,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":405},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":498,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":500},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":576,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":578},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":671,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":673},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":749,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":751},{"ruleId":"1217","severity":1,"message":"1221","line":1163,"column":844,"nodeType":"1219","messageId":"1220","endLine":1163,"endColumn":846},{"ruleId":"1222","severity":1,"message":"1223","line":1166,"column":37,"nodeType":"1224","endLine":1166,"endColumn":129},{"ruleId":"1217","severity":1,"message":"1218","line":1197,"column":151,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":153},{"ruleId":"1217","severity":1,"message":"1218","line":1197,"column":238,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":240},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":238,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":240},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":332,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":334},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":419,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":421},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":513,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":515},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":600,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":602},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":694,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":696},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":781,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":783},{"ruleId":"1217","severity":1,"message":"1221","line":1197,"column":875,"nodeType":"1219","messageId":"1220","endLine":1197,"endColumn":877},{"ruleId":"1222","severity":1,"message":"1223","line":1200,"column":37,"nodeType":"1224","endLine":1200,"endColumn":129},{"ruleId":"1222","severity":1,"message":"1223","line":1234,"column":37,"nodeType":"1224","endLine":1234,"endColumn":129},{"ruleId":"1222","severity":1,"message":"1223","line":1268,"column":37,"nodeType":"1224","endLine":1268,"endColumn":129},{"ruleId":"1222","severity":1,"message":"1223","line":1328,"column":33,"nodeType":"1224","endLine":1328,"endColumn":126},{"ruleId":"1263","severity":1,"message":"1264","line":202,"column":56,"nodeType":"1265","messageId":"1266","endLine":202,"endColumn":58},{"ruleId":"1225","severity":1,"message":"1297","line":2,"column":87,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":97},{"ruleId":"1225","severity":1,"message":"1326","line":8,"column":8,"nodeType":"1227","messageId":"1228","endLine":8,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1297","line":2,"column":87,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":97},{"ruleId":"1225","severity":1,"message":"1314","line":5,"column":23,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1327","line":9,"column":8,"nodeType":"1227","messageId":"1228","endLine":9,"endColumn":23},{"ruleId":"1213","replacedBy":"1328"},{"ruleId":"1215","replacedBy":"1329"},{"ruleId":"1225","severity":1,"message":"1330","line":2,"column":18,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":28},{"ruleId":"1234","severity":1,"message":"1235","line":93,"column":41,"nodeType":"1236","messageId":"1237","endLine":93,"endColumn":43},{"ruleId":"1238","severity":1,"message":"1239","line":95,"column":8,"nodeType":"1240","endLine":95,"endColumn":14,"suggestions":"1331"},{"ruleId":"1234","severity":1,"message":"1235","line":148,"column":92,"nodeType":"1236","messageId":"1237","endLine":148,"endColumn":94},{"ruleId":"1234","severity":1,"message":"1235","line":149,"column":89,"nodeType":"1236","messageId":"1237","endLine":149,"endColumn":91},{"ruleId":"1222","severity":1,"message":"1223","line":256,"column":33,"nodeType":"1224","endLine":256,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":300,"column":45,"nodeType":"1224","endLine":300,"endColumn":173},{"ruleId":"1222","severity":1,"message":"1223","line":359,"column":29,"nodeType":"1224","endLine":359,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":398,"column":33,"nodeType":"1224","endLine":398,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":441,"column":41,"nodeType":"1224","endLine":441,"endColumn":133},{"ruleId":"1222","severity":1,"message":"1223","line":498,"column":29,"nodeType":"1224","endLine":498,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":537,"column":33,"nodeType":"1224","endLine":537,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":626,"column":41,"nodeType":"1224","endLine":626,"endColumn":169},{"ruleId":"1222","severity":1,"message":"1223","line":686,"column":33,"nodeType":"1224","endLine":686,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1330","line":2,"column":18,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":28},{"ruleId":"1234","severity":1,"message":"1235","line":93,"column":41,"nodeType":"1236","messageId":"1237","endLine":93,"endColumn":43},{"ruleId":"1238","severity":1,"message":"1239","line":95,"column":8,"nodeType":"1240","endLine":95,"endColumn":14,"suggestions":"1332"},{"ruleId":"1234","severity":1,"message":"1235","line":148,"column":92,"nodeType":"1236","messageId":"1237","endLine":148,"endColumn":94},{"ruleId":"1234","severity":1,"message":"1235","line":149,"column":89,"nodeType":"1236","messageId":"1237","endLine":149,"endColumn":91},{"ruleId":"1222","severity":1,"message":"1223","line":256,"column":33,"nodeType":"1224","endLine":256,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":300,"column":45,"nodeType":"1224","endLine":300,"endColumn":173},{"ruleId":"1222","severity":1,"message":"1223","line":359,"column":29,"nodeType":"1224","endLine":359,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":398,"column":33,"nodeType":"1224","endLine":398,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":441,"column":41,"nodeType":"1224","endLine":441,"endColumn":133},{"ruleId":"1222","severity":1,"message":"1223","line":498,"column":29,"nodeType":"1224","endLine":498,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":537,"column":33,"nodeType":"1224","endLine":537,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":626,"column":41,"nodeType":"1224","endLine":626,"endColumn":169},{"ruleId":"1222","severity":1,"message":"1223","line":686,"column":33,"nodeType":"1224","endLine":686,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1333","line":13,"column":13,"nodeType":"1227","messageId":"1228","endLine":13,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1334","line":13,"column":22,"nodeType":"1227","messageId":"1228","endLine":13,"endColumn":31},{"ruleId":"1225","severity":1,"message":"1335","line":23,"column":15,"nodeType":"1227","messageId":"1228","endLine":23,"endColumn":24},{"ruleId":"1225","severity":1,"message":"1335","line":40,"column":15,"nodeType":"1227","messageId":"1228","endLine":40,"endColumn":24},{"ruleId":"1238","severity":1,"message":"1336","line":58,"column":8,"nodeType":"1240","endLine":58,"endColumn":15,"suggestions":"1337"},{"ruleId":"1225","severity":1,"message":"1338","line":66,"column":11,"nodeType":"1227","messageId":"1228","endLine":66,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1339","line":67,"column":11,"nodeType":"1227","messageId":"1228","endLine":67,"endColumn":29},{"ruleId":"1234","severity":1,"message":"1235","line":121,"column":92,"nodeType":"1236","messageId":"1237","endLine":121,"endColumn":94},{"ruleId":"1234","severity":1,"message":"1235","line":122,"column":89,"nodeType":"1236","messageId":"1237","endLine":122,"endColumn":91},{"ruleId":"1234","severity":1,"message":"1235","line":139,"column":29,"nodeType":"1236","messageId":"1237","endLine":139,"endColumn":31},{"ruleId":"1238","severity":1,"message":"1239","line":141,"column":8,"nodeType":"1240","endLine":141,"endColumn":14,"suggestions":"1340"},{"ruleId":"1222","severity":1,"message":"1223","line":247,"column":33,"nodeType":"1224","endLine":247,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":281,"column":45,"nodeType":"1224","endLine":281,"endColumn":156},{"ruleId":"1222","severity":1,"message":"1223","line":284,"column":45,"nodeType":"1224","endLine":284,"endColumn":127},{"ruleId":"1222","severity":1,"message":"1223","line":354,"column":29,"nodeType":"1224","endLine":354,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":393,"column":33,"nodeType":"1224","endLine":393,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":426,"column":41,"nodeType":"1224","endLine":426,"endColumn":152},{"ruleId":"1222","severity":1,"message":"1223","line":429,"column":41,"nodeType":"1224","endLine":429,"endColumn":123},{"ruleId":"1222","severity":1,"message":"1223","line":498,"column":29,"nodeType":"1224","endLine":498,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":537,"column":33,"nodeType":"1224","endLine":537,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":617,"column":41,"nodeType":"1224","endLine":617,"endColumn":152},{"ruleId":"1222","severity":1,"message":"1223","line":620,"column":41,"nodeType":"1224","endLine":620,"endColumn":123},{"ruleId":"1222","severity":1,"message":"1223","line":693,"column":33,"nodeType":"1224","endLine":693,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1341","line":57,"column":12,"nodeType":"1227","messageId":"1228","endLine":57,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1321","line":6,"column":90,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":6,"column":110,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":6,"column":116,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":6,"column":126,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":6,"column":140,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":154},{"ruleId":"1234","severity":1,"message":"1235","line":73,"column":84,"nodeType":"1236","messageId":"1237","endLine":73,"endColumn":86},{"ruleId":"1234","severity":1,"message":"1235","line":74,"column":81,"nodeType":"1236","messageId":"1237","endLine":74,"endColumn":83},{"ruleId":"1234","severity":1,"message":"1235","line":79,"column":82,"nodeType":"1236","messageId":"1237","endLine":79,"endColumn":84},{"ruleId":"1234","severity":1,"message":"1235","line":84,"column":88,"nodeType":"1236","messageId":"1237","endLine":84,"endColumn":90},{"ruleId":"1234","severity":1,"message":"1235","line":85,"column":81,"nodeType":"1236","messageId":"1237","endLine":85,"endColumn":83},{"ruleId":"1225","severity":1,"message":"1342","line":90,"column":12,"nodeType":"1227","messageId":"1228","endLine":90,"endColumn":20},{"ruleId":"1234","severity":1,"message":"1343","line":97,"column":80,"nodeType":"1236","messageId":"1237","endLine":97,"endColumn":82},{"ruleId":"1225","severity":1,"message":"1344","line":151,"column":11,"nodeType":"1227","messageId":"1228","endLine":151,"endColumn":19},{"ruleId":"1222","severity":1,"message":"1223","line":219,"column":33,"nodeType":"1224","endLine":219,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":255,"column":49,"nodeType":"1224","endLine":255,"endColumn":120},{"ruleId":"1222","severity":1,"message":"1223","line":306,"column":38,"nodeType":"1224","endLine":306,"endColumn":91},{"ruleId":"1222","severity":1,"message":"1223","line":347,"column":29,"nodeType":"1224","endLine":347,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":386,"column":33,"nodeType":"1224","endLine":386,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":476,"column":45,"nodeType":"1224","endLine":476,"endColumn":116},{"ruleId":"1222","severity":1,"message":"1223","line":522,"column":29,"nodeType":"1224","endLine":522,"endColumn":58},{"ruleId":"1222","severity":1,"message":"1223","line":565,"column":33,"nodeType":"1224","endLine":565,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1345","line":129,"column":24,"nodeType":"1227","messageId":"1228","endLine":129,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1342","line":134,"column":12,"nodeType":"1227","messageId":"1228","endLine":134,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":287,"column":33,"nodeType":"1224","endLine":287,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":484,"column":69,"nodeType":"1224","endLine":484,"endColumn":160},{"ruleId":"1222","severity":1,"message":"1223","line":603,"column":29,"nodeType":"1224","endLine":603,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":642,"column":33,"nodeType":"1224","endLine":642,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":697,"column":69,"nodeType":"1224","endLine":697,"endColumn":158},{"ruleId":"1222","severity":1,"message":"1223","line":958,"column":29,"nodeType":"1224","endLine":958,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":996,"column":29,"nodeType":"1224","endLine":996,"endColumn":94},{"ruleId":"1222","severity":1,"message":"1223","line":1237,"column":57,"nodeType":"1224","endLine":1237,"endColumn":148},{"ruleId":"1222","severity":1,"message":"1223","line":1358,"column":33,"nodeType":"1224","endLine":1358,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1314","line":5,"column":23,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1250","line":203,"column":12,"nodeType":"1227","messageId":"1228","endLine":203,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1251","line":203,"column":22,"nodeType":"1227","messageId":"1228","endLine":203,"endColumn":33},{"ruleId":"1225","severity":1,"message":"1346","line":6,"column":109,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1234","severity":1,"message":"1235","line":148,"column":92,"nodeType":"1236","messageId":"1237","endLine":148,"endColumn":94},{"ruleId":"1234","severity":1,"message":"1235","line":149,"column":89,"nodeType":"1236","messageId":"1237","endLine":149,"endColumn":91},{"ruleId":"1222","severity":1,"message":"1223","line":267,"column":33,"nodeType":"1224","endLine":267,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":312,"column":45,"nodeType":"1224","endLine":312,"endColumn":173},{"ruleId":"1222","severity":1,"message":"1223","line":381,"column":29,"nodeType":"1224","endLine":381,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":420,"column":33,"nodeType":"1224","endLine":420,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":464,"column":41,"nodeType":"1224","endLine":464,"endColumn":133},{"ruleId":"1222","severity":1,"message":"1223","line":531,"column":29,"nodeType":"1224","endLine":531,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":570,"column":33,"nodeType":"1224","endLine":570,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":661,"column":41,"nodeType":"1224","endLine":661,"endColumn":169},{"ruleId":"1222","severity":1,"message":"1223","line":731,"column":33,"nodeType":"1224","endLine":731,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1320","line":2,"column":10,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1280","line":7,"column":82,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":7,"column":90,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":7,"column":110,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":7,"column":116,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":7,"column":126,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":7,"column":140,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":7,"column":156,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":102,"column":24,"nodeType":"1227","messageId":"1228","endLine":102,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1347","line":104,"column":11,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1342","line":107,"column":12,"nodeType":"1227","messageId":"1228","endLine":107,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":228,"column":33,"nodeType":"1224","endLine":228,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":331,"column":29,"nodeType":"1224","endLine":331,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":370,"column":33,"nodeType":"1224","endLine":370,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":518,"column":33,"nodeType":"1224","endLine":518,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1320","line":2,"column":10,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1330","line":3,"column":18,"nodeType":"1227","messageId":"1228","endLine":3,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1280","line":7,"column":82,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":7,"column":90,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":7,"column":110,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":7,"column":116,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":7,"column":126,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":7,"column":140,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":7,"column":156,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":60,"column":24,"nodeType":"1227","messageId":"1228","endLine":60,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1342","line":64,"column":12,"nodeType":"1227","messageId":"1228","endLine":64,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":185,"column":33,"nodeType":"1224","endLine":185,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":294,"column":29,"nodeType":"1224","endLine":294,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":333,"column":33,"nodeType":"1224","endLine":333,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":487,"column":33,"nodeType":"1224","endLine":487,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1280","line":6,"column":82,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":6,"column":90,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":6,"column":110,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":6,"column":116,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":6,"column":126,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":6,"column":140,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":6,"column":156,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":59,"column":24,"nodeType":"1227","messageId":"1228","endLine":59,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1342","line":63,"column":12,"nodeType":"1227","messageId":"1228","endLine":63,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":184,"column":33,"nodeType":"1224","endLine":184,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":308,"column":29,"nodeType":"1224","endLine":308,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":347,"column":33,"nodeType":"1224","endLine":347,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":516,"column":33,"nodeType":"1224","endLine":516,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1280","line":6,"column":82,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":6,"column":90,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":6,"column":110,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":6,"column":116,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":6,"column":126,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":6,"column":140,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":6,"column":156,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1342","line":63,"column":12,"nodeType":"1227","messageId":"1228","endLine":63,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1348","line":67,"column":11,"nodeType":"1227","messageId":"1228","endLine":67,"endColumn":22},{"ruleId":"1234","severity":1,"message":"1343","line":70,"column":80,"nodeType":"1236","messageId":"1237","endLine":70,"endColumn":82},{"ruleId":"1222","severity":1,"message":"1223","line":190,"column":33,"nodeType":"1224","endLine":190,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":302,"column":29,"nodeType":"1224","endLine":302,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":341,"column":33,"nodeType":"1224","endLine":341,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":498,"column":33,"nodeType":"1224","endLine":498,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1280","line":6,"column":82,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":6,"column":90,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":6,"column":110,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":6,"column":116,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":6,"column":126,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":6,"column":140,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":6,"column":156,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":58,"column":24,"nodeType":"1227","messageId":"1228","endLine":58,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1342","line":62,"column":12,"nodeType":"1227","messageId":"1228","endLine":62,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":184,"column":33,"nodeType":"1224","endLine":184,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":336,"column":29,"nodeType":"1224","endLine":336,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":375,"column":33,"nodeType":"1224","endLine":375,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":573,"column":33,"nodeType":"1224","endLine":573,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1320","line":2,"column":10,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":20},{"ruleId":"1225","severity":1,"message":"1280","line":7,"column":82,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":7,"column":90,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":7,"column":110,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":7,"column":116,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":7,"column":126,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":7,"column":140,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":7,"column":156,"nodeType":"1227","messageId":"1228","endLine":7,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":102,"column":24,"nodeType":"1227","messageId":"1228","endLine":102,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1338","line":104,"column":11,"nodeType":"1227","messageId":"1228","endLine":104,"endColumn":21},{"ruleId":"1225","severity":1,"message":"1347","line":105,"column":11,"nodeType":"1227","messageId":"1228","endLine":105,"endColumn":18},{"ruleId":"1225","severity":1,"message":"1342","line":108,"column":12,"nodeType":"1227","messageId":"1228","endLine":108,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":229,"column":33,"nodeType":"1224","endLine":229,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":359,"column":29,"nodeType":"1224","endLine":359,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":398,"column":33,"nodeType":"1224","endLine":398,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":574,"column":33,"nodeType":"1224","endLine":574,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1330","line":2,"column":18,"nodeType":"1227","messageId":"1228","endLine":2,"endColumn":28},{"ruleId":"1225","severity":1,"message":"1280","line":6,"column":82,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":88},{"ruleId":"1225","severity":1,"message":"1321","line":6,"column":90,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":6,"column":110,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":6,"column":116,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":6,"column":126,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":6,"column":140,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":6,"column":156,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":58,"column":24,"nodeType":"1227","messageId":"1228","endLine":58,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1342","line":62,"column":12,"nodeType":"1227","messageId":"1228","endLine":62,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":183,"column":33,"nodeType":"1224","endLine":183,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":262,"column":29,"nodeType":"1224","endLine":262,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":301,"column":33,"nodeType":"1224","endLine":301,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":426,"column":33,"nodeType":"1224","endLine":426,"endColumn":126},{"ruleId":"1225","severity":1,"message":"1321","line":6,"column":90,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":99},{"ruleId":"1225","severity":1,"message":"1322","line":6,"column":110,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":114},{"ruleId":"1225","severity":1,"message":"1323","line":6,"column":116,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":124},{"ruleId":"1225","severity":1,"message":"1324","line":6,"column":126,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":138},{"ruleId":"1225","severity":1,"message":"1325","line":6,"column":140,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":154},{"ruleId":"1225","severity":1,"message":"1281","line":6,"column":156,"nodeType":"1227","messageId":"1228","endLine":6,"endColumn":166},{"ruleId":"1225","severity":1,"message":"1345","line":59,"column":24,"nodeType":"1227","messageId":"1228","endLine":59,"endColumn":37},{"ruleId":"1225","severity":1,"message":"1342","line":63,"column":12,"nodeType":"1227","messageId":"1228","endLine":63,"endColumn":20},{"ruleId":"1222","severity":1,"message":"1223","line":186,"column":33,"nodeType":"1224","endLine":186,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":310,"column":29,"nodeType":"1224","endLine":310,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":349,"column":33,"nodeType":"1224","endLine":349,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":464,"column":29,"nodeType":"1224","endLine":464,"endColumn":103},{"ruleId":"1222","severity":1,"message":"1223","line":503,"column":33,"nodeType":"1224","endLine":503,"endColumn":98},{"ruleId":"1222","severity":1,"message":"1223","line":673,"column":33,"nodeType":"1224","endLine":673,"endColumn":126},{"ruleId":"1349","severity":1,"message":"1350","line":1,"column":8,"nodeType":"1227","messageId":"1228","endLine":1,"endColumn":13},{"ruleId":"1213","replacedBy":"1316"},{"ruleId":"1215","replacedBy":"1317"},{"ruleId":"1225","severity":1,"message":"1314","line":5,"column":23,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":32},{"ruleId":"1225","severity":1,"message":"1314","line":5,"column":23,"nodeType":"1227","messageId":"1228","endLine":5,"endColumn":32},"no-native-reassign",["1351"],"no-negated-in-lhs",["1352"],"no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","@typescript-eslint/no-unused-vars","'ListAltIcon' is defined but never used.","Identifier","unusedVar","'RecentActorsIcon' is defined but never used.","'alpha' is defined but never used.","'ListItemIcon' is defined but never used.","'purple' is defined but never used.","'Notifications' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["1353"],["1354"],["1355"],"'acceptCTV' is defined but never used.","'unacceptCTV' is defined but never used.","'TablePagination' is defined but never used.","'Popover' is defined but never used.","'getComparator' is defined but never used.","'stableSort' is defined but never used.","'anchorEl' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'setRowsPerPage' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'checkUserApply'. Either include it or remove the dependency array.",["1356"],["1357"],"'EnhancedTableHead' is defined but never used.","'setOrder' is assigned a value but never used.","'setOrderBy' is assigned a value but never used.",["1358"],["1359"],"'BoxButton' is defined but never used.","'border' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'departments' is assigned a value but never used.",["1360"],"'Drawer' is defined but never used.","'BoxInfor' is defined but never used.","'IDepartment' is defined but never used.","'FormField' is defined but never used.","'Grid' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Department' is assigned a value but never used.","'handleChange' is assigned a value but never used.",["1361"],["1362"],"'Button' is defined but never used.","'IconButton' is defined but never used.","'StyledMenuItem' is defined but never used.","'BoxSpan' is defined but never used.","'Person' is defined but never used.","'PersonAdd' is defined but never used.","'openUser' is assigned a value but never used.","'handleClickUser' is assigned a value but never used.","'handleCloseUser' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'findIndexEvent'. Either include it or remove the dependency array.",["1363"],"'Accordion' is defined but never used.","'Yup' is defined but never used.","'setValue' is assigned a value but never used.","'userApplyJob' is defined but never used.","'userUnApplyJob' is defined but never used.","'dispatch' is assigned a value but never used.","'Typography' is defined but never used.","'user' is assigned a value but never used.","'handleClickStorage' is defined but never used.","'handleClickUnStorage' is defined but never used.","'AccordionDetails' is defined but never used.",["1364"],"'MoreVertIcon' is defined but never used.","'ClearIcon' is defined but never used.","'RefreshIcon' is defined but never used.","'AddIcon' is defined but never used.","'Link' is defined but never used.","'NavLink' is defined but never used.","'CardContent' is defined but never used.","'Divider' is defined but never used.","'formatDistance' is defined but never used.","'handleOpenMenu' is assigned a value but never used.","'handleCloseMenu' is assigned a value but never used.","'FormLabel' is defined but never used.","'Box' is defined but never used.",["1351"],["1352"],"'loadAdmin' is defined but never used.","'APP_BAR_MOBILE' is assigned a value but never used.","'useContext' is defined but never used.","'TextField' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'ListItemButton' is defined but never used.","'ReactQuill' is defined but never used.","'FormTypeProduct' is defined but never used.",["1351"],["1352"],"'makeStyles' is defined but never used.",["1365"],["1366"],"'ImageNo' is assigned a value but never used.","'ImageName' is assigned a value but never used.","'myTimeout' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.ImageData'. Either include it or remove the dependency array. If 'setSliderProperty' needs the current value of 'props.ImageData', you can also switch to useReducer instead of useState and read 'props.ImageData' in the reducer.",["1367"],"'productMap' is assigned a value but never used.","'productMapQuantity' is assigned a value but never used.",["1368"],"'cities' is assigned a value but never used.","'products' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'isMobile' is assigned a value but never used.","'setLocalItems' is assigned a value but never used.","'Stack' is defined but never used.","'classes' is assigned a value but never used.","'handleClick' is assigned a value but never used.","no-unused-vars","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1369","fix":"1370"},{"desc":"1369","fix":"1371"},{"desc":"1369","fix":"1372"},{"desc":"1373","fix":"1374"},{"desc":"1373","fix":"1375"},{"desc":"1373","fix":"1376"},{"desc":"1377","fix":"1378"},{"desc":"1377","fix":"1379"},{"desc":"1369","fix":"1380"},{"desc":"1369","fix":"1381"},{"desc":"1382","fix":"1383"},{"desc":"1382","fix":"1384"},{"desc":"1369","fix":"1385"},{"desc":"1369","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1369","fix":"1389"},"Update the dependencies array to be: [params.id, user]",{"range":"1390","text":"1391"},{"range":"1392","text":"1391"},{"range":"1393","text":"1391"},"Update the dependencies array to be: [checkUserApply, manager]",{"range":"1394","text":"1395"},{"range":"1396","text":"1395"},{"range":"1397","text":"1395"},"Update the dependencies array to be: [manager, params.id]",{"range":"1398","text":"1399"},{"range":"1400","text":"1399"},{"range":"1401","text":"1391"},{"range":"1402","text":"1391"},"Update the dependencies array to be: [findIndexEvent, user]",{"range":"1403","text":"1404"},{"range":"1405","text":"1404"},{"range":"1406","text":"1391"},{"range":"1407","text":"1391"},"Update the dependencies array to be: [count, props.ImageData]",{"range":"1408","text":"1409"},{"range":"1410","text":"1391"},[3628,3634],"[params.id, user]",[3378,3384],[3627,3633],[3727,3736],"[checkUserApply, manager]",[7380,7389],[7318,7327],[7170,7179],"[manager, params.id]",[8271,8280],[3495,3501],[3494,3500],[3470,3476],"[findIndexEvent, user]",[3581,3587],[3159,3165],[3159,3165],[1545,1552],"[count, props.ImageData]",[5327,5333]]