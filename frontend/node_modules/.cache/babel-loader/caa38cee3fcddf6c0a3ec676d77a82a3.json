{"ast":null,"code":"import types from \"redux/actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"SManager__token\"),\n  loading: true,\n  isAuthenticated: null,\n  smanager: {},\n  manager: [],\n  users: [],\n  departments: [],\n  events: [],\n  jobevents: [],\n  getRole: {},\n  getDepartment: {}\n};\nconst sManagerReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.SMANAGER_LOADED:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.SMANAGER_LOGIN_SUCCESS:\n      localStorage.setItem(\"SManager__token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.SMANAGER_REGISTER_SUCCESS:\n      localStorage.setItem(\"SManager__token\", action.payload.token);\n      localStorage.removeItem(\"SManager__token\");\n      return {\n        ...state,\n        ...action.payload\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case types.GET_DEPARTMENTS:\n      return {\n        ...state,\n        departments: action.payload\n      };\n    case types.GET_EVENTS:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case types.GET_EVENTAPPROVE_SMANAGER:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case types.APPROVE_POSTER:\n      return {\n        ...state,\n        events: state.events.map(event => event._id === action.payload.id ? {\n          ...action.payload.event\n        } : event)\n      };\n    case types.COMMENT_EVENT:\n      return {\n        ...state,\n        events: state.events.map(event => event._id === action.payload.id ? {\n          ...action.payload.event\n        } : event)\n      };\n    case types.DELETE_COMMENT:\n      return {\n        ...state,\n        events: state.events.map(event => event._id === action.payload.id ? {\n          ...action.payload.event\n        } : event)\n      };\n    case types.SMANAGER_LOGIN_FAIL:\n    case types.SMANAGER_REGISTER_FAIL:\n    case types.SMANAGER_AUTH_ERROR:\n    case types.SMANAGER_LOGOUT:\n      localStorage.removeItem(\"SManager__token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        smanager: {},\n        users: []\n      };\n    default:\n      return state;\n  }\n};\nexport default sManagerReducer;","map":{"version":3,"names":["types","initialState","token","localStorage","getItem","loading","isAuthenticated","smanager","manager","users","departments","events","jobevents","getRole","getDepartment","sManagerReducer","state","arguments","length","undefined","action","type","SMANAGER_LOADED","payload","SMANAGER_LOGIN_SUCCESS","setItem","SMANAGER_REGISTER_SUCCESS","removeItem","GET_USER","GET_USERS","GET_DEPARTMENTS","GET_EVENTS","GET_EVENTAPPROVE_SMANAGER","APPROVE_POSTER","map","event","_id","id","COMMENT_EVENT","DELETE_COMMENT","SMANAGER_LOGIN_FAIL","SMANAGER_REGISTER_FAIL","SMANAGER_AUTH_ERROR","SMANAGER_LOGOUT"],"sources":["C:/Users/ADMIN/Desktop/DATN_CTV/frontend/src/redux/reducers/sManager.ts"],"sourcesContent":["import types from \"redux/actions/types\";\nimport { IUser } from \"redux/types/user\";\nimport { IManager } from \"redux/types/Manager\";\nimport { ISManager } from \"redux/types/sManager\";\nimport { ISManagerState, SManagerActions } from \"../types/sManager\";\nimport { IRole } from \"redux/types/role\";\nimport { IDepartment } from \"redux/types/department\";\nimport { IEvent } from \"redux/types/event\";\nimport { IJobEvent } from \"redux/types/jobEvent\";\n\nconst initialState: ISManagerState = {\n  token: localStorage.getItem(\"SManager__token\"),\n  loading: true,\n  isAuthenticated: null,\n  smanager: {} as ISManager,\n  manager: [] as IManager[],\n  users: [] as IUser[],\n  departments: [] as IDepartment[],\n  events: [] as IEvent[],\n  jobevents: [] as IJobEvent[],\n  getRole: {} as IRole,\n  getDepartment: {} as IDepartment,\n};\n\nconst sManagerReducer = (\n  state = initialState,\n  action: SManagerActions\n): ISManagerState => {\n  switch (action.type) {\n    case types.SMANAGER_LOADED:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case types.SMANAGER_LOGIN_SUCCESS:\n      localStorage.setItem(\"SManager__token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case types.SMANAGER_REGISTER_SUCCESS:\n      localStorage.setItem(\"SManager__token\", action.payload.token);\n      localStorage.removeItem(\"SManager__token\");\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case types.GET_DEPARTMENTS:\n      return {\n        ...state,\n        departments: action.payload,\n      };\n\n    case types.GET_EVENTS:\n      return {\n        ...state,\n        events: action.payload,\n      };\n\n    case types.GET_EVENTAPPROVE_SMANAGER:\n      return {\n        ...state,\n        events: action.payload,\n      };\n    case types.APPROVE_POSTER:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event._id === action.payload.id ? { ...action.payload.event } : event\n        ),\n      };\n    case types.COMMENT_EVENT:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event._id === action.payload.id ? { ...action.payload.event } : event\n        ),\n      };\n    case types.DELETE_COMMENT:\n      return {\n        ...state,\n        events: state.events.map((event) =>\n          event._id === action.payload.id ? { ...action.payload.event } : event\n        ),\n      };\n\n    case types.SMANAGER_LOGIN_FAIL:\n    case types.SMANAGER_REGISTER_FAIL:\n    case types.SMANAGER_AUTH_ERROR:\n    case types.SMANAGER_LOGOUT:\n      localStorage.removeItem(\"SManager__token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        smanager: {} as ISManager,\n        users: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default sManagerReducer;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,qBAAqB;AAUvC,MAAMC,YAA4B,GAAG;EACnCC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EAC9CC,OAAO,EAAE,IAAI;EACbC,eAAe,EAAE,IAAI;EACrBC,QAAQ,EAAE,CAAC,CAAc;EACzBC,OAAO,EAAE,EAAgB;EACzBC,KAAK,EAAE,EAAa;EACpBC,WAAW,EAAE,EAAmB;EAChCC,MAAM,EAAE,EAAc;EACtBC,SAAS,EAAE,EAAiB;EAC5BC,OAAO,EAAE,CAAC,CAAU;EACpBC,aAAa,EAAE,CAAC;AAClB,CAAC;AAED,MAAMC,eAAe,GAAG,SAAAA,CAAA,EAGH;EAAA,IAFnBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGhB,YAAY;EAAA,IACpBmB,MAAuB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEvB,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKrB,KAAK,CAACsB,eAAe;MACxB,OAAO;QACL,GAAGN,KAAK;QACR,GAAGI,MAAM,CAACG,OAAO;QACjBjB,eAAe,EAAE,IAAI;QACrBD,OAAO,EAAE;MACX,CAAC;IAEH,KAAKL,KAAK,CAACwB,sBAAsB;MAC/BrB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAEL,MAAM,CAACG,OAAO,CAACrB,KAAK,CAAC;MAC7D,OAAO;QACL,GAAGc,KAAK;QACR,GAAGI,MAAM,CAACG,OAAO;QACjBjB,eAAe,EAAE,IAAI;QACrBD,OAAO,EAAE;MACX,CAAC;IACH,KAAKL,KAAK,CAAC0B,yBAAyB;MAClCvB,YAAY,CAACsB,OAAO,CAAC,iBAAiB,EAAEL,MAAM,CAACG,OAAO,CAACrB,KAAK,CAAC;MAC7DC,YAAY,CAACwB,UAAU,CAAC,iBAAiB,CAAC;MAC1C,OAAO;QACL,GAAGX,KAAK;QACR,GAAGI,MAAM,CAACG;MACZ,CAAC;IACH,KAAKvB,KAAK,CAAC4B,QAAQ;MACjB,OAAO;QACL,GAAGZ,KAAK;QACRP,KAAK,EAAEW,MAAM,CAACG;MAChB,CAAC;IACH,KAAKvB,KAAK,CAAC6B,SAAS;MAClB,OAAO;QACL,GAAGb,KAAK;QACRP,KAAK,EAAEW,MAAM,CAACG;MAChB,CAAC;IAEH,KAAKvB,KAAK,CAAC8B,eAAe;MACxB,OAAO;QACL,GAAGd,KAAK;QACRN,WAAW,EAAEU,MAAM,CAACG;MACtB,CAAC;IAEH,KAAKvB,KAAK,CAAC+B,UAAU;MACnB,OAAO;QACL,GAAGf,KAAK;QACRL,MAAM,EAAES,MAAM,CAACG;MACjB,CAAC;IAEH,KAAKvB,KAAK,CAACgC,yBAAyB;MAClC,OAAO;QACL,GAAGhB,KAAK;QACRL,MAAM,EAAES,MAAM,CAACG;MACjB,CAAC;IACH,KAAKvB,KAAK,CAACiC,cAAc;MACvB,OAAO;QACL,GAAGjB,KAAK;QACRL,MAAM,EAAEK,KAAK,CAACL,MAAM,CAACuB,GAAG,CAAEC,KAAK,IAC7BA,KAAK,CAACC,GAAG,KAAKhB,MAAM,CAACG,OAAO,CAACc,EAAE,GAAG;UAAE,GAAGjB,MAAM,CAACG,OAAO,CAACY;QAAM,CAAC,GAAGA,KAClE;MACF,CAAC;IACH,KAAKnC,KAAK,CAACsC,aAAa;MACtB,OAAO;QACL,GAAGtB,KAAK;QACRL,MAAM,EAAEK,KAAK,CAACL,MAAM,CAACuB,GAAG,CAAEC,KAAK,IAC7BA,KAAK,CAACC,GAAG,KAAKhB,MAAM,CAACG,OAAO,CAACc,EAAE,GAAG;UAAE,GAAGjB,MAAM,CAACG,OAAO,CAACY;QAAM,CAAC,GAAGA,KAClE;MACF,CAAC;IACH,KAAKnC,KAAK,CAACuC,cAAc;MACvB,OAAO;QACL,GAAGvB,KAAK;QACRL,MAAM,EAAEK,KAAK,CAACL,MAAM,CAACuB,GAAG,CAAEC,KAAK,IAC7BA,KAAK,CAACC,GAAG,KAAKhB,MAAM,CAACG,OAAO,CAACc,EAAE,GAAG;UAAE,GAAGjB,MAAM,CAACG,OAAO,CAACY;QAAM,CAAC,GAAGA,KAClE;MACF,CAAC;IAEH,KAAKnC,KAAK,CAACwC,mBAAmB;IAC9B,KAAKxC,KAAK,CAACyC,sBAAsB;IACjC,KAAKzC,KAAK,CAAC0C,mBAAmB;IAC9B,KAAK1C,KAAK,CAAC2C,eAAe;MACxBxC,YAAY,CAACwB,UAAU,CAAC,iBAAiB,CAAC;MAC1C,OAAO;QACL,GAAGX,KAAK;QACRd,KAAK,EAAE,IAAI;QACXI,eAAe,EAAE,KAAK;QACtBD,OAAO,EAAE,KAAK;QACdE,QAAQ,EAAE,CAAC,CAAc;QACzBE,KAAK,EAAE;MACT,CAAC;IAEH;MACE,OAAOO,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,eAAe"},"metadata":{},"sourceType":"module"}