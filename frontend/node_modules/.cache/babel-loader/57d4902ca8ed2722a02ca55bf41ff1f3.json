{"ast":null,"code":"import types from \"redux/actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"admin__token\"),\n  loading: false,\n  isAuthenticated: null,\n  admin: {},\n  getRole: {},\n  smanager: [],\n  manager: [],\n  departments: [],\n  roles: [],\n  events: [],\n  jobevents: [],\n  users: []\n};\nconst adminReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.ADMIN_LOADED:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.ADMIN_ADDDEPARTMENT_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.UPDATE_DEPARTMENT:\n      return {\n        ...state,\n        departments: state.departments.map(department => department._id === action.payload.id ? {\n          ...action.payload.department\n        } : department)\n      };\n    case types.DELETE_DEPARTMENT:\n      return {\n        ...state,\n        departments: state.departments.filter(department => department._id !== action.payload)\n      };\n    case types.UPDATE_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user._id === action.payload.id ? {\n          ...action.payload.user\n        } : user)\n      };\n    case types.ADMIN_LOGIN_SUCCESS:\n      localStorage.setItem(\"admin__token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case types.GET_DEPARTMENTS:\n      return {\n        ...state,\n        departments: action.payload\n      };\n    case types.GET_EVENTS:\n      return {\n        ...state,\n        events: action.payload\n      };\n    case types.GET_JOBEVENTS:\n      return {\n        ...state,\n        jobevents: action.payload\n      };\n    case types.GET_ROLES:\n      return {\n        ...state,\n        roles: action.payload\n      };\n    case types.DELETE_USER:\n      return {\n        ...state,\n        users: state.users.filter(user => user._id !== action.payload)\n      };\n    case types.ADMIN_ADDDEPARTMENT_FAIL:\n    case types.ADMIN_LOGIN_FAIL:\n    case types.ADMIN_REGISTER_FAIL:\n    case types.ADMIN_AUTH_ERROR:\n    case types.ADMIN_LOGOUT:\n      localStorage.removeItem(\"admin__token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        admin: {},\n        users: []\n      };\n    default:\n      return state;\n  }\n};\nexport default adminReducer;","map":{"version":3,"names":["types","initialState","token","localStorage","getItem","loading","isAuthenticated","admin","getRole","smanager","manager","departments","roles","events","jobevents","users","adminReducer","state","arguments","length","undefined","action","type","ADMIN_LOADED","payload","ADMIN_ADDDEPARTMENT_SUCCESS","UPDATE_DEPARTMENT","map","department","_id","id","DELETE_DEPARTMENT","filter","UPDATE_USER","user","ADMIN_LOGIN_SUCCESS","setItem","GET_USERS","GET_USER","GET_DEPARTMENTS","GET_EVENTS","GET_JOBEVENTS","GET_ROLES","DELETE_USER","ADMIN_ADDDEPARTMENT_FAIL","ADMIN_LOGIN_FAIL","ADMIN_REGISTER_FAIL","ADMIN_AUTH_ERROR","ADMIN_LOGOUT","removeItem"],"sources":["C:/Users/ADMIN/Desktop/DATN_CTV/frontend/src/redux/reducers/admin.ts"],"sourcesContent":["import types from \"redux/actions/types\";\nimport { IAdmin } from \"redux/types/admin\";\nimport { IUser } from \"redux/types/user\";\nimport { ISManager } from \"redux/types/sManager\";\nimport { IManager } from \"redux/types/Manager\";\nimport { IDepartment } from \"redux/types/department\";\nimport { IRole } from \"redux/types/role\";\nimport { IEvent } from \"redux/types/event\";\nimport { IJobEvent } from \"redux/types/jobEvent\";\nimport { IAdminState, AdminActions } from \"../types/admin\";\n\nconst initialState: IAdminState = {\n  token: localStorage.getItem(\"admin__token\"),\n  loading: false,\n  isAuthenticated: null,\n  admin: {} as IAdmin,\n  getRole: {} as IRole,\n  smanager: [] as ISManager[],\n  manager: [] as IManager[],\n  departments: [] as IDepartment[],\n  roles: [] as IRole[],\n  events: [] as IEvent[],\n  jobevents: [] as IJobEvent[],\n  users: [] as IUser[],\n};\n\nconst adminReducer = (\n  state = initialState,\n  action: AdminActions\n): IAdminState => {\n  switch (action.type) {\n    case types.ADMIN_LOADED:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n\n    case types.ADMIN_ADDDEPARTMENT_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case types.UPDATE_DEPARTMENT:\n      return {\n        ...state,\n        departments: state.departments.map((department) =>\n          department._id === action.payload.id ? { ...action.payload.department } : department\n        ),\n      };\n\n    case types.DELETE_DEPARTMENT:\n      return {\n        ...state,\n        departments: state.departments.filter((department) => department._id !== action.payload),\n      };\n\n    case types.UPDATE_USER:\n      return {\n        ...state,\n        users: state.users.map((user) =>\n          user._id === action.payload.id ? { ...action.payload.user } : user\n        ),\n      };\n    case types.ADMIN_LOGIN_SUCCESS:\n      localStorage.setItem(\"admin__token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        users: action.payload,\n      };\n\n    case types.GET_DEPARTMENTS:\n      return {\n        ...state,\n        departments: action.payload,\n      };\n\n    case types.GET_EVENTS:\n      return {\n        ...state,\n        events: action.payload,\n      };\n\n    case types.GET_JOBEVENTS:\n      return {\n        ...state,\n        jobevents: action.payload,\n      };\n      \n    case types.GET_ROLES:\n      return {\n        ...state,\n        roles: action.payload,\n      };\n\n    case types.DELETE_USER:\n      return {\n        ...state,\n        users: state.users.filter((user) => user._id !== action.payload),\n      };\n\n    case types.ADMIN_ADDDEPARTMENT_FAIL:\n    case types.ADMIN_LOGIN_FAIL:\n    case types.ADMIN_REGISTER_FAIL:\n    case types.ADMIN_AUTH_ERROR:\n    case types.ADMIN_LOGOUT:\n      localStorage.removeItem(\"admin__token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        admin: {} as IAdmin,\n        users: [],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}