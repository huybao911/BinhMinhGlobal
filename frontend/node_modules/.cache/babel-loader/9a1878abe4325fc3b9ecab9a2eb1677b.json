{"ast":null,"code":"import types from \"../../redux/actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"user__token\"),\n  loading: false,\n  isAuthenticated: null,\n  user: {},\n  getRole: {},\n  cities: [],\n  carts: [],\n  products: [],\n  typeproducts: [],\n  roles: []\n};\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.USER_LOADED:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.GET_CARTS:\n      return {\n        ...state,\n        carts: action.payload\n      };\n    case types.GET_CITIES:\n      return {\n        ...state,\n        cities: action.payload\n      };\n    case types.GET_PRODUCT:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case types.GET_TYPEPRODUCT:\n      return {\n        ...state,\n        typeproducts: action.payload\n      };\n    case types.ADMIN_ADDCART_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.ADMIN_ADDCART_FAIL:\n    case types.USER_AUTH_ERROR:\n      localStorage.removeItem(\"user__token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: {}\n      };\n    default:\n      return state;\n  }\n};\nexport default userReducer;","map":{"version":3,"names":["types","initialState","token","localStorage","getItem","loading","isAuthenticated","user","getRole","cities","carts","products","typeproducts","roles","userReducer","state","arguments","length","undefined","action","type","USER_LOADED","payload","GET_CARTS","GET_CITIES","GET_PRODUCT","GET_TYPEPRODUCT","ADMIN_ADDCART_SUCCESS","ADMIN_ADDCART_FAIL","USER_AUTH_ERROR","removeItem"],"sources":["D:/WORKSPACE/Project/BinhMinhGlobal/frontend/src/redux/reducers/user.ts"],"sourcesContent":["import types from \"../../redux/actions/types\";\r\nimport { IUserState, UserActions } from \"../types/user\";\r\nimport { IUser } from \"../../redux/types/user\";\r\nimport { IRole } from \"../../redux/types/role\";\r\nimport { ICart } from \"../../redux/types/cart\";\r\nimport { ICity } from \"../../redux/types/city\";\r\nimport { IProduct } from \"../../redux/types/product\";\r\nimport { ITypeProduct } from \"../../redux/types/typeproduct\";\r\n\r\nconst initialState: IUserState = {\r\n    token: localStorage.getItem(\"user__token\"),\r\n    loading: false,\r\n    isAuthenticated: null,\r\n    user: {} as IUser,\r\n    getRole: {} as IRole,\r\n    cities: [] as ICity[],\r\n    carts: [] as ICart[],\r\n    products: [] as IProduct[],\r\n    typeproducts: [] as ITypeProduct[],\r\n    roles: [] as IRole[],\r\n};\r\n\r\nconst userReducer = (state = initialState, action: UserActions): IUserState => {\r\n    switch (action.type) {\r\n        case types.USER_LOADED:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n\r\n        case types.GET_CARTS:\r\n            return {\r\n                ...state,\r\n                carts: action.payload,\r\n            };\r\n\r\n        case types.GET_CITIES:\r\n            return {\r\n                ...state,\r\n                cities: action.payload,\r\n            };\r\n\r\n        case types.GET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: action.payload,\r\n            };\r\n\r\n        case types.GET_TYPEPRODUCT:\r\n            return {\r\n                ...state,\r\n                typeproducts: action.payload,\r\n            };\r\n\r\n        case types.ADMIN_ADDCART_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n\r\n        case types.ADMIN_ADDCART_FAIL:\r\n        case types.USER_AUTH_ERROR:\r\n            localStorage.removeItem(\"user__token\");\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                user: {} as IUser,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,2BAA2B;AAS7C,MAAMC,YAAwB,GAAG;EAC7BC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EAC1CC,OAAO,EAAE,KAAK;EACdC,eAAe,EAAE,IAAI;EACrBC,IAAI,EAAE,CAAC,CAAU;EACjBC,OAAO,EAAE,CAAC,CAAU;EACpBC,MAAM,EAAE,EAAa;EACrBC,KAAK,EAAE,EAAa;EACpBC,QAAQ,EAAE,EAAgB;EAC1BC,YAAY,EAAE,EAAoB;EAClCC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA2D;EAAA,IAA1DC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGf,YAAY;EAAA,IAAEkB,MAAmB,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC1D,QAAQC,MAAM,CAACC,IAAI;IACf,KAAKpB,KAAK,CAACqB,WAAW;MAClB,OAAO;QACH,GAAGN,KAAK;QACR,GAAGI,MAAM,CAACG,OAAO;QACjBhB,eAAe,EAAE,IAAI;QACrBD,OAAO,EAAE;MACb,CAAC;IAEL,KAAKL,KAAK,CAACuB,SAAS;MAChB,OAAO;QACH,GAAGR,KAAK;QACRL,KAAK,EAAES,MAAM,CAACG;MAClB,CAAC;IAEL,KAAKtB,KAAK,CAACwB,UAAU;MACjB,OAAO;QACH,GAAGT,KAAK;QACRN,MAAM,EAAEU,MAAM,CAACG;MACnB,CAAC;IAEL,KAAKtB,KAAK,CAACyB,WAAW;MAClB,OAAO;QACH,GAAGV,KAAK;QACRJ,QAAQ,EAAEQ,MAAM,CAACG;MACrB,CAAC;IAEL,KAAKtB,KAAK,CAAC0B,eAAe;MACtB,OAAO;QACH,GAAGX,KAAK;QACRH,YAAY,EAAEO,MAAM,CAACG;MACzB,CAAC;IAEL,KAAKtB,KAAK,CAAC2B,qBAAqB;MAC5B,OAAO;QACH,GAAGZ,KAAK;QACR,GAAGI,MAAM,CAACG,OAAO;QACjBhB,eAAe,EAAE,IAAI;QACrBD,OAAO,EAAE;MACb,CAAC;IAEL,KAAKL,KAAK,CAAC4B,kBAAkB;IAC7B,KAAK5B,KAAK,CAAC6B,eAAe;MACtB1B,YAAY,CAAC2B,UAAU,CAAC,aAAa,CAAC;MACtC,OAAO;QACH,GAAGf,KAAK;QACRb,KAAK,EAAE,IAAI;QACXI,eAAe,EAAE,KAAK;QACtBD,OAAO,EAAE,KAAK;QACdE,IAAI,EAAE,CAAC;MACX,CAAC;IAEL;MACI,OAAOQ,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}