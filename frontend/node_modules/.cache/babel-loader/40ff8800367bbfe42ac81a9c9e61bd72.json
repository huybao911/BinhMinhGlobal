{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/**\n * ConsoleLogger singleton.\n */\nclass ConsoleLogger {\n  constructor(levels) {\n    this.levels = levels;\n  }\n  log() {\n    // eslint-disable-next-line no-console\n    if (this.levels.verbose) console.log(...arguments);\n  }\n  info() {\n    if (this.levels.info) console.info(...arguments);\n  }\n  debug() {\n    if (this.levels.debug) console.debug(...arguments);\n  }\n  warn() {\n    if (this.levels.warnings) console.warn(...arguments);\n  }\n  error() {\n    if (this.levels.errors) console.error(...arguments);\n  }\n  static new() {\n    let levels = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      verbose: false,\n      info: false,\n      debug: false,\n      warnings: true,\n      errors: true\n    };\n    if (!this.instance) this.instance = new ConsoleLogger(levels);else this.instance.levels = levels;\n    return this.instance;\n  }\n}\nexports[\"default\"] = ConsoleLogger;","map":{"version":3,"sources":["../../src/modules/ConsoleLogger.tsx"],"names":[],"mappings":";;;;;;AAQA;;AAEG;AACW,MAAO,aAAa,CAAA;EAChC,WAAA,CAA4B,MAAoB,EAAA;IAApB,IAAM,CAAA,MAAA,GAAN,MAAM;EAAkB;EAE7C,GAAG,CAAA,EAAmB;;IAE3B,IAAI,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,GAAA,SAAO,CAAC;EAC9C;EAEM,IAAI,CAAA,EAAmB;IAC5B,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,GAAA,SAAO,CAAC;EAC5C;EAEM,KAAK,CAAA,EAAmB;IAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,GAAA,SAAO,CAAC;EAC9C;EAEM,IAAI,CAAA,EAAmB;IAC5B,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,GAAA,SAAO,CAAC;EAChD;EAEM,KAAK,CAAA,EAAmB;IAC7B,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,GAAA,SAAO,CAAC;EAC/C;EAIM,OAAO,GAAG,CAAA,EAOd;IAAA,IAND,MAAuB,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAA;MACrB,OAAO,EAAE,KAAK;MACd,IAAI,EAAE,KAAK;MACX,KAAK,EAAE,KAAK;MACZ,QAAQ,EAAE,IAAI;MACd,MAAM,EAAE;IACT,CAAA;IAED,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC,KACzD,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM;IAClC,OAAO,IAAI,CAAC,QAAQ;EACrB;AACF","sourcesContent":["export type LoggerLevels = {\n  verbose: boolean;\n  info: boolean;\n  debug: boolean;\n  warnings: boolean;\n  errors: boolean;\n};\n\n/**\n * ConsoleLogger singleton.\n */\nexport default class ConsoleLogger {\n  private constructor(private levels: LoggerLevels) {}\n\n  public log(...data: unknown[]): void {\n    // eslint-disable-next-line no-console\n    if (this.levels.verbose) console.log(...data);\n  }\n\n  public info(...data: unknown[]): void {\n    if (this.levels.info) console.info(...data);\n  }\n\n  public debug(...data: unknown[]): void {\n    if (this.levels.debug) console.debug(...data);\n  }\n\n  public warn(...data: unknown[]): void {\n    if (this.levels.warnings) console.warn(...data);\n  }\n\n  public error(...data: unknown[]): void {\n    if (this.levels.errors) console.error(...data);\n  }\n\n  private static instance: ConsoleLogger | undefined;\n\n  public static new(\n    levels: LoggerLevels = {\n      verbose: false,\n      info: false,\n      debug: false,\n      warnings: true,\n      errors: true\n    }\n  ): ConsoleLogger {\n    if (!this.instance) this.instance = new ConsoleLogger(levels);\n    else this.instance.levels = levels;\n    return this.instance;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}