{"ast":null,"code":"import types from \"../actions/types\";\nconst initialState = {\n  token: localStorage.getItem(\"admin__token\"),\n  loading: false,\n  isAuthenticated: null,\n  admin: {},\n  getRole: {},\n  products: [],\n  typeproducts: [],\n  roles: [],\n  users: []\n};\nconst adminReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.ADMIN_LOADED:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.ADMIN_ADDPRODUCT_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.UPDATE_PRODUCT:\n      return {\n        ...state,\n        products: state.products.map(product => product._id === action.payload.id ? {\n          ...action.payload.product\n        } : product)\n      };\n    case types.DELETE_PRODUCT:\n      return {\n        ...state,\n        products: state.products.filter(product => product._id !== action.payload)\n      };\n    case types.ADMIN_ADDTYPEPRODUCT_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.UPDATE_TYPEPRODUCT:\n      return {\n        ...state,\n        typeproducts: state.typeproducts.map(typeproduct => typeproduct._id === action.payload.id ? {\n          ...action.payload.typeproduct\n        } : typeproduct)\n      };\n    case types.DELETE_TYPEPRODUCT:\n      return {\n        ...state,\n        typeproducts: state.typeproducts.filter(typeproduct => typeproduct._id !== action.payload)\n      };\n    case types.UPDATE_USER:\n      return {\n        ...state,\n        users: state.users.map(user => user._id === action.payload.id ? {\n          ...action.payload.user\n        } : user)\n      };\n    case types.ADMIN_LOGIN_SUCCESS:\n      localStorage.setItem(\"admin__token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case types.GET_USERS:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        users: action.payload\n      };\n    case types.GET_PRODUCT:\n      return {\n        ...state,\n        products: action.payload\n      };\n    case types.GET_TYPEPRODUCT:\n      return {\n        ...state,\n        typeproducts: action.payload\n      };\n    case types.GET_ROLES:\n      return {\n        ...state,\n        roles: action.payload\n      };\n    case types.DELETE_USER:\n      return {\n        ...state,\n        users: state.users.filter(user => user._id !== action.payload)\n      };\n    case types.ADMIN_ADDPRODUCT_FAIL:\n    case types.ADMIN_ADDTYPEPRODUCT_FAIL:\n    case types.ADMIN_LOGIN_FAIL:\n    case types.ADMIN_AUTH_ERROR:\n    case types.ADMIN_LOGOUT:\n      localStorage.removeItem(\"admin__token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        admin: {},\n        users: []\n      };\n    default:\n      return state;\n  }\n};\nexport default adminReducer;","map":{"version":3,"names":["types","initialState","token","localStorage","getItem","loading","isAuthenticated","admin","getRole","products","typeproducts","roles","users","adminReducer","state","arguments","length","undefined","action","type","ADMIN_LOADED","payload","ADMIN_ADDPRODUCT_SUCCESS","UPDATE_PRODUCT","map","product","_id","id","DELETE_PRODUCT","filter","ADMIN_ADDTYPEPRODUCT_SUCCESS","UPDATE_TYPEPRODUCT","typeproduct","DELETE_TYPEPRODUCT","UPDATE_USER","user","ADMIN_LOGIN_SUCCESS","setItem","GET_USERS","GET_USER","GET_PRODUCT","GET_TYPEPRODUCT","GET_ROLES","DELETE_USER","ADMIN_ADDPRODUCT_FAIL","ADMIN_ADDTYPEPRODUCT_FAIL","ADMIN_LOGIN_FAIL","ADMIN_AUTH_ERROR","ADMIN_LOGOUT","removeItem"],"sources":["D:/WORKSPACE/Project/BinhMinhGlobal/frontend/src/redux/reducers/admin.ts"],"sourcesContent":["import types from \"../actions/types\";\r\nimport { IAdmin } from \"../types/admin\";\r\nimport { IUser } from \"../types/user\";\r\nimport { IProduct } from \"../types/product\";\r\nimport { ITypeProduct } from \"../types/typeproduct\";\r\nimport { IRole } from \"../types/role\";\r\nimport { IAdminState, AdminActions } from \"../types/admin\";\r\n\r\nconst initialState: IAdminState = {\r\n    token: localStorage.getItem(\"admin__token\"),\r\n    loading: false,\r\n    isAuthenticated: null,\r\n    admin: {} as IAdmin,\r\n    getRole: {} as IRole,\r\n    products: [] as IProduct[],\r\n    typeproducts: [] as ITypeProduct[],\r\n    roles: [] as IRole[],\r\n    users: [] as IUser[],\r\n};\r\n\r\nconst adminReducer = (\r\n    state = initialState,\r\n    action: AdminActions\r\n): IAdminState => {\r\n    switch (action.type) {\r\n        case types.ADMIN_LOADED:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n\r\n        case types.ADMIN_ADDPRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case types.UPDATE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: state.products.map((product) =>\r\n                    product._id === action.payload.id ? { ...action.payload.product } : product\r\n                ),\r\n            };\r\n\r\n        case types.DELETE_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: state.products.filter((product) => product._id !== action.payload),\r\n            };\r\n\r\n        case types.ADMIN_ADDTYPEPRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n        case types.UPDATE_TYPEPRODUCT:\r\n            return {\r\n                ...state,\r\n                typeproducts: state.typeproducts.map((typeproduct) =>\r\n                    typeproduct._id === action.payload.id ? { ...action.payload.typeproduct } : typeproduct\r\n                ),\r\n            };\r\n\r\n        case types.DELETE_TYPEPRODUCT:\r\n            return {\r\n                ...state,\r\n                typeproducts: state.typeproducts.filter((typeproduct) => typeproduct._id !== action.payload),\r\n            };\r\n\r\n        case types.UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) =>\r\n                    user._id === action.payload.id ? { ...action.payload.user } : user\r\n                ),\r\n            };\r\n\r\n        case types.ADMIN_LOGIN_SUCCESS:\r\n            localStorage.setItem(\"admin__token\", action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                loading: false,\r\n            };\r\n\r\n        case types.GET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n            };\r\n\r\n        case types.GET_USER:\r\n            return {\r\n                ...state,\r\n                users: action.payload,\r\n            };\r\n\r\n        case types.GET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                products: action.payload,\r\n            };\r\n\r\n        case types.GET_TYPEPRODUCT:\r\n            return {\r\n                ...state,\r\n                typeproducts: action.payload,\r\n            };\r\n\r\n        case types.GET_ROLES:\r\n            return {\r\n                ...state,\r\n                roles: action.payload,\r\n            };\r\n\r\n        case types.DELETE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.filter((user) => user._id !== action.payload),\r\n            };\r\n\r\n        case types.ADMIN_ADDPRODUCT_FAIL:\r\n        case types.ADMIN_ADDTYPEPRODUCT_FAIL:\r\n        case types.ADMIN_LOGIN_FAIL:\r\n        case types.ADMIN_AUTH_ERROR:\r\n        case types.ADMIN_LOGOUT:\r\n            localStorage.removeItem(\"admin__token\");\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                isAuthenticated: false,\r\n                loading: false,\r\n                admin: {} as IAdmin,\r\n                users: [],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default adminReducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}