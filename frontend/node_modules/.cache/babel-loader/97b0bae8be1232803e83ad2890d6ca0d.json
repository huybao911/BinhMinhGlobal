{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\DATN_CTV\\\\frontend\\\\src\\\\pages\\\\auth\\\\FormDepartment_User.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, FormLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { useFormikContext } from \"formik\";\nimport { getDepartments } from \"redux/actions/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formLabel: {\n    fontWeight: 600,\n    marginBottom: theme.spacing(1.5)\n  },\n  formControl: {\n    margin: theme.spacing(2, 0)\n  },\n  placeholder: {\n    color: \"#aaa\"\n  }\n}));\n// const Placeholder = ({ children }: { children: any }) => {\n//     const classes = useStyles();\n//     return <div className={classes.placeholder}>{children}</div>;\n// };\nconst FormField = _ref => {\n  _s();\n  let {\n    isDepartmentCbb = false\n  } = _ref;\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const {\n    values,\n    handleChange,\n    handleBlur,\n    touched,\n    errors\n  } = useFormikContext();\n  const [departments, setDepartments] = React.useState([]);\n  const Department = useSelector(state => state.admin);\n  React.useEffect(() => {\n    dispatch(getDepartments());\n  }, [dispatch]);\n  React.useEffect(() => {\n    setDepartments(() => {\n      var _Department$departmen;\n      return Department === null || Department === void 0 ? void 0 : (_Department$departmen = Department.departments) === null || _Department$departmen === void 0 ? void 0 : _Department$departmen.filter(department => department.nameDepartment);\n    });\n  }, [Department]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isDepartmentCbb ? /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        classes: {\n          root: classes.formLabel\n        },\n        children: \"Khoa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        name: \"department\",\n        labelId: \"demo-simple-select-label\",\n        id: \"handle-department\",\n        value: values.department,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        error: touched.department ? Boolean(errors.department) : false\n\n        // renderValue={\n        //     role !== \"\" ? undefined : () => <Placeholder>Role</Placeholder>\n        // }\n        ,\n        children: departments === null || departments === void 0 ? void 0 : departments.map(department => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: department._id,\n          children: department.nameDepartment\n        }, department._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this) : null\n  }, void 0, false);\n};\n_s(FormField, \"eTt+J6hBbZY2Q1IwQWVPYfILq/s=\", false, function () {\n  return [useStyles, useDispatch, useFormikContext, useSelector];\n});\n_c = FormField;\nexport default FormField;\nvar _c;\n$RefreshReg$(_c, \"FormField\");","map":{"version":3,"names":["React","makeStyles","FormControl","FormLabel","MenuItem","Select","useFormikContext","getDepartments","useDispatch","useSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","theme","formLabel","fontWeight","marginBottom","spacing","formControl","margin","placeholder","color","FormField","_ref","_s","isDepartmentCbb","classes","dispatch","values","handleChange","handleBlur","touched","errors","departments","setDepartments","useState","Department","state","admin","useEffect","_Department$departmen","filter","department","nameDepartment","children","fullWidth","className","root","fileName","_jsxFileName","lineNumber","columnNumber","name","labelId","id","value","onChange","onBlur","error","Boolean","map","_id","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/DATN_CTV/frontend/src/pages/auth/FormDepartment_User.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, FormLabel, MenuItem, Select } from \"@material-ui/core\";\nimport { useFormikContext } from \"formik\";\n\nimport { getDepartments } from \"redux/actions/user\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"redux/reducers\";\nimport { IDepartment } from \"redux/types/department\";\n\nconst useStyles = makeStyles((theme) => ({\n    formLabel: {\n        fontWeight: 600,\n        marginBottom: theme.spacing(1.5),\n    },\n    formControl: {\n        margin: theme.spacing(2, 0),\n    },\n    placeholder: {\n        color: \"#aaa\"\n    }\n}));\n\ntype Props = {\n    isDepartmentCbb?: boolean;\n};\n\ninterface IInitialValues {\n    department: string;\n}\n\n// const Placeholder = ({ children }: { children: any }) => {\n//     const classes = useStyles();\n//     return <div className={classes.placeholder}>{children}</div>;\n// };\n\nconst FormField: React.FC<Props> = ({ isDepartmentCbb = false }): JSX.Element => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const { values, handleChange, handleBlur, touched, errors } =\n        useFormikContext<IInitialValues>();\n\n    const [departments, setDepartments] = React.useState<IDepartment[]>([]);\n    const Department = useSelector((state: RootState) => state.admin);\n\n    React.useEffect(() => {\n        dispatch(getDepartments());\n    }, [dispatch]);\n\n    React.useEffect(() => {\n        setDepartments(() => Department?.departments?.filter((department: any) => department.nameDepartment));\n    }, [Department]);\n\n    return (\n        <>\n            {isDepartmentCbb ? (\n                <FormControl fullWidth className={classes.formControl}>\n                    <FormLabel classes={{ root: classes.formLabel }}>Khoa</FormLabel>\n                    <Select\n                        name=\"department\"\n                        labelId=\"demo-simple-select-label\"\n                        id=\"handle-department\"\n                        value={values.department}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        error={touched.department ? Boolean(errors.department) : false}\n\n                    // renderValue={\n                    //     role !== \"\" ? undefined : () => <Placeholder>Role</Placeholder>\n                    // }\n                    >\n                        {departments?.map((department: any) => (\n                            <MenuItem value={department._id} key={department._id}>\n                                {department.nameDepartment}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            ) : null}\n\n        </>\n    );\n};\n\nexport default FormField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}