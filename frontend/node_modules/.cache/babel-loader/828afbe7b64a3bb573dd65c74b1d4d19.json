{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar jsxRuntime = require('react/jsx-runtime');\nvar index = require('./components/Buttons/index.js');\nvar HeroSlider_module = require('./HeroSlider.module.css.js');\nvar Accessibility = require('./modules/Accessibility.js');\nvar Animations = require('./modules/Animations.js');\nvar Autoplay = require('./modules/Autoplay.js');\nvar ConsoleLogger = require('./modules/ConsoleLogger.js');\nvar Controller = require('./modules/Controller.js');\nvar IntersectionObserver = require('./modules/IntersectionObserver.js');\nvar Layout = require('./modules/Layout.js');\nvar Manager = require('./modules/Manager.js');\nvar Settings = require('./modules/Settings.js');\nvar composeCssClasses = require('./utils/composeCssClasses.js');\nconst logger = ConsoleLogger[\"default\"].new();\nfunction Orchestrator(_ref) {\n  let {\n    className,\n    width = '100%',\n    height = '100vh',\n    style,\n    children\n  } = _ref;\n  logger.info('[Orchestrator] rerender');\n  const {\n    shouldDisplayButtons\n  } = Accessibility.useAccessibility();\n  const {\n    sliderFadeInDuration,\n    navbarFadeInDuration,\n    navbarFadeInDelay\n  } = Animations.useAnimations();\n  const {\n    state: layout\n  } = Layout.useLayout();\n  const {\n    slidingDuration,\n    slidingDelay,\n    getSlidingCycleDuration\n  } = Controller.useController();\n  const settings = Settings.useSettings();\n  const {\n    debounce\n  } = Autoplay.useAutoplay();\n  const {\n    onTouchStartHandler,\n    onTouchMoveHandler,\n    onTouchEndHandler\n  } = Accessibility.useAccessibility();\n  const {\n    elementObservedRef\n  } = IntersectionObserver.useIntersectionObserver();\n  /**\n   * CSS variables for the transitions.\n   */\n  const cssVariables = {\n    '--sliding-duration': `${slidingDuration}ms`,\n    '--sliding-delay': `${slidingDelay}ms`,\n    '--slide-transition-delay': `${getSlidingCycleDuration()}ms`,\n    '--slider-width': layout.width ? `${layout.width}px` : undefined,\n    '--slider-height': layout.height ? `${layout.height}px` : undefined,\n    '--slider-color': settings.sliderColor,\n    '--slider-fade-in-duration': `${sliderFadeInDuration}ms`,\n    '--nav-fade-in-duration': `${navbarFadeInDuration}ms`,\n    '--nav-fade-in-delay': `${navbarFadeInDelay}ms`,\n    '--nav-background-color': settings.navbarStyle ? settings.navbarStyle.color : undefined,\n    '--nav-active-color': settings.navbarStyle ? settings.navbarStyle.activeColor : undefined,\n    '--mask-duration': `${getSlidingCycleDuration()}ms`\n  };\n  return jsxRuntime.jsx(\"div\", Object.assign({\n    \"data-testid\": \"hero-slider\",\n    className: composeCssClasses.composeCssClasses('hero-slider', className),\n    ref: elementObservedRef\n  }, {\n    children: jsxRuntime.jsxs(\"div\", Object.assign({\n      \"data-testid\": \"hero-slider-wrapper\",\n      ref: layout.slider,\n      className: composeCssClasses.composeCssClasses('hero-slider-wrapper', HeroSlider_module[\"default\"].Wrapper),\n      onTouchStart: onTouchStartHandler,\n      onTouchMove: onTouchMoveHandler,\n      onTouchEnd: onTouchEndHandler,\n      onMouseMoveCapture: debounce,\n      style: Object.assign(Object.assign(Object.assign({}, cssVariables), style), {\n        width,\n        height\n      })\n    }, {\n      children: [children, shouldDisplayButtons && jsxRuntime.jsx(index[\"default\"], {})]\n    }))\n  }));\n}\nfunction HeroSlider(props) {\n  return jsxRuntime.jsx(Layout.LayoutProvider, {\n    children: jsxRuntime.jsx(Manager.ManagerProvider, Object.assign({\n      manager: props.manager\n    }, {\n      children: jsxRuntime.jsx(Settings.SettingsProvider, Object.assign({\n        settings: props.settings\n      }, {\n        children: jsxRuntime.jsx(Controller.ControllerProvider, Object.assign({\n          controller: props.controller\n        }, {\n          children: jsxRuntime.jsx(Accessibility.AccessibilityProvider, Object.assign({\n            accessibility: props.accessibility\n          }, {\n            children: jsxRuntime.jsx(Animations.AnimationsProvider, Object.assign({\n              animations: props.animations\n            }, {\n              children: jsxRuntime.jsx(IntersectionObserver.IntersectionObserverProvider, {\n                children: jsxRuntime.jsx(Autoplay.AutoplayProvider, Object.assign({\n                  autoplay: props.autoplay\n                }, {\n                  children: jsxRuntime.jsx(Orchestrator, Object.assign({\n                    className: props.className,\n                    width: props.width,\n                    height: props.height,\n                    style: props.style\n                  }, {\n                    children: props.children\n                  }))\n                }))\n              })\n            }))\n          }))\n        }))\n      }))\n    }))\n  });\n}\nexports[\"default\"] = HeroSlider;","map":{"version":3,"sources":["../src/HeroSlider.tsx"],"names":["ConsoleLogger","useAccessibility","useAnimations","useLayout","useController","useSettings","useAutoplay","useIntersectionObserver","_jsx","composeCssClasses","_jsxs","HeroSliderModuleCss","LayoutProvider","ManagerProvider","SettingsProvider","AnimationsProvider","IntersectionObserverProvider","AutoplayProvider"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Buttons from './components/Buttons';\nimport HeroSliderModuleCss from './HeroSlider.module.css';\nimport {\n  AccessibilityProps,\n  AccessibilityProvider,\n  useAccessibility\n} from './modules/Accessibility';\nimport {\n  AnimationsProps,\n  AnimationsProvider,\n  useAnimations\n} from './modules/Animations';\nimport {\n  AutoplayProps,\n  AutoplayProvider,\n  useAutoplay\n} from './modules/Autoplay';\nimport ConsoleLogger from './modules/ConsoleLogger';\nimport {\n  ControllerProps,\n  ControllerProvider,\n  useController\n} from './modules/Controller';\nimport {\n  IntersectionObserverProvider,\n  useIntersectionObserver\n} from './modules/IntersectionObserver';\nimport { LayoutProvider, useLayout } from './modules/Layout';\nimport { ManagerProps, ManagerProvider } from './modules/Manager';\nimport {\n  SettingsProps,\n  SettingsProvider,\n  useSettings\n} from './modules/Settings';\nimport { composeCssClasses } from './utils/composeCssClasses';\n\nconst logger = ConsoleLogger.new();\n\n/**\n * `HeroSlider` props.\n */\nexport interface HeroSliderProps {\n  /**\n   * Slider className.\n   */\n  className?: React.HTMLProps<HTMLDivElement>['className'];\n  /**\n   * CSS property. Defines the width of the slider.\n   * @default '100%'\n   */\n  width?: React.CSSProperties['width'];\n  /**\n   * CSS property. Defines the height of the slider.\n   * @default '100vh'\n   */\n  height?: React.CSSProperties['height'];\n  /**\n   * Inline CSS styling.\n   */\n  style?: Omit<React.CSSProperties, 'width' | 'height'>;\n\n  // Modules\n  manager?: ManagerProps;\n  settings?: SettingsProps;\n  controller?: ControllerProps;\n  accessibility?: AccessibilityProps;\n  animations?: AnimationsProps;\n  autoplay?: AutoplayProps;\n}\n\nfunction Orchestrator({\n  className,\n  width = '100%',\n  height = '100vh',\n  style,\n  children\n}: React.PropsWithChildren<\n  Pick<HeroSliderProps, 'className' | 'width' | 'height' | 'style'>\n>) {\n  logger.info('[Orchestrator] rerender');\n\n  const { shouldDisplayButtons } = useAccessibility();\n  const { sliderFadeInDuration, navbarFadeInDuration, navbarFadeInDelay } =\n    useAnimations();\n  const { state: layout } = useLayout();\n  const { slidingDuration, slidingDelay, getSlidingCycleDuration } =\n    useController();\n  const settings = useSettings();\n  const { debounce } = useAutoplay();\n  const { onTouchStartHandler, onTouchMoveHandler, onTouchEndHandler } =\n    useAccessibility();\n  const { elementObservedRef } = useIntersectionObserver();\n\n  /**\n   * CSS variables for the transitions.\n   */\n  const cssVariables = {\n    '--sliding-duration': `${slidingDuration}ms`,\n    '--sliding-delay': `${slidingDelay}ms`,\n    '--slide-transition-delay': `${getSlidingCycleDuration()}ms`,\n    '--slider-width': layout.width ? `${layout.width}px` : undefined,\n    '--slider-height': layout.height ? `${layout.height}px` : undefined,\n    '--slider-color': settings.sliderColor,\n    '--slider-fade-in-duration': `${sliderFadeInDuration}ms`,\n    '--nav-fade-in-duration': `${navbarFadeInDuration}ms`,\n    '--nav-fade-in-delay': `${navbarFadeInDelay}ms`,\n    '--nav-background-color': settings.navbarStyle\n      ? settings.navbarStyle.color\n      : undefined,\n    '--nav-active-color': settings.navbarStyle\n      ? settings.navbarStyle.activeColor\n      : undefined,\n    '--mask-duration': `${getSlidingCycleDuration()}ms`\n  };\n\n  return (\n    <div\n      data-testid=\"hero-slider\"\n      className={composeCssClasses('hero-slider', className)}\n      ref={elementObservedRef}\n    >\n      <div\n        data-testid=\"hero-slider-wrapper\"\n        ref={layout.slider}\n        className={composeCssClasses(\n          'hero-slider-wrapper',\n          HeroSliderModuleCss.Wrapper\n        )}\n        onTouchStart={onTouchStartHandler}\n        onTouchMove={onTouchMoveHandler}\n        onTouchEnd={onTouchEndHandler}\n        onMouseMoveCapture={debounce}\n        style={{\n          ...(cssVariables as React.CSSProperties),\n          ...style,\n          width,\n          height\n        }}\n      >\n        {children}\n        {shouldDisplayButtons && <Buttons />}\n      </div>\n    </div>\n  );\n}\n\nexport default function HeroSlider(\n  props: React.PropsWithChildren<HeroSliderProps>\n) {\n  return (\n    <LayoutProvider>\n      <ManagerProvider manager={props.manager}>\n        <SettingsProvider settings={props.settings}>\n          <ControllerProvider controller={props.controller}>\n            <AccessibilityProvider accessibility={props.accessibility}>\n              <AnimationsProvider animations={props.animations}>\n                <IntersectionObserverProvider>\n                  <AutoplayProvider autoplay={props.autoplay}>\n                    <Orchestrator\n                      className={props.className}\n                      width={props.width}\n                      height={props.height}\n                      style={props.style}\n                    >\n                      {props.children}\n                    </Orchestrator>\n                  </AutoplayProvider>\n                </IntersectionObserverProvider>\n              </AnimationsProvider>\n            </AccessibilityProvider>\n          </ControllerProvider>\n        </SettingsProvider>\n      </ManagerProvider>\n    </LayoutProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}