{"version":3,"sources":["../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","pages/admin/AddCity.tsx"],"names":["defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","concat","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","Container","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","componentName","ContainerRoot","_ref","theme","_objectSpread","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","value","unit","_ref4","Math","max","xs","React","ref","className","_props$component","component","_props$disableGutters","_props$fixed","_props$maxWidth","other","classes","_objectWithoutProperties","_excluded","slots","composeClasses","generateUtilityClass","useUtilityClasses","_jsx","as","clsx","createContainer","styled","useStyles","makeStyles","flexGrow","position","top","left","minHeight","btnRegister","marginTop","padding","checkboxWrapper","justifyContent","textField","margin","textAlign","fontSize","borderRadius","AddCity","history","useHistory","dispatch","useDispatch","_React$useState","useState","_React$useState2","_slicedToArray","setCities","City","useSelector","state","admin","validationSchema","Yup","nameCity","required","useEffect","getCity","_City$cities","cities","filter","city","style","children","Formik","initialValues","onSubmit","setSubmitting","addCity","role","_ref2","isSubmitting","handleSubmit","handleChange","handleBlur","errors","touched","noValidate","_jsxs","Box","flexDirection","alignItems","backgroundColor","Typography","fontWeight","FormControl","FormLabel","TextField","fullWidth","variant","onChange","onBlur","placeholder","inputProps","helperText","error","Boolean","Button","type","disabled","color","height","textTransform","border","CircularProgress","size","onClick","goBack"],"mappings":"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","file":"static/js/34.bcd6c551.chunk.js","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block',\n    // Fix IE11 layout when used with main.\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","import PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ICity } from \"../../redux/types/city\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux/reducers\";\r\n\r\nimport { addCity, getCity } from \"../../redux/actions/admin\";\r\n\r\nimport { Box, Container, FormControl, FormLabel, TextField, Typography } from \"@mui/material\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        position: \"absolute\",\r\n        top: \"0\",\r\n        left: \"0\",\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n    },\r\n    btnRegister: {\r\n        marginTop: theme.spacing(2),\r\n        padding: theme.spacing(1, 2),\r\n    },\r\n    checkboxWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        margin: theme.spacing(1.5, 0),\r\n        textAlign: 'left',\r\n        fontSize: '13px',\r\n        \"& .MuiInputBase-root\": {\r\n            \"& fieldset\": {\r\n                borderRadius: \"10px\",\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\ninterface IInitialValues {\r\n    nameCity: string;\r\n}\r\n\r\nconst AddCity: React.FC = (): JSX.Element => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ADMIN = \"640cbf0573094a5e2e001859\";\r\n\r\n    const [cities, setCities] = React.useState<ICity[]>([]);\r\n    const City = useSelector((state: RootState) => state.admin);\r\n\r\n    const initialValues: IInitialValues = {\r\n        nameCity: \"\",\r\n    };\r\n\r\n    const onHandleSubmit = (values: IInitialValues, { setSubmitting }: any) => {\r\n        dispatch(addCity({ ...values, role: ADMIN }, setSubmitting))\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        nameCity: Yup.string().required(\"Invalid nameCity!\"),\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        dispatch(getCity());\r\n    }, [dispatch]);\r\n\r\n    React.useEffect(() => {\r\n        setCities(() => City?.cities?.filter((city: any) => city.nameCity));\r\n    }, [City]);\r\n\r\n    return (\r\n        <Container style={{ maxWidth: 600 }}>\r\n\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onHandleSubmit}\r\n            >\r\n                {({ isSubmitting, handleSubmit, values, handleChange, handleBlur, errors, touched }) => (\r\n                    <form noValidate onSubmit={handleSubmit}>\r\n                        <Box display={\"flex\"}\r\n                            flexDirection={'column'}\r\n                            justifyContent={'center'}\r\n                            alignItems={'center'}\r\n                            style={{ backgroundColor: 'white', padding: '40px 0px', borderRadius: '20px' }}>\r\n\r\n                            <Typography style={{ fontWeight: \"bold\", fontSize: \"18px\", margin: 20 }} >\r\n                                Thêm thành phố\r\n                            </Typography>\r\n\r\n                            <FormControl style={{ marginTop: 2 }} >\r\n                                <FormLabel style={{ fontWeight: \"bold\", fontSize: \"14px\", marginTop: 2 }}>\r\n                                    Tên thành phố\r\n                                </FormLabel>\r\n                                <TextField\r\n                                    style={{ width: 300, }}\r\n                                    className={classes.textField}\r\n                                    fullWidth\r\n                                    variant={'outlined'}\r\n                                    name='nameCity'\r\n                                    value={values.nameCity}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    placeholder='Nhập tên thành phố muốn thêm'\r\n                                    inputProps={{\r\n                                        style: {\r\n                                            fontSize: '12px',\r\n                                        }\r\n                                    }}\r\n                                    helperText={touched.nameCity ? errors.nameCity : \"\"}\r\n                                    error={touched.nameCity ? Boolean(errors.nameCity) : false} />\r\n\r\n                            </FormControl>\r\n                            <Box marginTop={2}>\r\n                                <Button\r\n                                    type='submit'\r\n                                    disabled={isSubmitting}\r\n                                    style={{\r\n                                        color: \"rgb(33, 43, 54)\",\r\n                                        height: \"34px\",\r\n                                        width: \"120px\",\r\n                                        fontSize: \"12px\",\r\n                                        borderRadius: \"4px\",\r\n                                        fontWeight: 500,\r\n                                        textTransform: \"capitalize\",\r\n                                        border: '1px solid rgb(33, 43, 54)',\r\n                                        marginRight: 10\r\n                                    }}\r\n                                >\r\n                                    {isSubmitting ? <CircularProgress size='1rem' /> : \"Thêm Thành Phố\"}\r\n                                </Button>\r\n\r\n                                <Button style={{\r\n                                    color: \"#FF6969\",\r\n                                    height: \"34px\",\r\n                                    width: \"120px\",\r\n                                    fontSize: \"12px\",\r\n                                    fontWeight: 500,\r\n                                    borderRadius: \"4px\",\r\n                                    textTransform: \"capitalize\",\r\n                                    border: '1px solid #FF6969',\r\n\r\n                                }}\r\n                                    onClick={history.goBack}\r\n                                >Quay lại</Button>\r\n                            </Box>\r\n\r\n\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n\r\n\r\n\r\n\r\n\r\n        </Container >\r\n\r\n    );\r\n};\r\n\r\nexport default AddCity;\r\n"],"sourceRoot":""}