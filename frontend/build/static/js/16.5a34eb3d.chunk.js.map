{"version":3,"sources":["../node_modules/@mui/material/FormControl/useFormControl.js","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/formControlState.js","../node_modules/@mui/material/InputBase/utils.js","../node_modules/@mui/material/FormLabel/formLabelClasses.js","../node_modules/@mui/material/FormLabel/FormLabel.js","../node_modules/@mui/material/FormControl/formControlClasses.js","../node_modules/@mui/material/FormControl/FormControl.js","../node_modules/@mui/icons-material/Person.js","../node_modules/@mui/icons-material/Password.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"names":["useFormControl","React","FormControlContext","undefined","formControlState","_ref","props","states","muiFormControl","reduce","acc","state","hasValue","value","Array","isArray","length","isFilled","obj","SSR","arguments","defaultValue","isAdornedStart","startAdornment","getFormLabelUtilityClasses","slot","generateUtilityClass","formLabelClasses","generateUtilityClasses","FormLabelRoot","styled","name","overridesResolver","styles","ownerState","_objectSpread","root","color","colorSecondary","filled","_ref2","_objectSpread2","theme","vars","palette","text","secondary","typography","body1","lineHeight","padding","position","_defineProperty","concat","focused","main","disabled","error","AsteriskComponent","asterisk","_ref3","FormLabel","inProps","ref","useThemeProps","children","className","_props$component","component","other","required","_objectWithoutProperties","_excluded","fcs","classes","slots","capitalize","composeClasses","useUtilityClasses","_jsxs","as","clsx","getFormControlUtilityClasses","FormControlRoot","margin","fullWidth","display","flexDirection","minWidth","border","verticalAlign","marginTop","marginBottom","width","FormControl","_props$color","_props$disabled","_props$error","visuallyFocused","_props$fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","_props$size","size","_props$variant","variant","_React$useState","initialAdornedStart","forEach","child","isMuiElement","input","_React$useState2","_slicedToArray","adornedStart","setAdornedStart","_React$useState3","initialFilled","inputProps","_React$useState4","setFilled","_React$useState5","_React$useState6","focusedState","setFocused","registerEffect","childContext","onBlur","onEmpty","onFilled","onFocus","_jsx","Provider","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body2","Typography","_props$align","align","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","Component","_extends","withStyles","caption","button","overline","srOnly","height","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","colorInherit","colorPrimary","primary","colorTextPrimary","colorTextSecondary","colorError","displayInline","displayBlock"],"mappings":"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","file":"static/js/16.5a34eb3d.chunk.js","sourcesContent":["import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n}\n\n// Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\nexport function isFilled(obj, SSR = false) {\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n}\n\n// Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormLabel', slot);\n}\nconst formLabelClasses = generateUtilityClasses('MuiFormLabel', ['root', 'colorSecondary', 'focused', 'disabled', 'error', 'filled', 'required', 'asterisk']);\nexport default formLabelClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = styled('label', {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return {\n      ...styles.root,\n      ...(ownerState.color === 'secondary' && styles.colorSecondary),\n      ...(ownerState.filled && styles.filled)\n    };\n  }\n})(({\n  theme,\n  ownerState\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  ...theme.typography.body1,\n  lineHeight: '1.4375em',\n  padding: 0,\n  position: 'relative',\n  [`&.${formLabelClasses.focused}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${formLabelClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.text.disabled\n  },\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(({\n  theme\n}) => ({\n  [`&.${formLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n    children,\n    className,\n    color,\n    component = 'label',\n    disabled,\n    error,\n    filled,\n    focused,\n    required,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const ownerState = {\n    ...props,\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, {\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      ownerState: ownerState,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'primary', 'secondary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormLabel;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormControlUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControl', slot);\n}\nconst formControlClasses = generateUtilityClasses('MuiFormControl', ['root', 'marginNone', 'marginNormal', 'marginDense', 'fullWidth', 'disabled']);\nexport default formControlClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nimport { getFormControlUtilityClasses } from './formControlClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', margin !== 'none' && `margin${capitalize(margin)}`, fullWidth && 'fullWidth']\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nconst FormControlRoot = styled('div', {\n  name: 'MuiFormControl',\n  slot: 'Root',\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return {\n      ...styles.root,\n      ...styles[`margin${capitalize(ownerState.margin)}`],\n      ...(ownerState.fullWidth && styles.fullWidth)\n    };\n  }\n})(({\n  ownerState\n}) => ({\n  display: 'inline-flex',\n  flexDirection: 'column',\n  position: 'relative',\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: 'top',\n  // Fix alignment issue on Safari.\n  ...(ownerState.margin === 'normal' && {\n    marginTop: 16,\n    marginBottom: 8\n  }),\n  ...(ownerState.margin === 'dense' && {\n    marginTop: 8,\n    marginBottom: 4\n  }),\n  ...(ownerState.fullWidth && {\n    width: '100%'\n  })\n}));\n\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/material-ui/react-text-field/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️ Only one `InputBase` can be used within a FormControl because it creates visual inconsistencies.\n * For instance, only one input can be focused at the same time, the state shouldn't be shared.\n */\nconst FormControl = /*#__PURE__*/React.forwardRef(function FormControl(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControl'\n  });\n  const {\n    children,\n    className,\n    color = 'primary',\n    component = 'div',\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = 'none',\n    required = false,\n    size = 'medium',\n    variant = 'outlined',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        const input = isMuiElement(child, ['Select']) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, child => {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== undefined && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const registeredInput = React.useRef(false);\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error(['MUI: There are multiple `InputBase` components inside a FormControl.', 'This creates visual inconsistencies, only use one `InputBase`.'].join('\\n'));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(FormControlRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: children\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: PropTypes.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default FormControl;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M2 17h20v2H2v-2zm1.15-4.05L4 11.47l.85 1.48 1.3-.75-.85-1.48H7v-1.5H5.3l.85-1.47L4.85 7 4 8.47 3.15 7l-1.3.75.85 1.47H1v1.5h1.7l-.85 1.48 1.3.75zm6.7-.75 1.3.75.85-1.48.85 1.48 1.3-.75-.85-1.48H15v-1.5h-1.7l.85-1.47-1.3-.75L12 8.47 11.15 7l-1.3.75.85 1.47H9v1.5h1.7l-.85 1.48zM23 9.22h-1.7l.85-1.47-1.3-.75L20 8.47 19.15 7l-1.3.75.85 1.47H17v1.5h1.7l-.85 1.48 1.3.75.85-1.48.85 1.48 1.3-.75-.85-1.48H23v-1.5z\"\n}), 'Password');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"sourceRoot":""}